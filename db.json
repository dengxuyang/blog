{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/images/code.jpg","path":"images/code.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/images/method-image.svg","path":"images/method-image.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"source/images/1614838164(1).jpg","path":"images/1614838164(1).jpg","modified":0,"renderable":0},{"_id":"source/images/1614839526(1).jpg","path":"images/1614839526(1).jpg","modified":0,"renderable":0},{"_id":"source/images/1614839967(1).jpg","path":"images/1614839967(1).jpg","modified":0,"renderable":0},{"_id":"source/images/1614840012(1).jpg","path":"images/1614840012(1).jpg","modified":0,"renderable":0},{"_id":"source/images/1614841485(1).jpg","path":"images/1614841485(1).jpg","modified":0,"renderable":0},{"_id":"source/images/1614841701(1).jpg","path":"images/1614841701(1).jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/vue学习笔记.md","hash":"f4f8947fe0ff63e45bd40a3f738af9a5265816a5","modified":1614860423658},{"_id":"source/_posts/电子书抓取脚本.md","hash":"7d02e08294e2d3a772f8bb30664cc453946c3c3d","modified":1614860423659},{"_id":"source/categories/index.md","hash":"0435f82966586f2c3abf4779f3c58ecb0944fd7a","modified":1614860423660},{"_id":"themes/hexo-theme-keep/.editorconfig","hash":"26a27140a04ad1873639b19f8240fb2bae367878","modified":1611379376000},{"_id":"themes/hexo-theme-keep/.gitignore","hash":"9f5eebec6128f0029691c28190673d959cb0f234","modified":1611379376000},{"_id":"themes/hexo-theme-keep/LICENSE","hash":"c6b9025c1a23ad625f9a151f51d55c82d7197d04","modified":1611379376000},{"_id":"themes/hexo-theme-keep/README.md","hash":"2b83e041690b805be2b89367de168ff29e1b27bd","modified":1611379376000},{"_id":"themes/hexo-theme-keep/_config.yml","hash":"b053a49af5e586c447c18757d8b60eef7d5b228e","modified":1611460013000},{"_id":"themes/hexo-theme-keep/package.json","hash":"13d403969b72dc4578a59d3985e32d352ebcbae1","modified":1611379376000},{"_id":"themes/hexo-theme-keep/docs/README_zh-CN.md","hash":"bc5c9a6d209f1f722709268dd8f65db0348abb9e","modified":1611379376000},{"_id":"themes/hexo-theme-keep/languages/en.yml","hash":"68a0ec7f460302591b10f7d9fc7281deea8f310b","modified":1611379376000},{"_id":"themes/hexo-theme-keep/languages/zh-CN.yml","hash":"eeae69704efe5b3fa05306505fa28efca7e49ccb","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/archive-content.ejs","hash":"89e256133a128858702f3bd0a6cf8330f5a8f2f7","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/article-content.ejs","hash":"0059802ac681bf3aad593045101d364c6e9b2b5e","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/category-content.ejs","hash":"2b02be4d5c2bfddabf2c8d00904780b1f42fc64d","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/category-list.ejs","hash":"17ea257cb28fb63c1e1650c157541d90a4f7fba5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/home-content.ejs","hash":"c6897b9a1f88f157bf9cb935fba43a13911871eb","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/index.ejs","hash":"d04b5608fc801f00e247e7355c89a8643dc76914","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/layout.ejs","hash":"a2d3f1ee6a79810de41d80b80c087f675f86ef84","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/page.ejs","hash":"ae2609cd0de2544e1316d16c4267dab9b3ef9138","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/tag-content.ejs","hash":"38c65415ac57cb4697fd2f6b2b68589a6121e8e6","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1611379376000},{"_id":"themes/hexo-theme-keep/scripts/use-source-data.js","hash":"0dcab564f400e1775af8e839d9f1a219d0c003bb","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/archive-list.ejs","hash":"fc6994ec2ade2f6e3a3ea936a119c691a2d2f015","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/article-copyright-info.ejs","hash":"2fec371f5b6f97cc6fc242aced9baacce93a6f86","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/article-meta-info.ejs","hash":"152cbb3a3cd982e87bf6dbb755f9224238883e27","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/empty-page.ejs","hash":"d6f833026e87bfab17d1dfe5ad889953d7eaa06b","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/first-screen.ejs","hash":"e28d781dd6868b08e9007393495fae75c6e502aa","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/footer.ejs","hash":"0513b56840316e5efd5f9029eb31c1abfc15a91e","modified":1611415092000},{"_id":"themes/hexo-theme-keep/layout/_partial/friends-link.ejs","hash":"bb3d9bb7dd916a56acd3525d40c4671de46becf0","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/head.ejs","hash":"2f3ca69b45f1d825e63f1c81d55cd6c7e29e8959","modified":1614860423670},{"_id":"themes/hexo-theme-keep/layout/_partial/header.ejs","hash":"c08f2594a51742cad99d2bda802bf23989e3222c","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/home-article-meta-info.ejs","hash":"61901dd8451d9bf526240310db200ce17595fcd4","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/image-viewer.ejs","hash":"c30d3f046035b6c63ee90fc961f67cbc2d6073af","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/local-search.ejs","hash":"747cd0ac75f31c9837abcbf5e06eac5501089d96","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/paginator.ejs","hash":"4183e4991a30132010d6428c9b2c51d198d268d8","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/post-tools.ejs","hash":"32ac5365a12bed6d35cd082d000ae7b3744482dd","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/progress-bar.ejs","hash":"791c78e36e4191f5a738964d4fba545be2649cea","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/scripts.ejs","hash":"ea08752ab79d3c61e31fae9dd49afc0feff6f36a","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/side-tools.ejs","hash":"3439e47a03651a3540541ba85d9ab0c9b456fc04","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/tagcloud.ejs","hash":"3c1f80ec34a4db4d242b8b1c024ffa8de0ddac78","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/toc.ejs","hash":"27844ed7c138d907c25d0e198f5425fe0c0299b2","modified":1611379376000},{"_id":"themes/hexo-theme-keep/scripts/filters/lazyload-handle.js","hash":"0c23c174bcd6be9ed3a75039db5d7c337be485f9","modified":1611379376000},{"_id":"themes/hexo-theme-keep/scripts/filters/link-handle.js","hash":"4c8fd067eaf4cce4776413abe90a9ea3f1f04bc7","modified":1611379376000},{"_id":"themes/hexo-theme-keep/scripts/helpers/export-config.js","hash":"e5bc2ae3aa1e5bd2d847e1499a1a37a5f147518c","modified":1611379376000},{"_id":"themes/hexo-theme-keep/scripts/helpers/helper.js","hash":"8b932ab3a7c792caf8905726f0cb438170c47da5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/font-awesome.min.css","hash":"2c2236d61417d354b5cbbc907dfc9c0eb1325a7f","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/style.styl","hash":"a78ecb86ecb4ad665578e1d428b884abfe7c2647","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/images/bg.svg","hash":"fe49c289a1110973a1c089fe4a9565eb06ecc036","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/images/method-image.svg","hash":"b17758b735bffa33ce64c6d0bb553e5cfaaeb7bf","modified":1614860423695},{"_id":"themes/hexo-theme-keep/source/js/back2top.js","hash":"8365b2be0d5a283b1a95f25afe6c514c125d23f5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/code-copy.js","hash":"0fa4f5c6b1b4fa2dd059a3fabd975cb5236aa68e","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/dark-light-toggle.js","hash":"21f4c654ea28acc63672285cedc32c67ebff97ad","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/header-shrink.js","hash":"5a95ba1079638342689aa31ae331b0ad29423cfb","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/lazyload.js","hash":"9b1d7be063feff3a4268190575959a81604cef95","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/left-side-toggle.js","hash":"3aed28393cbe10de726dad7d108c92ba0f7a60ac","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/local-search.js","hash":"a76838dbc9b3dc683b7653d0e60c2a824316d598","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/main.js","hash":"7ac2a337c89efea7494b8a8424181bcba0497a84","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/toc.js","hash":"72abc3be9484ac262b84a7b465ecd71347eeb0b7","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/utils.js","hash":"760dc0bc48834dace175c223116fd80aff85b5af","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/comment/comment.ejs","hash":"ed419cf963cff8e7c5205b70e07b233e92f55725","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/comment/gitalk.ejs","hash":"d8e673884a13dc3828c0c6afcf6ef120ef40df73","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/comment/twikoo.ejs","hash":"1d071dbd724dd2966d86b615532aaca27d12ed59","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/comment/valine.ejs","hash":"762686672afa2f1ac443e12eba214409e62d3d55","modified":1611379376000},{"_id":"themes/hexo-theme-keep/layout/_partial/pjax/pjax.ejs","hash":"29d6c1e790889b2d628b56198540b326160b0f79","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/animated.styl","hash":"baaf13dd9929c8f9e8b1063ff189a6e8e3cb812b","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/basic.styl","hash":"df9430ae7431312758595e3bf4f2d3e501374882","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/keep-theme.styl","hash":"986ba48b328f86eb43bbf191abfa68176dced49e","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/markdown.styl","hash":"172eaadb393d77e6fd913be54cae1bd3e223d44a","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/variables.styl","hash":"53f0844e1df114d9f34edccbca7d5fcc4a5d06dd","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/archive-content.styl","hash":"254ca2715de67d5783adfae40723a7917b6d9f8a","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/article-content.styl","hash":"c017f270badef9f4fe8246b991ec2c298f44733f","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/category-content.styl","hash":"23e588929afdfadbcbfee691ca1c4c702a385b70","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/category-list.styl","hash":"ff16bae44d0c48a038931b69bf5a7481df8d5cb5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/home-content.styl","hash":"b73af388666e20e86f201d6f7c49a0d98ae3c2be","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/page.styl","hash":"46f587c857e84095c9f49b9eb1ad23cdcdd33d27","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/tag-content.styl","hash":"e8e76f44b863235388bb53753d9facb4490378f5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/libs/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/codeblock/code-theme.styl","hash":"82dc31305762abbb335b9a8421305432826d98f5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/codeblock/copy-code.styl","hash":"eac367ec543527a7533490fa19b451a452684614","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/common/codeblock/highlight.styl","hash":"081f08ed399c4fc6227ab15109595a211693462b","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/archive-list.styl","hash":"458478ed32702618f1105a418d506caf322c0d2d","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/article-copyright-info.styl","hash":"ae286cb8c7e788a7d393774c9e9c394352e48e72","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/article-meta-info.styl","hash":"a00b390368064528a29bb8e2f086afdf5c59cd22","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/empty-page.styl","hash":"e2837e4c187cb6097b41ed6a6ba46fd796ec2617","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/first-screen.styl","hash":"9422e7d052f9e8a81d5a9acf12af9670fe2c41bb","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/footer.styl","hash":"0610a37f2eba1b6ee2ed138e3367d80be55c9d7d","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/header.styl","hash":"cfccf51ee8858f9426deb4e5ae848e1e693dbec5","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/image-viewer.styl","hash":"fb82ac6589304cf1e3ed7ff2904108641882ddbc","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/local-search.styl","hash":"a381afa2de855d968810c4f6680436fd31c63d55","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/paginator.styl","hash":"2fbe611351cdeee678626c22aa268132693936b2","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/post-tools.styl","hash":"7c642dfdd54ed60aadb2f162e25c4fc5720716b7","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/progress-bar.styl","hash":"c2b9474d130df3605578b77d76c604234a2b0f6f","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/side-tools.styl","hash":"79e20553b484afafce44186e63bb4f04a244b625","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/tagcloud.styl","hash":"2917237c52a496a2de790a030d6c498bf794c8cf","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/toc.styl","hash":"c19d5833234c510ac1b8358cfcb7e33af29c3f6d","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/comment/comment.styl","hash":"e931eb3da7059053f59c8168eba7f0d9c5b9e591","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/comment/gitalk.styl","hash":"70148ada1bd5748202430a452b252104a045696e","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/comment/twikoo.styl","hash":"9f87a28e834d160326d0b84ea3cbb09bf2386f17","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/css/layout/_partial/comment/valine.styl","hash":"dbff6bc6ecb6a20068047e6f7532e1d2df627929","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/images/code.jpg","hash":"a8bc1be1ff758ca9a1ebe7bce601195d4af5f945","modified":1611383971000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1611379376000},{"_id":"themes/hexo-theme-keep/source/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1611379376000},{"_id":"public/categories/index.html","hash":"d0e0aca65480d35e9895d957c4a6eb3c2922fc77","modified":1614860516691},{"_id":"public/2021/01/23/电子书抓取脚本/index.html","hash":"886ed6322fa80981d68ce34e41e5fe7edb3261c6","modified":1614860516691},{"_id":"public/2021/01/23/vue学习笔记/index.html","hash":"9f4986924255b396b571a73874e9957482099ebe","modified":1614860516691},{"_id":"public/archives/index.html","hash":"4fc796654fa6775f933eaa6d13d812b2955d5260","modified":1614860516691},{"_id":"public/archives/2021/index.html","hash":"a1382ee75abd93960fe77ab000c32fc94318c678","modified":1614860516691},{"_id":"public/archives/2021/01/index.html","hash":"0742871b6876b949c6445bdc786ff820ad27d931","modified":1614860516691},{"_id":"public/categories/python/index.html","hash":"d969683dcbf0808a1608952070d56f4793b7fa1a","modified":1614860516691},{"_id":"public/categories/vue/index.html","hash":"c3c2a120b775279ff0c116a3f676392d6379bd54","modified":1614860516691},{"_id":"public/index.html","hash":"7f1f6b0fd7056bf389b88a462f426049fdd41042","modified":1614860516691},{"_id":"public/images/bg.svg","hash":"fe49c289a1110973a1c089fe4a9565eb06ecc036","modified":1614860516691},{"_id":"public/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1614860516691},{"_id":"public/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1614860516691},{"_id":"public/images/method-image.svg","hash":"b17758b735bffa33ce64c6d0bb553e5cfaaeb7bf","modified":1614860516691},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1614860516691},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1614860516691},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1614860516691},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1614860516691},{"_id":"public/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1614860516691},{"_id":"public/images/code.jpg","hash":"a8bc1be1ff758ca9a1ebe7bce601195d4af5f945","modified":1614860516691},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1614860516691},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1614860516691},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1614860516691},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1614860516691},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1614860516691},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1614860516691},{"_id":"public/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1614860516691},{"_id":"public/css/style.css","hash":"b7292c15dc85bb855957aacd846830956b2dd849","modified":1614860516691},{"_id":"public/js/back2top.js","hash":"6ebe3b8b2e1805d6c8c5d6e072486814617d1174","modified":1614860516691},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1614860516691},{"_id":"public/js/dark-light-toggle.js","hash":"2f1debecc80b741320c7c0a40a0e945b6aaaab85","modified":1614860516691},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1614860516691},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1614860516691},{"_id":"public/js/left-side-toggle.js","hash":"f0b53b6b4ea5aa16ac8d7b5b20b591c00b4520c5","modified":1614860516691},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1614860516691},{"_id":"public/js/main.js","hash":"7f5666d7250a916fa6c32e3d84adcfebd50cec60","modified":1614860516691},{"_id":"public/js/toc.js","hash":"bd3928d9e0de3393fcc3a636332789542a574b21","modified":1614860516691},{"_id":"public/js/utils.js","hash":"2e8ea20914e81d065cf7e5dc15ad6aae04f97cef","modified":1614860516691},{"_id":"public/css/common/animated.css","hash":"061e145f3c7ac90dd305bd5260aaee71b1833167","modified":1614860516691},{"_id":"public/css/common/basic.css","hash":"080dc71ef727c598e83dae9136ff447cf70330bf","modified":1614860516691},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1614860516691},{"_id":"public/css/common/markdown.css","hash":"3a3145b04fb0ff536661ae470a8c73cf6ab38d62","modified":1614860516691},{"_id":"public/css/common/variables.css","hash":"44943632ef7801c9133a344e136103f9ccd9ddc0","modified":1614860516691},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1614860516691},{"_id":"public/css/layout/article-content.css","hash":"762af1ea84ee0bc4960d3be469348ef418e138c6","modified":1614860516691},{"_id":"public/css/layout/category-content.css","hash":"6e84147c7a31b7fff95152019ea123221998f344","modified":1614860516691},{"_id":"public/css/layout/category-list.css","hash":"5bd832092ed8c2f0db62573df57926a94f7ca2c0","modified":1614860516691},{"_id":"public/css/layout/home-content.css","hash":"3fade14650193ceebb8daff2565a0727961fe466","modified":1614860516691},{"_id":"public/css/layout/page.css","hash":"dc57eee2b360ad0e9910d69653d547f033dbbd4c","modified":1614860516691},{"_id":"public/css/layout/tag-content.css","hash":"9fd4d042c74142c6d72f9938d938dd6ef1f66429","modified":1614860516691},{"_id":"public/css/common/codeblock/code-theme.css","hash":"fe69e4794cffc9c8d579c166a4cebe400140e519","modified":1614860516691},{"_id":"public/css/common/codeblock/copy-code.css","hash":"fa5f022395fe92b6daea063418a32f8c19be6168","modified":1614860516691},{"_id":"public/css/common/codeblock/highlight.css","hash":"975ae4f781a1ae1a88ebe337f3b082f8e3bd4b7b","modified":1614860516691},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1614860516691},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1614860516691},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1614860516691},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1614860516691},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1614860516691},{"_id":"public/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1614860516691},{"_id":"public/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1614860516691},{"_id":"source/_posts/git强制推送和拉取.md","hash":"70ab8f2f1f3f9a0974e8ce0921bfa5382162f7f8","modified":1614860423658},{"_id":"source/_posts/pythonScrapy.md","hash":"76d53b4cd8be950e658c3e394f6e5f5d66209520","modified":1614860423658},{"_id":"source/_posts/公用代码片段.md","hash":"9264e6b870de54820d31de5f04225fb730457b0f","modified":1614860423659},{"_id":"source/_posts/抓包工具charles的使用.md","hash":"c2c74d1248c246034e784634f47903c3db93fe82","modified":1614860423659},{"_id":"source/images/1614838164(1).jpg","hash":"82c8680b80f1e2eb063d88155b80cb7b4dcc5040","modified":1614860423660},{"_id":"source/images/1614839526(1).jpg","hash":"7b4b42298862e8d57c3d73db79449d507d9c5a22","modified":1614860423661},{"_id":"source/images/1614839967(1).jpg","hash":"46dd9fc67f388f537b0e2ca898cd4edceae7c575","modified":1614860423661},{"_id":"source/images/1614840012(1).jpg","hash":"fa7ce2454b56926f7060f35f17f18d4a55167336","modified":1614860423662},{"_id":"source/images/1614841485(1).jpg","hash":"317f99cb62d9d5e0595175ea313efa9f975cb54f","modified":1614860423662},{"_id":"source/images/1614841701(1).jpg","hash":"acf295372d05b322778ef6c4859beba61dfbab76","modified":1614860423663},{"_id":"public/2021/03/04/抓包工具charles的使用/index.html","hash":"b452889f6a6b71654e2c5e275b71618483d46124","modified":1614860516691},{"_id":"public/2021/01/26/git强制推送和拉取/index.html","hash":"88eefcbdaeb58d48bcecc92984438a766c7191c7","modified":1614860516691},{"_id":"public/archives/2021/02/index.html","hash":"203280a52bea76c4faf18259def737dbd37c45bf","modified":1614860516691},{"_id":"public/archives/2021/03/index.html","hash":"0dce4bb4cf316c63b40387236dacccdd3e13fae7","modified":1614860516691},{"_id":"public/categories/开发工具/index.html","hash":"2c3234db5c7cdf7043d99c7c913c5780e22b0031","modified":1614860516691},{"_id":"public/categories/js/index.html","hash":"a1e711311cfcadadc2e03be2aea348b4eada82e7","modified":1614860516691},{"_id":"public/tags/python/index.html","hash":"4ab52b3e5bcb11e8db02c753a58a6df9456d030e","modified":1614860516691},{"_id":"public/2021/02/23/pythonScrapy/index.html","hash":"5c4714e3cd178a40ae841391d8791b77c8815d06","modified":1614860516691},{"_id":"public/2021/01/27/公用代码片段/index.html","hash":"2ca9c2c53cb20ebe1392f32e497c607076d02649","modified":1614860516691},{"_id":"public/images/1614838164(1).jpg","hash":"82c8680b80f1e2eb063d88155b80cb7b4dcc5040","modified":1614860516691},{"_id":"public/images/1614839526(1).jpg","hash":"7b4b42298862e8d57c3d73db79449d507d9c5a22","modified":1614860516691},{"_id":"public/images/1614840012(1).jpg","hash":"fa7ce2454b56926f7060f35f17f18d4a55167336","modified":1614860516691},{"_id":"public/images/1614839967(1).jpg","hash":"46dd9fc67f388f537b0e2ca898cd4edceae7c575","modified":1614860516691},{"_id":"public/images/1614841485(1).jpg","hash":"317f99cb62d9d5e0595175ea313efa9f975cb54f","modified":1614860516691},{"_id":"public/images/1614841701(1).jpg","hash":"acf295372d05b322778ef6c4859beba61dfbab76","modified":1614860516691}],"Category":[{"name":"python","_id":"ckkam8u7p0002s2wh2ero6i5p"},{"name":"vue","_id":"ckkam8u830005s2whhmdwh557"},{"name":"开发工具","_id":"ckluu99kz0002kwu42iwlc243"},{"name":"js","_id":"ckluu99l40007kwu49ghu22w5"}],"Data":[],"Page":[{"title":"categories","date":"2021-01-24T03:59:32.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-01-24 11:59:32\n---\n","updated":"2021-03-04T12:20:23.660Z","path":"categories/index.html","_id":"ckkam8u7d0000s2wh4ci386st","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"电子书抓取脚本","date":"2021-01-23T13:55:19.000Z","_content":"\"留作纪念，仅供学习\"                                                                                                                                          \n \n\n```python\n#python 版本 2.7.18 \nimport sys\nreload(sys) \nsys.setdefaultencoding('utf-8')\nimport random\nimport requests\nimport re\nimport os\nimport time\nimport sys\nimport datetime\nheader = [\n{'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36'},\n{'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'},\n{'User-Agent':'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)'},\n{'User-Agent':'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'},\n{'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'}]\n\n# header 是用来伪装成浏览器发送请求，一般加上最好，header 信息可以通过浏览器查看，也可在网上搜索得到。\n\nfor x in range(8427249,8429942):\n    u = str(x) \n    print('当前动态URL：'.decode('utf-8').encode('gbk')+'.......................'+datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")+'..............'+u+'')    \n    #print(text_1)\n    attempts = 0\n    success = False\n    while attempts < 50 and not success:\n        try:\n            req = requests.get('需要抓取的网址'+ u +'.html',headers = header[random.randint(0,4)], timeout=60)# 向目标网站发送 get 请求 \n            success = True\n        except:\n            attempts += 1\n            print('抛出异常.......重试中..................'.decode('utf-8').encode('gbk')+datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")+'')\n            time.sleep(10)\n            if attempts == 50:\n                break\n    # 永久等待\n   \n    result = req.content\n    result = result.decode('gbk')    #  查看网页源代码 看到 charset=gbk，即网页是用的 gbk 编码，故要用 gkb 的编码方式来解码，否则中文就会乱码。\n    # print(result)\n    title_re = re.compile(r'<h1>(.*?)</h1>') \n    title = re.findall(title_re,result)  \n    #print(title)\n    text_re = re.compile(r'<div id=\"htmlContent\" class=\"contentbox clear\">([\\s\\S]*?)</div>')\n    text = re.findall(text_re,result)\n    text = '\\r\\n'.join(text)  # 把两部分的正文连接成同一个个字符串\n    text = text.split('\\r\\n')\n    title = title[0]\n    text.insert(0,title)# 插入标题\n    #print(text)\n    text_1 = []     # 添加一个空列表，用来装处理后的正文\n    for sentence in text:\n        sentence = sentence.strip()     # 去掉每一句两边的空格\n        if ' ' in sentence:\n            sentence = sentence.replace(' ','')    # 去掉句子中的  \n            if '<br />' in sentence:\n                sentence = sentence.replace('<br />','')    # 去掉句子中的 <br />\n                text_1.append(sentence)\n            else:\n                text_1.append(sentence)\n                \n        elif '<br />' in sentence:\n            sentence = sentence.replace('<br />','')\n            text_1.append(sentence)\n        elif '-->><p class=\"text-danger text-center mg0\">本章未完，点击下一页继续阅读</p>' in sentence:\n           \n            text_1.append(sentence)\n        else:\n            text_1.append(sentence)\n            count = text_1.count('')        # 统计列表中的空字符串\n    for i in range(count):\n        text_1.remove('')           # 移除所有的空字符串\n    #print(text_1)\n    \n    file = open('./test.txt','a')\n    for i in range(len(text_1)):\n        s = str(text_1[i]).replace('[','').replace(']','')#去除[],这两行按数据不同，可以选择\n        s = s.replace(\"'\",'').replace(',','').replace('&nbsp;&nbsp;&nbsp;&nbsp;','') +'\\n'   #去除单引号，逗号，每行末尾追加换行符\n        file.write(s)\n    file.close()\n    print('抓取成功!'.decode('utf-8').encode('gbk')+'..............'+datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")+'')\n    time.sleep(10)\n```","source":"_posts/电子书抓取脚本.md","raw":"---\ntitle: 电子书抓取脚本\ndate: 2021-01-23 21:55:19\ntags:\ncategories:\n- python\n---\n\"留作纪念，仅供学习\"                                                                                                                                          \n \n\n```python\n#python 版本 2.7.18 \nimport sys\nreload(sys) \nsys.setdefaultencoding('utf-8')\nimport random\nimport requests\nimport re\nimport os\nimport time\nimport sys\nimport datetime\nheader = [\n{'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36'},\n{'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'},\n{'User-Agent':'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)'},\n{'User-Agent':'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'},\n{'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'}]\n\n# header 是用来伪装成浏览器发送请求，一般加上最好，header 信息可以通过浏览器查看，也可在网上搜索得到。\n\nfor x in range(8427249,8429942):\n    u = str(x) \n    print('当前动态URL：'.decode('utf-8').encode('gbk')+'.......................'+datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")+'..............'+u+'')    \n    #print(text_1)\n    attempts = 0\n    success = False\n    while attempts < 50 and not success:\n        try:\n            req = requests.get('需要抓取的网址'+ u +'.html',headers = header[random.randint(0,4)], timeout=60)# 向目标网站发送 get 请求 \n            success = True\n        except:\n            attempts += 1\n            print('抛出异常.......重试中..................'.decode('utf-8').encode('gbk')+datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")+'')\n            time.sleep(10)\n            if attempts == 50:\n                break\n    # 永久等待\n   \n    result = req.content\n    result = result.decode('gbk')    #  查看网页源代码 看到 charset=gbk，即网页是用的 gbk 编码，故要用 gkb 的编码方式来解码，否则中文就会乱码。\n    # print(result)\n    title_re = re.compile(r'<h1>(.*?)</h1>') \n    title = re.findall(title_re,result)  \n    #print(title)\n    text_re = re.compile(r'<div id=\"htmlContent\" class=\"contentbox clear\">([\\s\\S]*?)</div>')\n    text = re.findall(text_re,result)\n    text = '\\r\\n'.join(text)  # 把两部分的正文连接成同一个个字符串\n    text = text.split('\\r\\n')\n    title = title[0]\n    text.insert(0,title)# 插入标题\n    #print(text)\n    text_1 = []     # 添加一个空列表，用来装处理后的正文\n    for sentence in text:\n        sentence = sentence.strip()     # 去掉每一句两边的空格\n        if ' ' in sentence:\n            sentence = sentence.replace(' ','')    # 去掉句子中的  \n            if '<br />' in sentence:\n                sentence = sentence.replace('<br />','')    # 去掉句子中的 <br />\n                text_1.append(sentence)\n            else:\n                text_1.append(sentence)\n                \n        elif '<br />' in sentence:\n            sentence = sentence.replace('<br />','')\n            text_1.append(sentence)\n        elif '-->><p class=\"text-danger text-center mg0\">本章未完，点击下一页继续阅读</p>' in sentence:\n           \n            text_1.append(sentence)\n        else:\n            text_1.append(sentence)\n            count = text_1.count('')        # 统计列表中的空字符串\n    for i in range(count):\n        text_1.remove('')           # 移除所有的空字符串\n    #print(text_1)\n    \n    file = open('./test.txt','a')\n    for i in range(len(text_1)):\n        s = str(text_1[i]).replace('[','').replace(']','')#去除[],这两行按数据不同，可以选择\n        s = s.replace(\"'\",'').replace(',','').replace('&nbsp;&nbsp;&nbsp;&nbsp;','') +'\\n'   #去除单引号，逗号，每行末尾追加换行符\n        file.write(s)\n    file.close()\n    print('抓取成功!'.decode('utf-8').encode('gbk')+'..............'+datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")+'')\n    time.sleep(10)\n```","slug":"电子书抓取脚本","published":1,"updated":"2021-03-04T12:20:23.659Z","_id":"ckkam8u7k0001s2wh7d4cbaam","comments":1,"layout":"post","photos":[],"link":"","content":"<p>“留作纪念，仅供学习”                                                                                                                                          </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python 版本 2.7.18 </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">reload(sys) </span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">header = [</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36&#x27;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># header 是用来伪装成浏览器发送请求，一般加上最好，header 信息可以通过浏览器查看，也可在网上搜索得到。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">8427249</span>,<span class=\"number\">8429942</span>):</span><br><span class=\"line\">    u = <span class=\"built_in\">str</span>(x) </span><br><span class=\"line\">    print(<span class=\"string\">&#x27;当前动态URL：&#x27;</span>.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>).encode(<span class=\"string\">&#x27;gbk&#x27;</span>)+<span class=\"string\">&#x27;.......................&#x27;</span>+datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)+<span class=\"string\">&#x27;..............&#x27;</span>+u+<span class=\"string\">&#x27;&#x27;</span>)    </span><br><span class=\"line\">    <span class=\"comment\">#print(text_1)</span></span><br><span class=\"line\">    attempts = <span class=\"number\">0</span></span><br><span class=\"line\">    success = <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> attempts &lt; <span class=\"number\">50</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> success:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            req = requests.get(<span class=\"string\">&#x27;需要抓取的网址&#x27;</span>+ u +<span class=\"string\">&#x27;.html&#x27;</span>,headers = header[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)], timeout=<span class=\"number\">60</span>)<span class=\"comment\"># 向目标网站发送 get 请求 </span></span><br><span class=\"line\">            success = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            attempts += <span class=\"number\">1</span></span><br><span class=\"line\">            print(<span class=\"string\">&#x27;抛出异常.......重试中..................&#x27;</span>.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>).encode(<span class=\"string\">&#x27;gbk&#x27;</span>)+datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)+<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            time.sleep(<span class=\"number\">10</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> attempts == <span class=\"number\">50</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># 永久等待</span></span><br><span class=\"line\">   </span><br><span class=\"line\">    result = req.content</span><br><span class=\"line\">    result = result.decode(<span class=\"string\">&#x27;gbk&#x27;</span>)    <span class=\"comment\">#  查看网页源代码 看到 charset=gbk，即网页是用的 gbk 编码，故要用 gkb 的编码方式来解码，否则中文就会乱码。</span></span><br><span class=\"line\">    <span class=\"comment\"># print(result)</span></span><br><span class=\"line\">    title_re = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&#x27;&lt;h1&gt;(.*?)&lt;/h1&gt;&#x27;</span>) </span><br><span class=\"line\">    title = re.findall(title_re,result)  </span><br><span class=\"line\">    <span class=\"comment\">#print(title)</span></span><br><span class=\"line\">    text_re = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&#x27;&lt;div id=&quot;htmlContent&quot; class=&quot;contentbox clear&quot;&gt;([\\s\\S]*?)&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\">    text = re.findall(text_re,result)</span><br><span class=\"line\">    text = <span class=\"string\">&#x27;\\r\\n&#x27;</span>.join(text)  <span class=\"comment\"># 把两部分的正文连接成同一个个字符串</span></span><br><span class=\"line\">    text = text.split(<span class=\"string\">&#x27;\\r\\n&#x27;</span>)</span><br><span class=\"line\">    title = title[<span class=\"number\">0</span>]</span><br><span class=\"line\">    text.insert(<span class=\"number\">0</span>,title)<span class=\"comment\"># 插入标题</span></span><br><span class=\"line\">    <span class=\"comment\">#print(text)</span></span><br><span class=\"line\">    text_1 = []     <span class=\"comment\"># 添加一个空列表，用来装处理后的正文</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> sentence <span class=\"keyword\">in</span> text:</span><br><span class=\"line\">        sentence = sentence.strip()     <span class=\"comment\"># 去掉每一句两边的空格</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">            sentence = sentence.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)    <span class=\"comment\"># 去掉句子中的  </span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">                sentence = sentence.replace(<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)    <span class=\"comment\"># 去掉句子中的 &lt;br /&gt;</span></span><br><span class=\"line\">                text_1.append(sentence)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                text_1.append(sentence)</span><br><span class=\"line\">                </span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">            sentence = sentence.replace(<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            text_1.append(sentence)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;--&gt;&gt;&lt;p class=&quot;text-danger text-center mg0&quot;&gt;本章未完，点击下一页继续阅读&lt;/p&gt;&#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">           </span><br><span class=\"line\">            text_1.append(sentence)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            text_1.append(sentence)</span><br><span class=\"line\">            count = text_1.count(<span class=\"string\">&#x27;&#x27;</span>)        <span class=\"comment\"># 统计列表中的空字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(count):</span><br><span class=\"line\">        text_1.remove(<span class=\"string\">&#x27;&#x27;</span>)           <span class=\"comment\"># 移除所有的空字符串</span></span><br><span class=\"line\">    <span class=\"comment\">#print(text_1)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./test.txt&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(text_1)):</span><br><span class=\"line\">        s = <span class=\"built_in\">str</span>(text_1[i]).replace(<span class=\"string\">&#x27;[&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;]&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)<span class=\"comment\">#去除[],这两行按数据不同，可以选择</span></span><br><span class=\"line\">        s = s.replace(<span class=\"string\">&quot;&#x27;&quot;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) +<span class=\"string\">&#x27;\\n&#x27;</span>   <span class=\"comment\">#去除单引号，逗号，每行末尾追加换行符</span></span><br><span class=\"line\">        file.write(s)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;抓取成功!&#x27;</span>.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>).encode(<span class=\"string\">&#x27;gbk&#x27;</span>)+<span class=\"string\">&#x27;..............&#x27;</span>+datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)+<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>“留作纪念，仅供学习”                                                                                                                                          </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python 版本 2.7.18 </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">reload(sys) </span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">header = [</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&#x27;</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36&#x27;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># header 是用来伪装成浏览器发送请求，一般加上最好，header 信息可以通过浏览器查看，也可在网上搜索得到。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">8427249</span>,<span class=\"number\">8429942</span>):</span><br><span class=\"line\">    u = <span class=\"built_in\">str</span>(x) </span><br><span class=\"line\">    print(<span class=\"string\">&#x27;当前动态URL：&#x27;</span>.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>).encode(<span class=\"string\">&#x27;gbk&#x27;</span>)+<span class=\"string\">&#x27;.......................&#x27;</span>+datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)+<span class=\"string\">&#x27;..............&#x27;</span>+u+<span class=\"string\">&#x27;&#x27;</span>)    </span><br><span class=\"line\">    <span class=\"comment\">#print(text_1)</span></span><br><span class=\"line\">    attempts = <span class=\"number\">0</span></span><br><span class=\"line\">    success = <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> attempts &lt; <span class=\"number\">50</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> success:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            req = requests.get(<span class=\"string\">&#x27;需要抓取的网址&#x27;</span>+ u +<span class=\"string\">&#x27;.html&#x27;</span>,headers = header[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)], timeout=<span class=\"number\">60</span>)<span class=\"comment\"># 向目标网站发送 get 请求 </span></span><br><span class=\"line\">            success = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            attempts += <span class=\"number\">1</span></span><br><span class=\"line\">            print(<span class=\"string\">&#x27;抛出异常.......重试中..................&#x27;</span>.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>).encode(<span class=\"string\">&#x27;gbk&#x27;</span>)+datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)+<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            time.sleep(<span class=\"number\">10</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> attempts == <span class=\"number\">50</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># 永久等待</span></span><br><span class=\"line\">   </span><br><span class=\"line\">    result = req.content</span><br><span class=\"line\">    result = result.decode(<span class=\"string\">&#x27;gbk&#x27;</span>)    <span class=\"comment\">#  查看网页源代码 看到 charset=gbk，即网页是用的 gbk 编码，故要用 gkb 的编码方式来解码，否则中文就会乱码。</span></span><br><span class=\"line\">    <span class=\"comment\"># print(result)</span></span><br><span class=\"line\">    title_re = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&#x27;&lt;h1&gt;(.*?)&lt;/h1&gt;&#x27;</span>) </span><br><span class=\"line\">    title = re.findall(title_re,result)  </span><br><span class=\"line\">    <span class=\"comment\">#print(title)</span></span><br><span class=\"line\">    text_re = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&#x27;&lt;div id=&quot;htmlContent&quot; class=&quot;contentbox clear&quot;&gt;([\\s\\S]*?)&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\">    text = re.findall(text_re,result)</span><br><span class=\"line\">    text = <span class=\"string\">&#x27;\\r\\n&#x27;</span>.join(text)  <span class=\"comment\"># 把两部分的正文连接成同一个个字符串</span></span><br><span class=\"line\">    text = text.split(<span class=\"string\">&#x27;\\r\\n&#x27;</span>)</span><br><span class=\"line\">    title = title[<span class=\"number\">0</span>]</span><br><span class=\"line\">    text.insert(<span class=\"number\">0</span>,title)<span class=\"comment\"># 插入标题</span></span><br><span class=\"line\">    <span class=\"comment\">#print(text)</span></span><br><span class=\"line\">    text_1 = []     <span class=\"comment\"># 添加一个空列表，用来装处理后的正文</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> sentence <span class=\"keyword\">in</span> text:</span><br><span class=\"line\">        sentence = sentence.strip()     <span class=\"comment\"># 去掉每一句两边的空格</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">            sentence = sentence.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)    <span class=\"comment\"># 去掉句子中的  </span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">                sentence = sentence.replace(<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)    <span class=\"comment\"># 去掉句子中的 &lt;br /&gt;</span></span><br><span class=\"line\">                text_1.append(sentence)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                text_1.append(sentence)</span><br><span class=\"line\">                </span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">            sentence = sentence.replace(<span class=\"string\">&#x27;&lt;br /&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            text_1.append(sentence)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;--&gt;&gt;&lt;p class=&quot;text-danger text-center mg0&quot;&gt;本章未完，点击下一页继续阅读&lt;/p&gt;&#x27;</span> <span class=\"keyword\">in</span> sentence:</span><br><span class=\"line\">           </span><br><span class=\"line\">            text_1.append(sentence)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            text_1.append(sentence)</span><br><span class=\"line\">            count = text_1.count(<span class=\"string\">&#x27;&#x27;</span>)        <span class=\"comment\"># 统计列表中的空字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(count):</span><br><span class=\"line\">        text_1.remove(<span class=\"string\">&#x27;&#x27;</span>)           <span class=\"comment\"># 移除所有的空字符串</span></span><br><span class=\"line\">    <span class=\"comment\">#print(text_1)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./test.txt&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(text_1)):</span><br><span class=\"line\">        s = <span class=\"built_in\">str</span>(text_1[i]).replace(<span class=\"string\">&#x27;[&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;]&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)<span class=\"comment\">#去除[],这两行按数据不同，可以选择</span></span><br><span class=\"line\">        s = s.replace(<span class=\"string\">&quot;&#x27;&quot;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) +<span class=\"string\">&#x27;\\n&#x27;</span>   <span class=\"comment\">#去除单引号，逗号，每行末尾追加换行符</span></span><br><span class=\"line\">        file.write(s)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;抓取成功!&#x27;</span>.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>).encode(<span class=\"string\">&#x27;gbk&#x27;</span>)+<span class=\"string\">&#x27;..............&#x27;</span>+datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)+<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>"},{"title":"vue学习笔记","date":"2021-01-23T13:00:03.000Z","_content":"\n“在我看来，春天里一棵小草生长，它没有什么目的。风起时一匹公马发情，它也没有什么目的。草长马发情，绝非表演给什么人看的，这就是存在本身。我要抱着草长马发情的伟大真诚去做一切事，而不是在人前羞羞答答地表演。在我看来，人都是为了要表演，失去了自己的存在。”   -----王小波\n\n## 0.1. 插值操作的语法和指令 \n1. mustache (使用双大括号进行插值操作) {{可以调用函数、表达式等}} **[语法]**  \n2. v-onece：只渲染一次数据，数据在改变时视图不会改变，后不接表达式。\n3. v-html：解析并插入html\n```html\n<!-- url指一个含html标签的变量 -->\n<div v-html=\"url\"></div>\n```\n4. v-text：将文本放在DOM上进行展示,接受一个string类型。\n```html\n<div v-text=\"message\"></div>\n```\n5. v-pre: 将标签中的元素，不做任何解析，原封不动的显示出来。  \n6. v-cloak：“斗篷”  在vue没加载之前，存在v-cloak属性，加载后消失\n```html\n<style>\n[v-cloak]{\n  display:none;\n}\n</style>\n<div v-cloak></div>\n```\n## 0.2. 绑定属性 \n1.  v-bind：可以绑定任何属性，常用动态绑定如src，href。语法糖：：  \n2. :class:{类名:boolean,类名:boolean}动态绑定class,当boolean为false的时候，DOM中不存该class **[对象语法]**\n```html\n<!-- 括号是不能省略的 -->\n<div :class=\"getClass()\"></div>\n<script>\nmethod:{\n  getclass(){\n     return {类名:boolean,类名:boolean}\n  }\n}\n</script>\n```\n* :class:['active','line'] **[数组语法]**，一般用于服务器返回的数据，不会经常使用。 \n\n ```html\n <!-- 练习 点击列表 改变列表class -->\n <template>\n  <div>\n    <ul>\n    <!--index==active  遍历的index与active 进行比较 数据驱动视图 -->\n      <li\n        :key=\"index\"\n        :class=\"{line:index==active}\"\n        @click=\"changeColor(index)\"\n        v-for=\"(m,index) in movies\"\n      >{{m}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      movies: [\"vue\", \"react\", \"angular\"],\n      active: 0,\n    };\n  },\n  methods: {\n    changeColor(index) {\n      this.active = index;\n    },\n  },\n};\n</script>\n\n<style>\n.line {\n  color: red;\n}\n</style>\n ``` \n3. :style:   \n**[对象语法]**  :style=\"{key(style属性名，可以使用驼峰标识 如font-size可以写成fontSize):value(属性值，不写'' vue会吧属性值解析成变量)}\"  \n**[数组语法]** :style=\"[style1,style2]\" **style1与style2为{属性名:属性值}，{属性名：属性值}**\n## 0.3. 计算属性 computed\n**某些情况我们可能会对数据进行转化或者合并到一起，这个时候就需要用到计算属性**  \n* 按照属性的方式给函数命名 如 \n```js\nfullName：function(){\nreturn fristName + lastName\n}  \n```\n\n**创建vue时可以在option中传入**  \n* el： \n* data： \n* methods：\n* computed：\n* 生命周期函数\n* 计算属性的getter和setter \n**每个计算属性中都包含getter和setter** \n```js\ncomputed:{\n  fullname:{\n    //使用get方法计算值\n    get:function(){\n     return 'abc'\n    },\n    //在给计算值赋值是调用get方法 一般时不使用 set方法是有参数的\n    set:function(newValue){\n      \n    }\n  }\n}\n```\n* 计算属性的缓存\n计算属性是有缓存的，会比methods性能更高，因为methods会多次调用，而在变量没有改变时computed只会调用一次。\n## 0.4. ES6语法（补充） js作者 Brendan Eich\nlet：块级作用域 当变量需要改变时\n* 变量作用域：变量在什么范围内是可用的 var是没有块级作用域的\n```js\n//无块级作用域，打印出的是第btn.length个按钮（错误的方式）\nfor(var i=0; i<btn.length; i++){\n   btn[i].addEventListener.('click',function(){\n     console.log('点击第'+i+'按钮')\n   })\n}\n//闭包可以解决该问题 \nfor(var i=0; i<btn.length; i++){\n  (function(num){\n  btn[i].addEventListener.('click',function(){\n     console.log('点击第'+ num +'按钮')\n   })\n  })(i)\n \n}\n //ES6 let \n  for(let i=0; i<btn.length; i++)\n   //相当于下面的大括号有自己的作用域\n  {\n   btn[i].addEventListener.('click',function()\n   {\n     console.log('点击第'+i+'按钮')\n   })\n   }\n```\nconst：将变量修饰成常量，不可以赋值。建议：优先使用const，只有需要改变某一标识符时才使用let。\n* 一旦给const 修饰的常量，不能进行修改。\n* 在使用const时，一定要进行赋值。\n* 常量的含义是指向的对象不能修改，但是可以改变内部对象的属性。\n```js\n//不能赋值是因为对象内存地址不能改变\nconst obj ={\n  name:'deng',\n  age:24,\n  height:186\n}\n//这样赋值是不会改变对象的内存地址的\nobj.name = 'xuyang'\n```\n对象字面量的增强写法：\n* 字面量：obj={} 这个括号就是字面量\n```js\n//es6中这样赋值\nconst  name='deng';\nconst age=24;\nconst height=186;\nconst obj ={\n  name,\n  age,\n  height\n}\n```\n函数的增强写法\n```js\nobj={\n  // ES6中这样写就可以\n  run(){\n\n  },\n  eat(){\n\n  },\n  name:'deng'\n}\n```\n## 0.5. v-on指令\n基本使用：v-on:click=\"handleAdd\"\n语法糖：@click=\"handleAdd\"\n* 在vue中如果@click=\"handleAdd\"没有参数，而方法需要一个参数，默认传event对象。如果想使用event和其他参数，可以用$event。\n* 修饰符：\n1. .stop: @click.stop=\"btnclick\" 阻止冒泡事件。  \n2. .prevent:阻止默认事件。\n3. 键盘键的点击 @keyup.enter。\n4. .navtive 组件的点击事件。\n5. v-once 只能点击一次。\n## 0.6. 条件判断\n1. v-if：接受Boolean类型的值，控制页面渲染。\n2. v-else：结合v-if当if条件不满足时，显示v-else。\n```html\n<template>\n  <div>\n    <!-- 用户登录切换的案例 -->\n    <!-- tip:当切换时用户输入的内容不会清空 因为vue先进行一个虚拟DOM的渲染，出于性能考虑，会尽量复用已经存在的元素，不会重新创建。加个 key  标识-->\n    <div>\n      <label for=\"username\" v-if=\"uesrname\">\n        账号:\n        <input id=\"username\" placeholder=\"请输入账号\" type=\"text\" />\n      </label>\n      <label for=\"e_mail\" v-else>\n        邮箱:\n        <input id=\"e_mail\" placeholder=\"请输入邮箱\" type=\"text\" />\n      </label>\n      <el-button type=\"primary\" round size=\"mini\" @click=\"uesrname = !uesrname\">切换</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      uesrname: true,\n    };\n  },\n};\n</script>\n\n<style>\n[v-cloak] {\n  display: none;\n}\n.line {\n  color: red;\n}\n</style>\n```\n3. v-show:控制DOM节点是否显示；  \n* 与v-if的区别：当条件为false时，包含v-if的元素不会存在在DOM中，是创建销毁的过程，而v-show是添加行内style的display，当频繁切换时建议使用v-show。\n## 0.7. 循环遍历\n* key主要的作用是更高效的更新虚拟dom，但得保证key的唯一性\n1. 遍历数组\n```html\n<!--   knowledge: [\"vue\", \"react\", \"angular\"], -->\n    <ul>\n      <li v-for=\"(item,index) in knowledge\" :key=\"item\">{{index+1}}.{{item}}</li>\n    </ul>\n```\n2. 遍历对象\n```html\n<!--    \n        objknowledge: {\n        fristName: \"deng\",\n        lastName: \"xuyang\",\n        score: 99,\n      } -->\n    <ul>\n      <li v-for=\"(value,key) in objknowledge\" :key=\"value\">{{key}}:{{value}}</li>\n    </ul>\n```\n3. 哪些方法是响应式的：\n* push() //向最后一位添加 push(...num)是可变参数，把多个参数变为数组\n* pop() //从最后一位删除\n* shift() //删除数组中的第一个元素\n* unshift() //在数组最前面添加元素\n* splice() //splice(位置start，操作几个元素，'加入元素')\n* sort()//排序\n* reverse()//反转\n4. 通过索引值修改数据，是不会响应的  \n解决：Vue.set(要修改的对象，索引值，修改后的值)\n## 0.8. 案例：\n```html\n<template>\n  <div>\n    <div v-if=\"books.length>0\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>书籍名称</th>\n            <th>出版日期</th>\n            <th>价格</th>\n            <th>购买数量</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item,index) in books\" :key=\"item.id\">\n            <td>{{index+1}}</td>\n            <td>{{item.name}}</td>\n            <td>{{item.date}}</td>\n            <!-- 使用过滤器 显示最终价格样式 -->\n            <td>{{item.price | showprice}}</td>\n            <td>\n              <el-button type=\"primary\" size=\"mini\" @click=\"increment(index)\">+</el-button>\n              {{item.count}}\n              <el-button\n                type=\"primary\"\n                size=\"mini\"\n                :disabled=\"item.count<1\"\n                @click=\"decrement(index)\"\n              >-</el-button>\n            </td>\n            <td>\n              <el-button type=\"danger\" size=\"mini\" @click=\"hangleremove(index)\">移除</el-button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>总价:{{totalPrice | showprice}}</h2>\n    </div>\n\n    <div v-else>\n      <h2>暂无书籍</h2>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      books: [\n        { id: 1, name: \"代码大全\", price: 90, date: \"2019-02\", count: 0 },\n        { id: 2, name: \"UNIX编程\", price: 80, date: \"2019-03\", count: 0 },\n        { id: 3, name: \"算法导论\", price: 75, date: \"2019-05\", count: 0 },\n        { id: 4, name: \"编程珠玑\", price: 100, date: \"2019-06\", count: 0 },\n      ],\n    };\n  },\n  methods: {\n    increment(index) {\n      this.books[index].count++;\n    },\n    decrement(index) {\n      this.books[index].count--;\n    },\n    hangleremove(index) {\n      this.books.splice(index, 1);\n    },\n  },\n  computed: {\n    totalPrice() {\n      let totalPrice = 0;\n      //1.普通的for循环\n      // for (let i = 0; i < this.books.length; i++) {\n      //   totalPrice += this.books[i].price * this.books[i].count;\n      // }\n      //2.for...in\n      // for (const i in this.books) {\n      //   totalPrice += this.books[i].price * this.books[i].count;\n      // }\n      //3.for...of\n      // for (const item of this.books) {\n      //   totalPrice += item.price * item.count;\n      // }\n      //reduce\n      totalPrice = this.books.reduce(\n        (prevValue, n) => prevValue + n.price * n.count,\n        0\n      );\n      return totalPrice;\n    },\n  },\n  //过滤器\n  filters: {\n    showprice(price) {\n      return \"￥\" + price.toFixed(2);\n    },\n  },\n};\n</script>\n\n<style>\ntable {\n  border: 1px solid gray;\n  border-collapse: collapse;\n}\ntd {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  width: 200px;\n  height: 50px;\n}\nth {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  background-color: lightgray;\n  width: 100px;\n}\n</style>\n```\n* 编程范式：命令式编程/声明式编程\n* 编程范式：面向对象编程（第一公民：对象）/函数式编程（第一公民：函数）\n* 高阶函数 filter/map/reduce\n1. filter：必须返回Boolean值，当返回一个true时，函数内部会将这次回调的n加入数组中，当返回false是，函数内部会支佛那个过滤掉n。\n2. map:映射操作\n3. reduce:对数组中所有的内容进行汇总\n```js\n//高阶函数的使用\n      //filter\n      const nums = [1, 5, 50, 89, 100, 200];\n      let newNums = nums.filter((n) => {\n        return n <= 100;\n      });\n      //map\n      let new2Nums = newNums.map((n) => {\n        return n * 2;\n      });\n      //reduce prevalue为上一次return的值 0 为初始值\n      let total = new2Nums.reduce((prevalue, n) => {\n        return prevalue + n;\n      }, 0);\n      console.log(total);\n      //高阶写法\n       const nums = [1, 5, 50, 89, 100, 200];\n      let total = nums\n        .filter((n) => n < 100)\n        .map((n) => n * 2)\n        .reduce((prevvalue, n) => prevvalue + n);\n      console.log(total);\n```\n## 0.9. v-model使用\n* 原理：v-model其实是一个语法糖，本质是动态绑定input的:value属性和@input=\"things = $event.target.value\"事件实现双向绑定\n1. radio:互斥绑定name，如果绑定想相同的v-model，name可以省略。对应Boolean值\n2. checkbox：单选对应Boolean；多选对应数组。\n3. select：单选对应srring类型，多选对应数组类型。\n* 修饰符\n1. .lazy：在失去焦点或者enter时候才会更新。\n2. .number：转换成number。\n3. .trim：去空格.\n## 0.10. 组件化\n* 常规组件化\n1. 将一个完成的页面分成很多组件。\n2. 每个组件都用于实现页面的一个功能模块。\n3. 而每一个组件都可以进行细分。\n* Vue组件化\n1. 他提供了一种抽象，让我们开发一个个独立可复用的小组件来构造我们的应用。\n2. 任何的应用都会被抽象成一颗组件树。\n* 组件使用步骤\n1. 创建组件构造器。调用 Vue.extend(),传入template作为组件模板\n2. 注册组件。调用 Vue.component()，传入使用时的名称和构造器\n3. 使用组件。\n* 全局组件和局部组件\n 1. 全局组件可以在多个vue实例中引用，通过Vue.component()注册。\n 2. 局部组件在某个vue实例下添加component：{\n   组件名：构造器\n }属性\n * 父组件和子组件\n 1. 组件和组件之间存在层级关系，在父组件构造器中可以注册子组件\n 2. 父子组件错误用法：以子标签的形式在vue实例中使用\n * 组件语法糖 内部调用 Vue.extend()\n ```js\n    //全局组件\n    vue.component(cpn,{\n    template:`\n    组件内容\n    `\n    })\n    //局部组件\n    components：{\n      cpn：{\n    template:`\n    组件内容\n    `\n    }\n    }\n ```\n* 组件模板分离\n1. 通过script标签，类型为text/x-template，通过注册时cpn:'#id'绑定。\n2. 通过template标签，直接把内容写进去。\n* 为什么组件的data是一个方法，需要返回一个新的对象指向不同的内存地址。\n* 父子组件通信\n1. 通过props向子组件传递数据。properties（属性）\n```html\n<template>\n<div>\n<cpn :cmsg=\"msg\"></cpn>\n</div>\n</template>\n<script>\nconst cpn={\n  template:``,\n  //传数组\n  props:['cmsg'],\n  //传对象\n  props:{\n  //类型限制\n  cmsg:String,\n  //提供默认值及必传值 \n  cmsg:{\n     cmsg:String,\n     default:'默认值'\n     required:true\n  }\n  //默认值如果是个对象或者数组 必须为一个函数\n   cmsg:{\n     cmsg:Array,\n     default(){\n       return []\n     }\n     required:true\n  }\n  }\n}\n<script/>\n```\n* props中的驼峰标识 用- 入 cInfo等同于 c-info\n2. 通过事件像父组件发送消息。自定义事件 $emit(发射) Events（事件）\n```js\ncomponents: {\n    cpn: {\n      props: [\"cmsg\"],\n      template: `\n      <div>\n       <p>{{cmsg}}这是子组件</p>\n      <button v-for=\"item in books\" @click=\"hanleclick(item)\">{{item.name}}</button>\n      </div>\n      `,\n      data() {\n        return {\n          books: [\n            { id: 1, name: \"代码大全\", price: 90, date: \"2019-02\", count: 0 },\n            { id: 2, name: \"UNIX编程\", price: 80, date: \"2019-03\", count: 0 },\n            { id: 3, name: \"算法导论\", price: 75, date: \"2019-05\", count: 0 },\n            { id: 4, name: \"编程珠玑\", price: 100, date: \"2019-06\", count: 0 },\n          ],\n        };\n      },\n      methods: {\n        hanleclick(item) {\n          this.$emit(\"itemClick\",item)\n         // console.log(item);\n        },\n      },\n    },\n  },\n```\n3. 父子组件的访问方式\n* 父组件访问子组件：$children或$refs reference(引用)。\n* 子组件访问父组件：$parent。\n## 0.11. 插槽slot \n1. 插槽的基本使用\n```html\n<template>\n  <div>\n    <cpn :cmsg=\"msg\" ref=\"ccpn\">\n      <div class=\"slotcolor\">插槽</div>\n    </cpn>\n    <cpn :cmsg=\"msg\" ref=\"ccpn\">\n      <button>按钮</button>\n    </cpn>\n    <cpn></cpn>\n    <button @click=\"showmessage\">按钮</button>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: \"这是父组件传来的值\",\n    };\n  },\n  methods: {\n    showmessage() {\n     // console.log(this.$children[0].name);\n      this.$refs.ccpn.hanleclick();\n      this.msg = this.$children[0].name;\n      console.log(this.$refs.ccpn.name);\n    },\n  },\n  computed: {},\n\n  components: {\n    cpn: {\n      props: [\"cmsg\"],\n      template: `\n      <div>\n       <p>{{cmsg}}这是子组件</p>\n       <button @click=\"btnClick\">子组件按钮</button>\n       <slot><p>插槽默认值</p></slot>\n      </div>\n      `,\n      data() {\n        return {\n          name: \"我是子组件的name\",\n        };\n      },\n      methods: {\n        hanleclick() {\n          // this.$emit(\"itemClick\",item)\n          // console.log(item);\n          console.log(\"父组件访问子组件\");\n        },\n        btnClick(){\n          //访问父组件\n          console.log(this.$parent);\n           console.log(this.$root);\n        }\n      },\n    },\n  },\n  //过滤器\n  filters: {},\n};\n</script>\n\n<style>\n.slotcolor {\ncolor: rgb(231, 21, 21);\n}\n</style>\n```\n2. 具名插槽\n```html\n<template>\n  <div>\n    <cpn>\n      <span slot=\"center\">标题</span>\n    </cpn>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: \"这是父组件传来的值\",\n    };\n  },\n  methods: {\n    showmessage() {\n     // console.log(this.$children[0].name);\n      this.$refs.ccpn.hanleclick();\n      this.msg = this.$children[0].name;\n      console.log(this.$refs.ccpn.name);\n    },\n  },\n  computed: {},\n\n  components: {\n    cpn: {\n      props: [\"cmsg\"],\n      template: `\n      <div>\n       <slot name=\"left\"><span>左边</span></slot>\n       <slot name=\"center\"><span>中间</span></slot>\n       <slot name=\"right\"><span>右边</span></slot>\n      </div>\n      `,\n      data() {\n        return {\n          name: \"我是子组件的name\",\n        };\n      },\n      methods: {\n        hanleclick() {\n          // this.$emit(\"itemClick\",item)\n          // console.log(item);\n          console.log(\"父组件访问子组件\");\n        },\n        btnClick(){\n          //访问父组件\n          console.log(this.$parent);\n           console.log(this.$root);\n        }\n      },\n    },\n  },\n  //过滤器\n  filters: {},\n};\n</script>\n\n<style>\ntable {\n  border: 1px solid gray;\n  border-collapse: collapse;\n}\ntd {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  width: 200px;\n  height: 50px;\n}\nth {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  background-color: lightgray;\n  width: 100px;\n}\n.slotcolor {\ncolor: rgb(231, 21, 21);\n}\n</style>\n```\n3. 作用域插槽\n* 编译作用域：组件有自己的作用域，当使用组件时，不会找子组件的属性，会在当前组件中查找，父模板父模板编译，子模板子模板编译。\n* 父组件替换插槽的标签，但是内容由子组件提供\n## 0.12.模块化开发\n* 模块化： 是具有特定功能的一个对象（ 广义理解 ）\n* 模块定义的流程：\n1. 定义模块（对象）\n2. 导出模块\n3. 引用模块\n好处：可以存储多个独立的功能块，复用性高\n1. 导出：\n```js\n//方式一\nlet height=1.88;\nlet age  = \"20\"\nfunction sum(num1,num2){\n  return num1+num2\n}\nclass person {\n  run(){\n  console.log('跑')\n  }\n}\nexport {\n  height,age,sum,person\n}\n//方式二\nexport let height=1.88;\nexport let age  = \"20\"\nexport function sum(num1,num2){\nreturn num1+num2\n}\n//三 不命名的导出，其他人导入是可以命名的 但只能有一个\nexport default height\n//* commonjs \n    module.exports = {\n    add,\n    mul\n}\n```\n2. 导入：\n```js\nimport {height,age,sun,person} form './aaa.js'\nimport * as aaa form './aaa.js'\n//export default 导出是可以自己命名的\nimport xmheighe form './aaa.js'\nconst c=new person();\nc.run()\n//* commonjs \nconst {add,mul} = require('./mathutils')\n```\n## 0.13.webpack\n\n* webpack是模块打包工具，更加强调模块化开发管理而文件压缩、预处理等是它附带的功能。工厂\n* gulp更强调前端模块自动化，模块化不是他的核心。工厂流水线\n1. webpack安装 15 p93 了解知识回顾\n## 0.14 vue cli\n* runtime-compiler template->ast->render->vdom->UI\n* runtime-only >render->vdom->UI 省掉了把template解析成 ast的过程\n## 0.15. vue 路由\n* 后端路由：有服务器处理url和页面之间的映射关系\n* 前后端分离：后端只提供数据，不负责任何阶段的内容\n* 前端渲染：浏览器网页中的大部分内容，都是由前端写的js代码在浏览器中执行，最终渲染出来的网页。\n* SPA （single page web application） 单页面富应用\n* 前端路由管理url和页面的映射关系\n* 改变URL不发生刷新\n1. url hash\n2. history.pushState 入栈和出栈的阶段 replaceState是不能返回的\n3. history.back()、history.forward和history.go(-1)\n```js\n//请求接口封装\nimport axios from 'axios'\nexport function request(config) {\n    const instance = axios.create({\n        baseURL: '你的接口地址',\n        timeout: 5000\n    })\n    //请求拦截\n    instance.interceptors.request.use(config => {\n        return config\n    }, error => {\n    })\n    //响应拦截\n    instance.interceptors.response.use(res => {\n        // console.log(res);\n        return res.data\n    }, err => {\n        // console.log(err);\n    })\n    return instance(config)\n\n    // .then(res => {\n    //     resolve(res)\n    // }).catch(err => {\n    //     reject(err)\n    // })\n}\n```\n## vue响应式原理\n1. Vue内部是如何监听数据改变的  \n* Object.defineProperty 监听对象属性的改变\n2. vue如何知道要通知哪些人，界面发生刷新\n* 发布订阅者模式\n\n```js\n<script>\nconst obj={\n  name:'哈哈哈',\n  message:'dxy'\n}\nObject.keys(obj).forEach(key=>{\n  let value = obj[key]\n  Object.defineProperty(obj,key,{\n    set(newValue){\n      value= newValue\n    },\n    get(){\n      return value\n    }\n  })\n})\n</script>\n```\n","source":"_posts/vue学习笔记.md","raw":"---\ntitle: vue学习笔记\ndate: 2021-01-23 21:00:03\ntags:\ncategories:\n- vue\n# sticky: 9999\n---\n\n“在我看来，春天里一棵小草生长，它没有什么目的。风起时一匹公马发情，它也没有什么目的。草长马发情，绝非表演给什么人看的，这就是存在本身。我要抱着草长马发情的伟大真诚去做一切事，而不是在人前羞羞答答地表演。在我看来，人都是为了要表演，失去了自己的存在。”   -----王小波\n\n## 0.1. 插值操作的语法和指令 \n1. mustache (使用双大括号进行插值操作) {{可以调用函数、表达式等}} **[语法]**  \n2. v-onece：只渲染一次数据，数据在改变时视图不会改变，后不接表达式。\n3. v-html：解析并插入html\n```html\n<!-- url指一个含html标签的变量 -->\n<div v-html=\"url\"></div>\n```\n4. v-text：将文本放在DOM上进行展示,接受一个string类型。\n```html\n<div v-text=\"message\"></div>\n```\n5. v-pre: 将标签中的元素，不做任何解析，原封不动的显示出来。  \n6. v-cloak：“斗篷”  在vue没加载之前，存在v-cloak属性，加载后消失\n```html\n<style>\n[v-cloak]{\n  display:none;\n}\n</style>\n<div v-cloak></div>\n```\n## 0.2. 绑定属性 \n1.  v-bind：可以绑定任何属性，常用动态绑定如src，href。语法糖：：  \n2. :class:{类名:boolean,类名:boolean}动态绑定class,当boolean为false的时候，DOM中不存该class **[对象语法]**\n```html\n<!-- 括号是不能省略的 -->\n<div :class=\"getClass()\"></div>\n<script>\nmethod:{\n  getclass(){\n     return {类名:boolean,类名:boolean}\n  }\n}\n</script>\n```\n* :class:['active','line'] **[数组语法]**，一般用于服务器返回的数据，不会经常使用。 \n\n ```html\n <!-- 练习 点击列表 改变列表class -->\n <template>\n  <div>\n    <ul>\n    <!--index==active  遍历的index与active 进行比较 数据驱动视图 -->\n      <li\n        :key=\"index\"\n        :class=\"{line:index==active}\"\n        @click=\"changeColor(index)\"\n        v-for=\"(m,index) in movies\"\n      >{{m}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      movies: [\"vue\", \"react\", \"angular\"],\n      active: 0,\n    };\n  },\n  methods: {\n    changeColor(index) {\n      this.active = index;\n    },\n  },\n};\n</script>\n\n<style>\n.line {\n  color: red;\n}\n</style>\n ``` \n3. :style:   \n**[对象语法]**  :style=\"{key(style属性名，可以使用驼峰标识 如font-size可以写成fontSize):value(属性值，不写'' vue会吧属性值解析成变量)}\"  \n**[数组语法]** :style=\"[style1,style2]\" **style1与style2为{属性名:属性值}，{属性名：属性值}**\n## 0.3. 计算属性 computed\n**某些情况我们可能会对数据进行转化或者合并到一起，这个时候就需要用到计算属性**  \n* 按照属性的方式给函数命名 如 \n```js\nfullName：function(){\nreturn fristName + lastName\n}  \n```\n\n**创建vue时可以在option中传入**  \n* el： \n* data： \n* methods：\n* computed：\n* 生命周期函数\n* 计算属性的getter和setter \n**每个计算属性中都包含getter和setter** \n```js\ncomputed:{\n  fullname:{\n    //使用get方法计算值\n    get:function(){\n     return 'abc'\n    },\n    //在给计算值赋值是调用get方法 一般时不使用 set方法是有参数的\n    set:function(newValue){\n      \n    }\n  }\n}\n```\n* 计算属性的缓存\n计算属性是有缓存的，会比methods性能更高，因为methods会多次调用，而在变量没有改变时computed只会调用一次。\n## 0.4. ES6语法（补充） js作者 Brendan Eich\nlet：块级作用域 当变量需要改变时\n* 变量作用域：变量在什么范围内是可用的 var是没有块级作用域的\n```js\n//无块级作用域，打印出的是第btn.length个按钮（错误的方式）\nfor(var i=0; i<btn.length; i++){\n   btn[i].addEventListener.('click',function(){\n     console.log('点击第'+i+'按钮')\n   })\n}\n//闭包可以解决该问题 \nfor(var i=0; i<btn.length; i++){\n  (function(num){\n  btn[i].addEventListener.('click',function(){\n     console.log('点击第'+ num +'按钮')\n   })\n  })(i)\n \n}\n //ES6 let \n  for(let i=0; i<btn.length; i++)\n   //相当于下面的大括号有自己的作用域\n  {\n   btn[i].addEventListener.('click',function()\n   {\n     console.log('点击第'+i+'按钮')\n   })\n   }\n```\nconst：将变量修饰成常量，不可以赋值。建议：优先使用const，只有需要改变某一标识符时才使用let。\n* 一旦给const 修饰的常量，不能进行修改。\n* 在使用const时，一定要进行赋值。\n* 常量的含义是指向的对象不能修改，但是可以改变内部对象的属性。\n```js\n//不能赋值是因为对象内存地址不能改变\nconst obj ={\n  name:'deng',\n  age:24,\n  height:186\n}\n//这样赋值是不会改变对象的内存地址的\nobj.name = 'xuyang'\n```\n对象字面量的增强写法：\n* 字面量：obj={} 这个括号就是字面量\n```js\n//es6中这样赋值\nconst  name='deng';\nconst age=24;\nconst height=186;\nconst obj ={\n  name,\n  age,\n  height\n}\n```\n函数的增强写法\n```js\nobj={\n  // ES6中这样写就可以\n  run(){\n\n  },\n  eat(){\n\n  },\n  name:'deng'\n}\n```\n## 0.5. v-on指令\n基本使用：v-on:click=\"handleAdd\"\n语法糖：@click=\"handleAdd\"\n* 在vue中如果@click=\"handleAdd\"没有参数，而方法需要一个参数，默认传event对象。如果想使用event和其他参数，可以用$event。\n* 修饰符：\n1. .stop: @click.stop=\"btnclick\" 阻止冒泡事件。  \n2. .prevent:阻止默认事件。\n3. 键盘键的点击 @keyup.enter。\n4. .navtive 组件的点击事件。\n5. v-once 只能点击一次。\n## 0.6. 条件判断\n1. v-if：接受Boolean类型的值，控制页面渲染。\n2. v-else：结合v-if当if条件不满足时，显示v-else。\n```html\n<template>\n  <div>\n    <!-- 用户登录切换的案例 -->\n    <!-- tip:当切换时用户输入的内容不会清空 因为vue先进行一个虚拟DOM的渲染，出于性能考虑，会尽量复用已经存在的元素，不会重新创建。加个 key  标识-->\n    <div>\n      <label for=\"username\" v-if=\"uesrname\">\n        账号:\n        <input id=\"username\" placeholder=\"请输入账号\" type=\"text\" />\n      </label>\n      <label for=\"e_mail\" v-else>\n        邮箱:\n        <input id=\"e_mail\" placeholder=\"请输入邮箱\" type=\"text\" />\n      </label>\n      <el-button type=\"primary\" round size=\"mini\" @click=\"uesrname = !uesrname\">切换</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      uesrname: true,\n    };\n  },\n};\n</script>\n\n<style>\n[v-cloak] {\n  display: none;\n}\n.line {\n  color: red;\n}\n</style>\n```\n3. v-show:控制DOM节点是否显示；  \n* 与v-if的区别：当条件为false时，包含v-if的元素不会存在在DOM中，是创建销毁的过程，而v-show是添加行内style的display，当频繁切换时建议使用v-show。\n## 0.7. 循环遍历\n* key主要的作用是更高效的更新虚拟dom，但得保证key的唯一性\n1. 遍历数组\n```html\n<!--   knowledge: [\"vue\", \"react\", \"angular\"], -->\n    <ul>\n      <li v-for=\"(item,index) in knowledge\" :key=\"item\">{{index+1}}.{{item}}</li>\n    </ul>\n```\n2. 遍历对象\n```html\n<!--    \n        objknowledge: {\n        fristName: \"deng\",\n        lastName: \"xuyang\",\n        score: 99,\n      } -->\n    <ul>\n      <li v-for=\"(value,key) in objknowledge\" :key=\"value\">{{key}}:{{value}}</li>\n    </ul>\n```\n3. 哪些方法是响应式的：\n* push() //向最后一位添加 push(...num)是可变参数，把多个参数变为数组\n* pop() //从最后一位删除\n* shift() //删除数组中的第一个元素\n* unshift() //在数组最前面添加元素\n* splice() //splice(位置start，操作几个元素，'加入元素')\n* sort()//排序\n* reverse()//反转\n4. 通过索引值修改数据，是不会响应的  \n解决：Vue.set(要修改的对象，索引值，修改后的值)\n## 0.8. 案例：\n```html\n<template>\n  <div>\n    <div v-if=\"books.length>0\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>书籍名称</th>\n            <th>出版日期</th>\n            <th>价格</th>\n            <th>购买数量</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item,index) in books\" :key=\"item.id\">\n            <td>{{index+1}}</td>\n            <td>{{item.name}}</td>\n            <td>{{item.date}}</td>\n            <!-- 使用过滤器 显示最终价格样式 -->\n            <td>{{item.price | showprice}}</td>\n            <td>\n              <el-button type=\"primary\" size=\"mini\" @click=\"increment(index)\">+</el-button>\n              {{item.count}}\n              <el-button\n                type=\"primary\"\n                size=\"mini\"\n                :disabled=\"item.count<1\"\n                @click=\"decrement(index)\"\n              >-</el-button>\n            </td>\n            <td>\n              <el-button type=\"danger\" size=\"mini\" @click=\"hangleremove(index)\">移除</el-button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h2>总价:{{totalPrice | showprice}}</h2>\n    </div>\n\n    <div v-else>\n      <h2>暂无书籍</h2>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      books: [\n        { id: 1, name: \"代码大全\", price: 90, date: \"2019-02\", count: 0 },\n        { id: 2, name: \"UNIX编程\", price: 80, date: \"2019-03\", count: 0 },\n        { id: 3, name: \"算法导论\", price: 75, date: \"2019-05\", count: 0 },\n        { id: 4, name: \"编程珠玑\", price: 100, date: \"2019-06\", count: 0 },\n      ],\n    };\n  },\n  methods: {\n    increment(index) {\n      this.books[index].count++;\n    },\n    decrement(index) {\n      this.books[index].count--;\n    },\n    hangleremove(index) {\n      this.books.splice(index, 1);\n    },\n  },\n  computed: {\n    totalPrice() {\n      let totalPrice = 0;\n      //1.普通的for循环\n      // for (let i = 0; i < this.books.length; i++) {\n      //   totalPrice += this.books[i].price * this.books[i].count;\n      // }\n      //2.for...in\n      // for (const i in this.books) {\n      //   totalPrice += this.books[i].price * this.books[i].count;\n      // }\n      //3.for...of\n      // for (const item of this.books) {\n      //   totalPrice += item.price * item.count;\n      // }\n      //reduce\n      totalPrice = this.books.reduce(\n        (prevValue, n) => prevValue + n.price * n.count,\n        0\n      );\n      return totalPrice;\n    },\n  },\n  //过滤器\n  filters: {\n    showprice(price) {\n      return \"￥\" + price.toFixed(2);\n    },\n  },\n};\n</script>\n\n<style>\ntable {\n  border: 1px solid gray;\n  border-collapse: collapse;\n}\ntd {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  width: 200px;\n  height: 50px;\n}\nth {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  background-color: lightgray;\n  width: 100px;\n}\n</style>\n```\n* 编程范式：命令式编程/声明式编程\n* 编程范式：面向对象编程（第一公民：对象）/函数式编程（第一公民：函数）\n* 高阶函数 filter/map/reduce\n1. filter：必须返回Boolean值，当返回一个true时，函数内部会将这次回调的n加入数组中，当返回false是，函数内部会支佛那个过滤掉n。\n2. map:映射操作\n3. reduce:对数组中所有的内容进行汇总\n```js\n//高阶函数的使用\n      //filter\n      const nums = [1, 5, 50, 89, 100, 200];\n      let newNums = nums.filter((n) => {\n        return n <= 100;\n      });\n      //map\n      let new2Nums = newNums.map((n) => {\n        return n * 2;\n      });\n      //reduce prevalue为上一次return的值 0 为初始值\n      let total = new2Nums.reduce((prevalue, n) => {\n        return prevalue + n;\n      }, 0);\n      console.log(total);\n      //高阶写法\n       const nums = [1, 5, 50, 89, 100, 200];\n      let total = nums\n        .filter((n) => n < 100)\n        .map((n) => n * 2)\n        .reduce((prevvalue, n) => prevvalue + n);\n      console.log(total);\n```\n## 0.9. v-model使用\n* 原理：v-model其实是一个语法糖，本质是动态绑定input的:value属性和@input=\"things = $event.target.value\"事件实现双向绑定\n1. radio:互斥绑定name，如果绑定想相同的v-model，name可以省略。对应Boolean值\n2. checkbox：单选对应Boolean；多选对应数组。\n3. select：单选对应srring类型，多选对应数组类型。\n* 修饰符\n1. .lazy：在失去焦点或者enter时候才会更新。\n2. .number：转换成number。\n3. .trim：去空格.\n## 0.10. 组件化\n* 常规组件化\n1. 将一个完成的页面分成很多组件。\n2. 每个组件都用于实现页面的一个功能模块。\n3. 而每一个组件都可以进行细分。\n* Vue组件化\n1. 他提供了一种抽象，让我们开发一个个独立可复用的小组件来构造我们的应用。\n2. 任何的应用都会被抽象成一颗组件树。\n* 组件使用步骤\n1. 创建组件构造器。调用 Vue.extend(),传入template作为组件模板\n2. 注册组件。调用 Vue.component()，传入使用时的名称和构造器\n3. 使用组件。\n* 全局组件和局部组件\n 1. 全局组件可以在多个vue实例中引用，通过Vue.component()注册。\n 2. 局部组件在某个vue实例下添加component：{\n   组件名：构造器\n }属性\n * 父组件和子组件\n 1. 组件和组件之间存在层级关系，在父组件构造器中可以注册子组件\n 2. 父子组件错误用法：以子标签的形式在vue实例中使用\n * 组件语法糖 内部调用 Vue.extend()\n ```js\n    //全局组件\n    vue.component(cpn,{\n    template:`\n    组件内容\n    `\n    })\n    //局部组件\n    components：{\n      cpn：{\n    template:`\n    组件内容\n    `\n    }\n    }\n ```\n* 组件模板分离\n1. 通过script标签，类型为text/x-template，通过注册时cpn:'#id'绑定。\n2. 通过template标签，直接把内容写进去。\n* 为什么组件的data是一个方法，需要返回一个新的对象指向不同的内存地址。\n* 父子组件通信\n1. 通过props向子组件传递数据。properties（属性）\n```html\n<template>\n<div>\n<cpn :cmsg=\"msg\"></cpn>\n</div>\n</template>\n<script>\nconst cpn={\n  template:``,\n  //传数组\n  props:['cmsg'],\n  //传对象\n  props:{\n  //类型限制\n  cmsg:String,\n  //提供默认值及必传值 \n  cmsg:{\n     cmsg:String,\n     default:'默认值'\n     required:true\n  }\n  //默认值如果是个对象或者数组 必须为一个函数\n   cmsg:{\n     cmsg:Array,\n     default(){\n       return []\n     }\n     required:true\n  }\n  }\n}\n<script/>\n```\n* props中的驼峰标识 用- 入 cInfo等同于 c-info\n2. 通过事件像父组件发送消息。自定义事件 $emit(发射) Events（事件）\n```js\ncomponents: {\n    cpn: {\n      props: [\"cmsg\"],\n      template: `\n      <div>\n       <p>{{cmsg}}这是子组件</p>\n      <button v-for=\"item in books\" @click=\"hanleclick(item)\">{{item.name}}</button>\n      </div>\n      `,\n      data() {\n        return {\n          books: [\n            { id: 1, name: \"代码大全\", price: 90, date: \"2019-02\", count: 0 },\n            { id: 2, name: \"UNIX编程\", price: 80, date: \"2019-03\", count: 0 },\n            { id: 3, name: \"算法导论\", price: 75, date: \"2019-05\", count: 0 },\n            { id: 4, name: \"编程珠玑\", price: 100, date: \"2019-06\", count: 0 },\n          ],\n        };\n      },\n      methods: {\n        hanleclick(item) {\n          this.$emit(\"itemClick\",item)\n         // console.log(item);\n        },\n      },\n    },\n  },\n```\n3. 父子组件的访问方式\n* 父组件访问子组件：$children或$refs reference(引用)。\n* 子组件访问父组件：$parent。\n## 0.11. 插槽slot \n1. 插槽的基本使用\n```html\n<template>\n  <div>\n    <cpn :cmsg=\"msg\" ref=\"ccpn\">\n      <div class=\"slotcolor\">插槽</div>\n    </cpn>\n    <cpn :cmsg=\"msg\" ref=\"ccpn\">\n      <button>按钮</button>\n    </cpn>\n    <cpn></cpn>\n    <button @click=\"showmessage\">按钮</button>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: \"这是父组件传来的值\",\n    };\n  },\n  methods: {\n    showmessage() {\n     // console.log(this.$children[0].name);\n      this.$refs.ccpn.hanleclick();\n      this.msg = this.$children[0].name;\n      console.log(this.$refs.ccpn.name);\n    },\n  },\n  computed: {},\n\n  components: {\n    cpn: {\n      props: [\"cmsg\"],\n      template: `\n      <div>\n       <p>{{cmsg}}这是子组件</p>\n       <button @click=\"btnClick\">子组件按钮</button>\n       <slot><p>插槽默认值</p></slot>\n      </div>\n      `,\n      data() {\n        return {\n          name: \"我是子组件的name\",\n        };\n      },\n      methods: {\n        hanleclick() {\n          // this.$emit(\"itemClick\",item)\n          // console.log(item);\n          console.log(\"父组件访问子组件\");\n        },\n        btnClick(){\n          //访问父组件\n          console.log(this.$parent);\n           console.log(this.$root);\n        }\n      },\n    },\n  },\n  //过滤器\n  filters: {},\n};\n</script>\n\n<style>\n.slotcolor {\ncolor: rgb(231, 21, 21);\n}\n</style>\n```\n2. 具名插槽\n```html\n<template>\n  <div>\n    <cpn>\n      <span slot=\"center\">标题</span>\n    </cpn>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: \"这是父组件传来的值\",\n    };\n  },\n  methods: {\n    showmessage() {\n     // console.log(this.$children[0].name);\n      this.$refs.ccpn.hanleclick();\n      this.msg = this.$children[0].name;\n      console.log(this.$refs.ccpn.name);\n    },\n  },\n  computed: {},\n\n  components: {\n    cpn: {\n      props: [\"cmsg\"],\n      template: `\n      <div>\n       <slot name=\"left\"><span>左边</span></slot>\n       <slot name=\"center\"><span>中间</span></slot>\n       <slot name=\"right\"><span>右边</span></slot>\n      </div>\n      `,\n      data() {\n        return {\n          name: \"我是子组件的name\",\n        };\n      },\n      methods: {\n        hanleclick() {\n          // this.$emit(\"itemClick\",item)\n          // console.log(item);\n          console.log(\"父组件访问子组件\");\n        },\n        btnClick(){\n          //访问父组件\n          console.log(this.$parent);\n           console.log(this.$root);\n        }\n      },\n    },\n  },\n  //过滤器\n  filters: {},\n};\n</script>\n\n<style>\ntable {\n  border: 1px solid gray;\n  border-collapse: collapse;\n}\ntd {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  width: 200px;\n  height: 50px;\n}\nth {\n  border: 1px solid gray;\n  border-collapse: collapse;\n  background-color: lightgray;\n  width: 100px;\n}\n.slotcolor {\ncolor: rgb(231, 21, 21);\n}\n</style>\n```\n3. 作用域插槽\n* 编译作用域：组件有自己的作用域，当使用组件时，不会找子组件的属性，会在当前组件中查找，父模板父模板编译，子模板子模板编译。\n* 父组件替换插槽的标签，但是内容由子组件提供\n## 0.12.模块化开发\n* 模块化： 是具有特定功能的一个对象（ 广义理解 ）\n* 模块定义的流程：\n1. 定义模块（对象）\n2. 导出模块\n3. 引用模块\n好处：可以存储多个独立的功能块，复用性高\n1. 导出：\n```js\n//方式一\nlet height=1.88;\nlet age  = \"20\"\nfunction sum(num1,num2){\n  return num1+num2\n}\nclass person {\n  run(){\n  console.log('跑')\n  }\n}\nexport {\n  height,age,sum,person\n}\n//方式二\nexport let height=1.88;\nexport let age  = \"20\"\nexport function sum(num1,num2){\nreturn num1+num2\n}\n//三 不命名的导出，其他人导入是可以命名的 但只能有一个\nexport default height\n//* commonjs \n    module.exports = {\n    add,\n    mul\n}\n```\n2. 导入：\n```js\nimport {height,age,sun,person} form './aaa.js'\nimport * as aaa form './aaa.js'\n//export default 导出是可以自己命名的\nimport xmheighe form './aaa.js'\nconst c=new person();\nc.run()\n//* commonjs \nconst {add,mul} = require('./mathutils')\n```\n## 0.13.webpack\n\n* webpack是模块打包工具，更加强调模块化开发管理而文件压缩、预处理等是它附带的功能。工厂\n* gulp更强调前端模块自动化，模块化不是他的核心。工厂流水线\n1. webpack安装 15 p93 了解知识回顾\n## 0.14 vue cli\n* runtime-compiler template->ast->render->vdom->UI\n* runtime-only >render->vdom->UI 省掉了把template解析成 ast的过程\n## 0.15. vue 路由\n* 后端路由：有服务器处理url和页面之间的映射关系\n* 前后端分离：后端只提供数据，不负责任何阶段的内容\n* 前端渲染：浏览器网页中的大部分内容，都是由前端写的js代码在浏览器中执行，最终渲染出来的网页。\n* SPA （single page web application） 单页面富应用\n* 前端路由管理url和页面的映射关系\n* 改变URL不发生刷新\n1. url hash\n2. history.pushState 入栈和出栈的阶段 replaceState是不能返回的\n3. history.back()、history.forward和history.go(-1)\n```js\n//请求接口封装\nimport axios from 'axios'\nexport function request(config) {\n    const instance = axios.create({\n        baseURL: '你的接口地址',\n        timeout: 5000\n    })\n    //请求拦截\n    instance.interceptors.request.use(config => {\n        return config\n    }, error => {\n    })\n    //响应拦截\n    instance.interceptors.response.use(res => {\n        // console.log(res);\n        return res.data\n    }, err => {\n        // console.log(err);\n    })\n    return instance(config)\n\n    // .then(res => {\n    //     resolve(res)\n    // }).catch(err => {\n    //     reject(err)\n    // })\n}\n```\n## vue响应式原理\n1. Vue内部是如何监听数据改变的  \n* Object.defineProperty 监听对象属性的改变\n2. vue如何知道要通知哪些人，界面发生刷新\n* 发布订阅者模式\n\n```js\n<script>\nconst obj={\n  name:'哈哈哈',\n  message:'dxy'\n}\nObject.keys(obj).forEach(key=>{\n  let value = obj[key]\n  Object.defineProperty(obj,key,{\n    set(newValue){\n      value= newValue\n    },\n    get(){\n      return value\n    }\n  })\n})\n</script>\n```\n","slug":"vue学习笔记","published":1,"updated":"2021-03-04T12:20:23.658Z","_id":"ckkam8u820004s2whhp483pkg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>“在我看来，春天里一棵小草生长，它没有什么目的。风起时一匹公马发情，它也没有什么目的。草长马发情，绝非表演给什么人看的，这就是存在本身。我要抱着草长马发情的伟大真诚去做一切事，而不是在人前羞羞答答地表演。在我看来，人都是为了要表演，失去了自己的存在。”   —–王小波</p>\n<h2 id=\"0-1-插值操作的语法和指令\"><a href=\"#0-1-插值操作的语法和指令\" class=\"headerlink\" title=\"0.1. 插值操作的语法和指令\"></a>0.1. 插值操作的语法和指令</h2><ol>\n<li>mustache (使用双大括号进行插值操作)  <strong>[语法]</strong>  </li>\n<li>v-onece：只渲染一次数据，数据在改变时视图不会改变，后不接表达式。</li>\n<li>v-html：解析并插入html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- url指一个含html标签的变量 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>v-text：将文本放在DOM上进行展示,接受一个string类型。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;message&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>v-pre: 将标签中的元素，不做任何解析，原封不动的显示出来。  </li>\n<li>v-cloak：“斗篷”  在vue没加载之前，存在v-cloak属性，加载后消失<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-attr\">[v-cloak]</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:none</span>;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-cloak</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"0-2-绑定属性\"><a href=\"#0-2-绑定属性\" class=\"headerlink\" title=\"0.2. 绑定属性\"></a>0.2. 绑定属性</h2></li>\n<li> v-bind：可以绑定任何属性，常用动态绑定如src，href。语法糖：：  </li>\n<li>:class:{类名:boolean,类名:boolean}动态绑定class,当boolean为false的时候，DOM中不存该class <strong>[对象语法]</strong><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 括号是不能省略的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;getClass()&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">method:&#123;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">getclass</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">return</span> &#123;类名:boolean,类名:boolean&#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li><p>:class:[‘active’,’line’] **[数组语法]**，一般用于服务器返回的数据，不会经常使用。 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">&lt;!-- 练习 点击列表 改变列表class --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--index==active  遍历的index与active 进行比较 数据驱动视图 --&gt;</span></span><br><span class=\"line\">      &lt;li</span><br><span class=\"line\">        :key=&quot;index&quot;</span><br><span class=\"line\">        :class=&quot;&#123;line:index==active&#125;&quot;</span><br><span class=\"line\">        @click=&quot;changeColor(index)&quot;</span><br><span class=\"line\">        v-for=&quot;(m,index) in movies&quot;</span><br><span class=\"line\">      &gt;&#123;&#123;m&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      movies: [<span class=\"string\">&quot;vue&quot;</span>, <span class=\"string\">&quot;react&quot;</span>, <span class=\"string\">&quot;angular&quot;</span>],</span></span><br><span class=\"line\">      active: 0,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">changeColor</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.active = index;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.line</span> &#123;</span></span><br><span class=\"line\">  color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"3\">\n<li>:style:   </li>\n</ol>\n<p><strong>[对象语法]</strong>  :style=”{key(style属性名，可以使用驼峰标识 如font-size可以写成fontSize):value(属性值，不写’’ vue会吧属性值解析成变量)}”<br><strong>[数组语法]</strong> :style=”[style1,style2]” <strong>style1与style2为{属性名:属性值}，{属性名：属性值}</strong></p>\n<h2 id=\"0-3-计算属性-computed\"><a href=\"#0-3-计算属性-computed\" class=\"headerlink\" title=\"0.3. 计算属性 computed\"></a>0.3. 计算属性 computed</h2><p><strong>某些情况我们可能会对数据进行转化或者合并到一起，这个时候就需要用到计算属性</strong>  </p>\n<ul>\n<li>按照属性的方式给函数命名 如 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fullName：<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> fristName + lastName</span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure></li>\n<li>*创建vue时可以在option中传入**  </li>\n<li>el： </li>\n<li>data： </li>\n<li>methods：</li>\n<li>computed：</li>\n<li>生命周期函数</li>\n<li>计算属性的getter和setter </li>\n<li>*每个计算属性中都包含getter和setter** <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed:&#123;</span><br><span class=\"line\">  fullname:&#123;</span><br><span class=\"line\">    <span class=\"comment\">//使用get方法计算值</span></span><br><span class=\"line\">    get:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"string\">&#x27;abc&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//在给计算值赋值是调用get方法 一般时不使用 set方法是有参数的</span></span><br><span class=\"line\">    set:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>计算属性的缓存<br>计算属性是有缓存的，会比methods性能更高，因为methods会多次调用，而在变量没有改变时computed只会调用一次。<h2 id=\"0-4-ES6语法（补充）-js作者-Brendan-Eich\"><a href=\"#0-4-ES6语法（补充）-js作者-Brendan-Eich\" class=\"headerlink\" title=\"0.4. ES6语法（补充） js作者 Brendan Eich\"></a>0.4. ES6语法（补充） js作者 Brendan Eich</h2>let：块级作用域 当变量需要改变时</li>\n<li>变量作用域：变量在什么范围内是可用的 var是没有块级作用域的<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//无块级作用域，打印出的是第btn.length个按钮（错误的方式）</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;btn.length; i++)&#123;</span><br><span class=\"line\">   btn[i].addEventListener.(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;点击第&#x27;</span>+i+<span class=\"string\">&#x27;按钮&#x27;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//闭包可以解决该问题 </span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;btn.length; i++)&#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">  btn[i].addEventListener.(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;点击第&#x27;</span>+ num +<span class=\"string\">&#x27;按钮&#x27;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">  &#125;)(i)</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"comment\">//ES6 let </span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;btn.length; i++)</span><br><span class=\"line\">   <span class=\"comment\">//相当于下面的大括号有自己的作用域</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   btn[i].addEventListener.(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">   </span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;点击第&#x27;</span>+i+<span class=\"string\">&#x27;按钮&#x27;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\nconst：将变量修饰成常量，不可以赋值。建议：优先使用const，只有需要改变某一标识符时才使用let。</li>\n<li>一旦给const 修饰的常量，不能进行修改。</li>\n<li>在使用const时，一定要进行赋值。</li>\n<li>常量的含义是指向的对象不能修改，但是可以改变内部对象的属性。<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不能赋值是因为对象内存地址不能改变</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj =&#123;</span><br><span class=\"line\">  name:<span class=\"string\">&#x27;deng&#x27;</span>,</span><br><span class=\"line\">  age:<span class=\"number\">24</span>,</span><br><span class=\"line\">  height:<span class=\"number\">186</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//这样赋值是不会改变对象的内存地址的</span></span><br><span class=\"line\">obj.name = <span class=\"string\">&#x27;xuyang&#x27;</span></span><br></pre></td></tr></table></figure>\n对象字面量的增强写法：</li>\n<li>字面量：obj={} 这个括号就是字面量<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//es6中这样赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>  name=<span class=\"string\">&#x27;deng&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> age=<span class=\"number\">24</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> height=<span class=\"number\">186</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj =&#123;</span><br><span class=\"line\">  name,</span><br><span class=\"line\">  age,</span><br><span class=\"line\">  height</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n函数的增强写法<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj=&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ES6中这样写就可以</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  name:<span class=\"string\">&#x27;deng&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"0-5-v-on指令\"><a href=\"#0-5-v-on指令\" class=\"headerlink\" title=\"0.5. v-on指令\"></a>0.5. v-on指令</h2>基本使用：v-on:click=”handleAdd”<br>语法糖：@click=”handleAdd”</li>\n<li>在vue中如果@click=”handleAdd”没有参数，而方法需要一个参数，默认传event对象。如果想使用event和其他参数，可以用$event。</li>\n<li>修饰符：</li>\n</ul>\n<ol>\n<li>.stop: @click.stop=”btnclick” 阻止冒泡事件。  </li>\n<li>.prevent:阻止默认事件。</li>\n<li>键盘键的点击 @keyup.enter。</li>\n<li>.navtive 组件的点击事件。</li>\n<li>v-once 只能点击一次。<h2 id=\"0-6-条件判断\"><a href=\"#0-6-条件判断\" class=\"headerlink\" title=\"0.6. 条件判断\"></a>0.6. 条件判断</h2></li>\n<li>v-if：接受Boolean类型的值，控制页面渲染。</li>\n<li>v-else：结合v-if当if条件不满足时，显示v-else。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 用户登录切换的案例 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- tip:当切换时用户输入的内容不会清空 因为vue先进行一个虚拟DOM的渲染，出于性能考虑，会尽量复用已经存在的元素，不会重新创建。加个 key  标识--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;uesrname&quot;</span>&gt;</span></span><br><span class=\"line\">        账号:</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入账号&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;e_mail&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">        邮箱:</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;e_mail&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入邮箱&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">round</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;uesrname = !uesrname&quot;</span>&gt;</span>切换<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      uesrname: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-attr\">[v-cloak]</span> &#123;</span></span><br><span class=\"line\">  display: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.line</span> &#123;</span></span><br><span class=\"line\">  color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>v-show:控制DOM节点是否显示；  </li>\n</ol>\n<ul>\n<li>与v-if的区别：当条件为false时，包含v-if的元素不会存在在DOM中，是创建销毁的过程，而v-show是添加行内style的display，当频繁切换时建议使用v-show。<h2 id=\"0-7-循环遍历\"><a href=\"#0-7-循环遍历\" class=\"headerlink\" title=\"0.7. 循环遍历\"></a>0.7. 循环遍历</h2></li>\n<li>key主要的作用是更高效的更新虚拟dom，但得保证key的唯一性</li>\n</ul>\n<ol>\n<li>遍历数组<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--   knowledge: [&quot;vue&quot;, &quot;react&quot;, &quot;angular&quot;], --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item,index) in knowledge&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>遍历对象<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--    </span></span><br><span class=\"line\"><span class=\"comment\">        objknowledge: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        fristName: &quot;deng&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">        lastName: &quot;xuyang&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">        score: 99,</span></span><br><span class=\"line\"><span class=\"comment\">      &#125; --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(value,key) in objknowledge&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>哪些方法是响应式的：</li>\n</ol>\n<ul>\n<li>push() //向最后一位添加 push(…num)是可变参数，把多个参数变为数组</li>\n<li>pop() //从最后一位删除</li>\n<li>shift() //删除数组中的第一个元素</li>\n<li>unshift() //在数组最前面添加元素</li>\n<li>splice() //splice(位置start，操作几个元素，’加入元素’)</li>\n<li>sort()//排序</li>\n<li>reverse()//反转</li>\n</ul>\n<ol start=\"4\">\n<li>通过索引值修改数据，是不会响应的<br>解决：Vue.set(要修改的对象，索引值，修改后的值)<h2 id=\"0-8-案例：\"><a href=\"#0-8-案例：\" class=\"headerlink\" title=\"0.8. 案例：\"></a>0.8. 案例：</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;books.length&gt;0&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>书籍名称<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>出版日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>价格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>购买数量<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item,index) in books&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.id&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 使用过滤器 显示最终价格样式 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;item.price | showprice&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;increment(index)&quot;</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123;item.count&#125;&#125;</span><br><span class=\"line\">              &lt;el-button</span><br><span class=\"line\">                type=&quot;primary&quot;</span><br><span class=\"line\">                size=&quot;mini&quot;</span><br><span class=\"line\">                :disabled=&quot;item.count&lt;1&quot;</span><br><span class=\"line\">                @click=&quot;decrement(index)&quot;</span><br><span class=\"line\">              &gt;-<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;hangleremove(index)&quot;</span>&gt;</span>移除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>总价:&#123;&#123;totalPrice | showprice&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>暂无书籍<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\">      books: [</span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;代码大全&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">90</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-02&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;UNIX编程&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">80</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-03&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;算法导论&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">75</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-05&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">4</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;编程珠玑&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-06&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">increment</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.books[index].count++;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">decrement</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.books[index].count--;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">hangleremove</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.books.splice(index, <span class=\"number\">1</span>);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">totalPrice</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> totalPrice = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//1.普通的for循环</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// for (let i = 0; i &lt; this.books.length; i++) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//   totalPrice += this.books[i].price * this.books[i].count;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//2.for...in</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// for (const i in this.books) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//   totalPrice += this.books[i].price * this.books[i].count;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//3.for...of</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// for (const item of this.books) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//   totalPrice += item.price * item.count;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//reduce</span></span></span><br><span class=\"line\"><span class=\"javascript\">      totalPrice = <span class=\"built_in\">this</span>.books.reduce(</span></span><br><span class=\"line\">        (prevValue, n) =&gt; prevValue + n.price * n.count,</span><br><span class=\"line\">        0</span><br><span class=\"line\">      );</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> totalPrice;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//过滤器</span></span></span><br><span class=\"line\">  filters: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">showprice</span>(<span class=\"params\">price</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;￥&quot;</span> + price.toFixed(<span class=\"number\">2</span>);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">table &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">td &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">th &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  background-color: lightgray;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>编程范式：命令式编程/声明式编程</li>\n<li>编程范式：面向对象编程（第一公民：对象）/函数式编程（第一公民：函数）</li>\n<li>高阶函数 filter/map/reduce</li>\n</ul>\n<ol>\n<li>filter：必须返回Boolean值，当返回一个true时，函数内部会将这次回调的n加入数组中，当返回false是，函数内部会支佛那个过滤掉n。</li>\n<li>map:映射操作</li>\n<li>reduce:对数组中所有的内容进行汇总<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//高阶函数的使用</span></span><br><span class=\"line\">      <span class=\"comment\">//filter</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> nums = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">50</span>, <span class=\"number\">89</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newNums = nums.filter(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n &lt;= <span class=\"number\">100</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//map</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> new2Nums = newNums.map(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n * <span class=\"number\">2</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//reduce prevalue为上一次return的值 0 为初始值</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> total = new2Nums.reduce(<span class=\"function\">(<span class=\"params\">prevalue, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> prevalue + n;</span><br><span class=\"line\">      &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(total);</span><br><span class=\"line\">      <span class=\"comment\">//高阶写法</span></span><br><span class=\"line\">       <span class=\"keyword\">const</span> nums = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">50</span>, <span class=\"number\">89</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> total = nums</span><br><span class=\"line\">        .filter(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> n &lt; <span class=\"number\">100</span>)</span><br><span class=\"line\">        .map(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> n * <span class=\"number\">2</span>)</span><br><span class=\"line\">        .reduce(<span class=\"function\">(<span class=\"params\">prevvalue, n</span>) =&gt;</span> prevvalue + n);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(total);</span><br></pre></td></tr></table></figure>\n<h2 id=\"0-9-v-model使用\"><a href=\"#0-9-v-model使用\" class=\"headerlink\" title=\"0.9. v-model使用\"></a>0.9. v-model使用</h2></li>\n</ol>\n<ul>\n<li>原理：v-model其实是一个语法糖，本质是动态绑定input的:value属性和@input=”things = $event.target.value”事件实现双向绑定</li>\n</ul>\n<ol>\n<li>radio:互斥绑定name，如果绑定想相同的v-model，name可以省略。对应Boolean值</li>\n<li>checkbox：单选对应Boolean；多选对应数组。</li>\n<li>select：单选对应srring类型，多选对应数组类型。</li>\n</ol>\n<ul>\n<li>修饰符</li>\n</ul>\n<ol>\n<li>.lazy：在失去焦点或者enter时候才会更新。</li>\n<li>.number：转换成number。</li>\n<li>.trim：去空格.<h2 id=\"0-10-组件化\"><a href=\"#0-10-组件化\" class=\"headerlink\" title=\"0.10. 组件化\"></a>0.10. 组件化</h2></li>\n</ol>\n<ul>\n<li>常规组件化</li>\n</ul>\n<ol>\n<li>将一个完成的页面分成很多组件。</li>\n<li>每个组件都用于实现页面的一个功能模块。</li>\n<li>而每一个组件都可以进行细分。</li>\n</ol>\n<ul>\n<li>Vue组件化</li>\n</ul>\n<ol>\n<li>他提供了一种抽象，让我们开发一个个独立可复用的小组件来构造我们的应用。</li>\n<li>任何的应用都会被抽象成一颗组件树。</li>\n</ol>\n<ul>\n<li>组件使用步骤</li>\n</ul>\n<ol>\n<li>创建组件构造器。调用 Vue.extend(),传入template作为组件模板</li>\n<li>注册组件。调用 Vue.component()，传入使用时的名称和构造器</li>\n<li>使用组件。</li>\n</ol>\n<ul>\n<li>全局组件和局部组件</li>\n</ul>\n<ol>\n<li>全局组件可以在多个vue实例中引用，通过Vue.component()注册。</li>\n<li>局部组件在某个vue实例下添加component：{<br>组件名：构造器<br>}属性</li>\n</ol>\n<ul>\n<li>父组件和子组件</li>\n</ul>\n<ol>\n<li>组件和组件之间存在层级关系，在父组件构造器中可以注册子组件</li>\n<li>父子组件错误用法：以子标签的形式在vue实例中使用</li>\n</ol>\n<ul>\n<li>组件语法糖 内部调用 Vue.extend()<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局组件</span></span><br><span class=\"line\">vue.component(cpn,&#123;</span><br><span class=\"line\">template:<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">组件内容</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//局部组件</span></span><br><span class=\"line\">components：&#123;</span><br><span class=\"line\">  cpn：&#123;</span><br><span class=\"line\">template:<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">组件内容</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>组件模板分离</li>\n</ul>\n<ol>\n<li>通过script标签，类型为text/x-template，通过注册时cpn:’#id’绑定。</li>\n<li>通过template标签，直接把内容写进去。</li>\n</ol>\n<ul>\n<li>为什么组件的data是一个方法，需要返回一个新的对象指向不同的内存地址。</li>\n<li>父子组件通信</li>\n</ul>\n<ol>\n<li>通过props向子组件传递数据。properties（属性）<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cpn</span> <span class=\"attr\">:cmsg</span>=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">const</span> cpn=&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  template:<span class=\"string\">``</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//传数组</span></span></span><br><span class=\"line\"><span class=\"javascript\">  props:[<span class=\"string\">&#x27;cmsg&#x27;</span>],</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//传对象</span></span></span><br><span class=\"line\">  props:&#123;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//类型限制</span></span></span><br><span class=\"line\"><span class=\"javascript\">  cmsg:<span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//提供默认值及必传值 </span></span></span><br><span class=\"line\">  cmsg:&#123;</span><br><span class=\"line\"><span class=\"javascript\">     cmsg:<span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">default</span>:<span class=\"string\">&#x27;默认值&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">     required:<span class=\"literal\">true</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//默认值如果是个对象或者数组 必须为一个函数</span></span></span><br><span class=\"line\">   cmsg:&#123;</span><br><span class=\"line\"><span class=\"javascript\">     cmsg:<span class=\"built_in\">Array</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"function\"><span class=\"title\">default</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">return</span> []</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"><span class=\"javascript\">     required:<span class=\"literal\">true</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>/&gt;</span></span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>props中的驼峰标识 用- 入 cInfo等同于 c-info</li>\n</ul>\n<ol start=\"2\">\n<li>通过事件像父组件发送消息。自定义事件 $emit(发射) Events（事件）<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components: &#123;</span><br><span class=\"line\">    cpn: &#123;</span><br><span class=\"line\">      props: [<span class=\"string\">&quot;cmsg&quot;</span>],</span><br><span class=\"line\">      template: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">       &lt;p&gt;&#123;&#123;cmsg&#125;&#125;这是子组件&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;button v-for=&quot;item in books&quot; @click=&quot;hanleclick(item)&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">      `</span>,</span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          books: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;代码大全&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">90</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-02&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;UNIX编程&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">80</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-03&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;算法导论&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">75</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-05&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">4</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;编程珠玑&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-06&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      methods: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">hanleclick</span>(<span class=\"params\">item</span>)</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&quot;itemClick&quot;</span>,item)</span><br><span class=\"line\">         <span class=\"comment\">// console.log(item);</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></li>\n<li>父子组件的访问方式</li>\n</ol>\n<ul>\n<li>父组件访问子组件：$children或$refs reference(引用)。</li>\n<li>子组件访问父组件：$parent。<h2 id=\"0-11-插槽slot\"><a href=\"#0-11-插槽slot\" class=\"headerlink\" title=\"0.11. 插槽slot\"></a>0.11. 插槽slot</h2></li>\n</ul>\n<ol>\n<li>插槽的基本使用<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span> <span class=\"attr\">:cmsg</span>=<span class=\"string\">&quot;msg&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ccpn&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;slotcolor&quot;</span>&gt;</span>插槽<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span> <span class=\"attr\">:cmsg</span>=<span class=\"string\">&quot;msg&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ccpn&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showmessage&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      msg: <span class=\"string\">&quot;这是父组件传来的值&quot;</span>,</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">showmessage</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"comment\">// console.log(this.$children[0].name);</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.$refs.ccpn.hanleclick();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.msg = <span class=\"built_in\">this</span>.$children[<span class=\"number\">0</span>].name;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.ccpn.name);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    cpn: &#123;</span><br><span class=\"line\"><span class=\"javascript\">      props: [<span class=\"string\">&quot;cmsg&quot;</span>],</span></span><br><span class=\"line\">      template: `</span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">cmsg</span>&#125;&#125;</span><span class=\"xml\">这是子组件<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>子组件按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>插槽默认值<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\">      `,</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          name: <span class=\"string\">&quot;我是子组件的name&quot;</span>,</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">hanleclick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// this.$emit(&quot;itemClick&quot;,item)</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// console.log(item);</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;父组件访问子组件&quot;</span>);</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">//访问父组件</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$parent);</span></span><br><span class=\"line\"><span class=\"javascript\">           <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$root);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//过滤器</span></span></span><br><span class=\"line\">  filters: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.slotcolor</span> &#123;</span></span><br><span class=\"line\">color: rgb(231, 21, 21);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>具名插槽<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      msg: <span class=\"string\">&quot;这是父组件传来的值&quot;</span>,</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">showmessage</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"comment\">// console.log(this.$children[0].name);</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.$refs.ccpn.hanleclick();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.msg = <span class=\"built_in\">this</span>.$children[<span class=\"number\">0</span>].name;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.ccpn.name);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    cpn: &#123;</span><br><span class=\"line\"><span class=\"javascript\">      props: [<span class=\"string\">&quot;cmsg&quot;</span>],</span></span><br><span class=\"line\">      template: `</span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>左边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>中间<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>右边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\">      `,</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          name: <span class=\"string\">&quot;我是子组件的name&quot;</span>,</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">hanleclick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// this.$emit(&quot;itemClick&quot;,item)</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// console.log(item);</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;父组件访问子组件&quot;</span>);</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">//访问父组件</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$parent);</span></span><br><span class=\"line\"><span class=\"javascript\">           <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$root);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//过滤器</span></span></span><br><span class=\"line\">  filters: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">table &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">td &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">th &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  background-color: lightgray;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.slotcolor</span> &#123;</span></span><br><span class=\"line\">color: rgb(231, 21, 21);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>作用域插槽</li>\n</ol>\n<ul>\n<li>编译作用域：组件有自己的作用域，当使用组件时，不会找子组件的属性，会在当前组件中查找，父模板父模板编译，子模板子模板编译。</li>\n<li>父组件替换插槽的标签，但是内容由子组件提供<h2 id=\"0-12-模块化开发\"><a href=\"#0-12-模块化开发\" class=\"headerlink\" title=\"0.12.模块化开发\"></a>0.12.模块化开发</h2></li>\n<li>模块化： 是具有特定功能的一个对象（ 广义理解 ）</li>\n<li>模块定义的流程：</li>\n</ul>\n<ol>\n<li>定义模块（对象）</li>\n<li>导出模块</li>\n<li>引用模块<br>好处：可以存储多个独立的功能块，复用性高</li>\n<li>导出：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式一</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> height=<span class=\"number\">1.88</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age  = <span class=\"string\">&quot;20&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num1+num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;跑&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  height,age,sum,person</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//方式二</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> height=<span class=\"number\">1.88</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> age  = <span class=\"string\">&quot;20&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> num1+num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//三 不命名的导出，其他人导入是可以命名的 但只能有一个</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> height</span><br><span class=\"line\"><span class=\"comment\">//* commonjs </span></span><br><span class=\"line\">    <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    add,</span><br><span class=\"line\">    mul</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>导入：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;height,age,sun,person&#125; form <span class=\"string\">&#x27;./aaa.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> aaa form <span class=\"string\">&#x27;./aaa.js&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//export default 导出是可以自己命名的</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xmheighe form <span class=\"string\">&#x27;./aaa.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> c=<span class=\"keyword\">new</span> person();</span><br><span class=\"line\">c.run()</span><br><span class=\"line\"><span class=\"comment\">//* commonjs </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;add,mul&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./mathutils&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"0-13-webpack\"><a href=\"#0-13-webpack\" class=\"headerlink\" title=\"0.13.webpack\"></a>0.13.webpack</h2></li>\n</ol>\n<ul>\n<li>webpack是模块打包工具，更加强调模块化开发管理而文件压缩、预处理等是它附带的功能。工厂</li>\n<li>gulp更强调前端模块自动化，模块化不是他的核心。工厂流水线</li>\n</ul>\n<ol>\n<li>webpack安装 15 p93 了解知识回顾<h2 id=\"0-14-vue-cli\"><a href=\"#0-14-vue-cli\" class=\"headerlink\" title=\"0.14 vue cli\"></a>0.14 vue cli</h2></li>\n</ol>\n<ul>\n<li>runtime-compiler template-&gt;ast-&gt;render-&gt;vdom-&gt;UI</li>\n<li>runtime-only &gt;render-&gt;vdom-&gt;UI 省掉了把template解析成 ast的过程<h2 id=\"0-15-vue-路由\"><a href=\"#0-15-vue-路由\" class=\"headerlink\" title=\"0.15. vue 路由\"></a>0.15. vue 路由</h2></li>\n<li>后端路由：有服务器处理url和页面之间的映射关系</li>\n<li>前后端分离：后端只提供数据，不负责任何阶段的内容</li>\n<li>前端渲染：浏览器网页中的大部分内容，都是由前端写的js代码在浏览器中执行，最终渲染出来的网页。</li>\n<li>SPA （single page web application） 单页面富应用</li>\n<li>前端路由管理url和页面的映射关系</li>\n<li>改变URL不发生刷新</li>\n</ul>\n<ol>\n<li>url hash</li>\n<li>history.pushState 入栈和出栈的阶段 replaceState是不能返回的</li>\n<li>history.back()、history.forward和history.go(-1)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//请求接口封装</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> instance = axios.create(&#123;</span><br><span class=\"line\">        baseURL: <span class=\"string\">&#x27;你的接口地址&#x27;</span>,</span><br><span class=\"line\">        timeout: <span class=\"number\">5000</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//请求拦截</span></span><br><span class=\"line\">    instance.interceptors.request.use(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> config</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//响应拦截</span></span><br><span class=\"line\">    instance.interceptors.response.use(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(res);</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.data</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(err);</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance(config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// .then(res =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     resolve(res)</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;).catch(err =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     reject(err)</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue响应式原理\"><a href=\"#vue响应式原理\" class=\"headerlink\" title=\"vue响应式原理\"></a>vue响应式原理</h2></li>\n<li>Vue内部是如何监听数据改变的  </li>\n</ol>\n<ul>\n<li>Object.defineProperty 监听对象属性的改变</li>\n</ul>\n<ol start=\"2\">\n<li>vue如何知道要通知哪些人，界面发生刷新</li>\n</ol>\n<ul>\n<li>发布订阅者模式</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj=&#123;</span><br><span class=\"line\">  name:<span class=\"string\">&#x27;哈哈哈&#x27;</span>,</span><br><span class=\"line\">  message:<span class=\"string\">&#x27;dxy&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span>=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> value = obj[key]</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperty(obj,key,&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">      value= newValue</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>“在我看来，春天里一棵小草生长，它没有什么目的。风起时一匹公马发情，它也没有什么目的。草长马发情，绝非表演给什么人看的，这就是存在本身。我要抱着草长马发情的伟大真诚去做一切事，而不是在人前羞羞答答地表演。在我看来，人都是为了要表演，失去了自己的存在。”   —–王小波</p>\n<h2 id=\"0-1-插值操作的语法和指令\"><a href=\"#0-1-插值操作的语法和指令\" class=\"headerlink\" title=\"0.1. 插值操作的语法和指令\"></a>0.1. 插值操作的语法和指令</h2><ol>\n<li>mustache (使用双大括号进行插值操作)  <strong>[语法]</strong>  </li>\n<li>v-onece：只渲染一次数据，数据在改变时视图不会改变，后不接表达式。</li>\n<li>v-html：解析并插入html<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- url指一个含html标签的变量 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>v-text：将文本放在DOM上进行展示,接受一个string类型。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;message&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>v-pre: 将标签中的元素，不做任何解析，原封不动的显示出来。  </li>\n<li>v-cloak：“斗篷”  在vue没加载之前，存在v-cloak属性，加载后消失<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-attr\">[v-cloak]</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:none</span>;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-cloak</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"0-2-绑定属性\"><a href=\"#0-2-绑定属性\" class=\"headerlink\" title=\"0.2. 绑定属性\"></a>0.2. 绑定属性</h2></li>\n<li> v-bind：可以绑定任何属性，常用动态绑定如src，href。语法糖：：  </li>\n<li>:class:{类名:boolean,类名:boolean}动态绑定class,当boolean为false的时候，DOM中不存该class <strong>[对象语法]</strong><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 括号是不能省略的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;getClass()&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">method:&#123;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">getclass</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">return</span> &#123;类名:boolean,类名:boolean&#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li><p>:class:[‘active’,’line’] **[数组语法]**，一般用于服务器返回的数据，不会经常使用。 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">&lt;!-- 练习 点击列表 改变列表class --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--index==active  遍历的index与active 进行比较 数据驱动视图 --&gt;</span></span><br><span class=\"line\">      &lt;li</span><br><span class=\"line\">        :key=&quot;index&quot;</span><br><span class=\"line\">        :class=&quot;&#123;line:index==active&#125;&quot;</span><br><span class=\"line\">        @click=&quot;changeColor(index)&quot;</span><br><span class=\"line\">        v-for=&quot;(m,index) in movies&quot;</span><br><span class=\"line\">      &gt;&#123;&#123;m&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      movies: [<span class=\"string\">&quot;vue&quot;</span>, <span class=\"string\">&quot;react&quot;</span>, <span class=\"string\">&quot;angular&quot;</span>],</span></span><br><span class=\"line\">      active: 0,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">changeColor</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.active = index;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.line</span> &#123;</span></span><br><span class=\"line\">  color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"3\">\n<li>:style:   </li>\n</ol>\n<p><strong>[对象语法]</strong>  :style=”{key(style属性名，可以使用驼峰标识 如font-size可以写成fontSize):value(属性值，不写’’ vue会吧属性值解析成变量)}”<br><strong>[数组语法]</strong> :style=”[style1,style2]” <strong>style1与style2为{属性名:属性值}，{属性名：属性值}</strong></p>\n<h2 id=\"0-3-计算属性-computed\"><a href=\"#0-3-计算属性-computed\" class=\"headerlink\" title=\"0.3. 计算属性 computed\"></a>0.3. 计算属性 computed</h2><p><strong>某些情况我们可能会对数据进行转化或者合并到一起，这个时候就需要用到计算属性</strong>  </p>\n<ul>\n<li>按照属性的方式给函数命名 如 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fullName：<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> fristName + lastName</span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure></li>\n<li>*创建vue时可以在option中传入**  </li>\n<li>el： </li>\n<li>data： </li>\n<li>methods：</li>\n<li>computed：</li>\n<li>生命周期函数</li>\n<li>计算属性的getter和setter </li>\n<li>*每个计算属性中都包含getter和setter** <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed:&#123;</span><br><span class=\"line\">  fullname:&#123;</span><br><span class=\"line\">    <span class=\"comment\">//使用get方法计算值</span></span><br><span class=\"line\">    get:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"string\">&#x27;abc&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//在给计算值赋值是调用get方法 一般时不使用 set方法是有参数的</span></span><br><span class=\"line\">    set:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>计算属性的缓存<br>计算属性是有缓存的，会比methods性能更高，因为methods会多次调用，而在变量没有改变时computed只会调用一次。<h2 id=\"0-4-ES6语法（补充）-js作者-Brendan-Eich\"><a href=\"#0-4-ES6语法（补充）-js作者-Brendan-Eich\" class=\"headerlink\" title=\"0.4. ES6语法（补充） js作者 Brendan Eich\"></a>0.4. ES6语法（补充） js作者 Brendan Eich</h2>let：块级作用域 当变量需要改变时</li>\n<li>变量作用域：变量在什么范围内是可用的 var是没有块级作用域的<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//无块级作用域，打印出的是第btn.length个按钮（错误的方式）</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;btn.length; i++)&#123;</span><br><span class=\"line\">   btn[i].addEventListener.(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;点击第&#x27;</span>+i+<span class=\"string\">&#x27;按钮&#x27;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//闭包可以解决该问题 </span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;btn.length; i++)&#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">  btn[i].addEventListener.(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;点击第&#x27;</span>+ num +<span class=\"string\">&#x27;按钮&#x27;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">  &#125;)(i)</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"comment\">//ES6 let </span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;btn.length; i++)</span><br><span class=\"line\">   <span class=\"comment\">//相当于下面的大括号有自己的作用域</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   btn[i].addEventListener.(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">   </span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;点击第&#x27;</span>+i+<span class=\"string\">&#x27;按钮&#x27;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\nconst：将变量修饰成常量，不可以赋值。建议：优先使用const，只有需要改变某一标识符时才使用let。</li>\n<li>一旦给const 修饰的常量，不能进行修改。</li>\n<li>在使用const时，一定要进行赋值。</li>\n<li>常量的含义是指向的对象不能修改，但是可以改变内部对象的属性。<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不能赋值是因为对象内存地址不能改变</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj =&#123;</span><br><span class=\"line\">  name:<span class=\"string\">&#x27;deng&#x27;</span>,</span><br><span class=\"line\">  age:<span class=\"number\">24</span>,</span><br><span class=\"line\">  height:<span class=\"number\">186</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//这样赋值是不会改变对象的内存地址的</span></span><br><span class=\"line\">obj.name = <span class=\"string\">&#x27;xuyang&#x27;</span></span><br></pre></td></tr></table></figure>\n对象字面量的增强写法：</li>\n<li>字面量：obj={} 这个括号就是字面量<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//es6中这样赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>  name=<span class=\"string\">&#x27;deng&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> age=<span class=\"number\">24</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> height=<span class=\"number\">186</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj =&#123;</span><br><span class=\"line\">  name,</span><br><span class=\"line\">  age,</span><br><span class=\"line\">  height</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n函数的增强写法<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj=&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ES6中这样写就可以</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">eat</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  name:<span class=\"string\">&#x27;deng&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"0-5-v-on指令\"><a href=\"#0-5-v-on指令\" class=\"headerlink\" title=\"0.5. v-on指令\"></a>0.5. v-on指令</h2>基本使用：v-on:click=”handleAdd”<br>语法糖：@click=”handleAdd”</li>\n<li>在vue中如果@click=”handleAdd”没有参数，而方法需要一个参数，默认传event对象。如果想使用event和其他参数，可以用$event。</li>\n<li>修饰符：</li>\n</ul>\n<ol>\n<li>.stop: @click.stop=”btnclick” 阻止冒泡事件。  </li>\n<li>.prevent:阻止默认事件。</li>\n<li>键盘键的点击 @keyup.enter。</li>\n<li>.navtive 组件的点击事件。</li>\n<li>v-once 只能点击一次。<h2 id=\"0-6-条件判断\"><a href=\"#0-6-条件判断\" class=\"headerlink\" title=\"0.6. 条件判断\"></a>0.6. 条件判断</h2></li>\n<li>v-if：接受Boolean类型的值，控制页面渲染。</li>\n<li>v-else：结合v-if当if条件不满足时，显示v-else。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 用户登录切换的案例 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- tip:当切换时用户输入的内容不会清空 因为vue先进行一个虚拟DOM的渲染，出于性能考虑，会尽量复用已经存在的元素，不会重新创建。加个 key  标识--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;uesrname&quot;</span>&gt;</span></span><br><span class=\"line\">        账号:</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入账号&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;e_mail&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">        邮箱:</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;e_mail&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入邮箱&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">round</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;uesrname = !uesrname&quot;</span>&gt;</span>切换<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      uesrname: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-attr\">[v-cloak]</span> &#123;</span></span><br><span class=\"line\">  display: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.line</span> &#123;</span></span><br><span class=\"line\">  color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>v-show:控制DOM节点是否显示；  </li>\n</ol>\n<ul>\n<li>与v-if的区别：当条件为false时，包含v-if的元素不会存在在DOM中，是创建销毁的过程，而v-show是添加行内style的display，当频繁切换时建议使用v-show。<h2 id=\"0-7-循环遍历\"><a href=\"#0-7-循环遍历\" class=\"headerlink\" title=\"0.7. 循环遍历\"></a>0.7. 循环遍历</h2></li>\n<li>key主要的作用是更高效的更新虚拟dom，但得保证key的唯一性</li>\n</ul>\n<ol>\n<li>遍历数组<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--   knowledge: [&quot;vue&quot;, &quot;react&quot;, &quot;angular&quot;], --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item,index) in knowledge&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>遍历对象<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--    </span></span><br><span class=\"line\"><span class=\"comment\">        objknowledge: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        fristName: &quot;deng&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">        lastName: &quot;xuyang&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">        score: 99,</span></span><br><span class=\"line\"><span class=\"comment\">      &#125; --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(value,key) in objknowledge&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>哪些方法是响应式的：</li>\n</ol>\n<ul>\n<li>push() //向最后一位添加 push(…num)是可变参数，把多个参数变为数组</li>\n<li>pop() //从最后一位删除</li>\n<li>shift() //删除数组中的第一个元素</li>\n<li>unshift() //在数组最前面添加元素</li>\n<li>splice() //splice(位置start，操作几个元素，’加入元素’)</li>\n<li>sort()//排序</li>\n<li>reverse()//反转</li>\n</ul>\n<ol start=\"4\">\n<li>通过索引值修改数据，是不会响应的<br>解决：Vue.set(要修改的对象，索引值，修改后的值)<h2 id=\"0-8-案例：\"><a href=\"#0-8-案例：\" class=\"headerlink\" title=\"0.8. 案例：\"></a>0.8. 案例：</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;books.length&gt;0&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>书籍名称<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>出版日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>价格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>购买数量<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item,index) in books&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.id&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 使用过滤器 显示最终价格样式 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;item.price | showprice&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;increment(index)&quot;</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123;item.count&#125;&#125;</span><br><span class=\"line\">              &lt;el-button</span><br><span class=\"line\">                type=&quot;primary&quot;</span><br><span class=\"line\">                size=&quot;mini&quot;</span><br><span class=\"line\">                :disabled=&quot;item.count&lt;1&quot;</span><br><span class=\"line\">                @click=&quot;decrement(index)&quot;</span><br><span class=\"line\">              &gt;-<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;hangleremove(index)&quot;</span>&gt;</span>移除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>总价:&#123;&#123;totalPrice | showprice&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>暂无书籍<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\">      books: [</span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;代码大全&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">90</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-02&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;UNIX编程&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">80</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-03&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;算法导论&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">75</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-05&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#123; <span class=\"attr\">id</span>: <span class=\"number\">4</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;编程珠玑&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-06&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">increment</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.books[index].count++;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">decrement</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.books[index].count--;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">hangleremove</span>(<span class=\"params\">index</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.books.splice(index, <span class=\"number\">1</span>);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">totalPrice</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> totalPrice = <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//1.普通的for循环</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// for (let i = 0; i &lt; this.books.length; i++) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//   totalPrice += this.books[i].price * this.books[i].count;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//2.for...in</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// for (const i in this.books) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//   totalPrice += this.books[i].price * this.books[i].count;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//3.for...of</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// for (const item of this.books) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//   totalPrice += item.price * item.count;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//reduce</span></span></span><br><span class=\"line\"><span class=\"javascript\">      totalPrice = <span class=\"built_in\">this</span>.books.reduce(</span></span><br><span class=\"line\">        (prevValue, n) =&gt; prevValue + n.price * n.count,</span><br><span class=\"line\">        0</span><br><span class=\"line\">      );</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> totalPrice;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//过滤器</span></span></span><br><span class=\"line\">  filters: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">showprice</span>(<span class=\"params\">price</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;￥&quot;</span> + price.toFixed(<span class=\"number\">2</span>);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">table &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">td &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">th &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  background-color: lightgray;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>编程范式：命令式编程/声明式编程</li>\n<li>编程范式：面向对象编程（第一公民：对象）/函数式编程（第一公民：函数）</li>\n<li>高阶函数 filter/map/reduce</li>\n</ul>\n<ol>\n<li>filter：必须返回Boolean值，当返回一个true时，函数内部会将这次回调的n加入数组中，当返回false是，函数内部会支佛那个过滤掉n。</li>\n<li>map:映射操作</li>\n<li>reduce:对数组中所有的内容进行汇总<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//高阶函数的使用</span></span><br><span class=\"line\">      <span class=\"comment\">//filter</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> nums = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">50</span>, <span class=\"number\">89</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newNums = nums.filter(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n &lt;= <span class=\"number\">100</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//map</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> new2Nums = newNums.map(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n * <span class=\"number\">2</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//reduce prevalue为上一次return的值 0 为初始值</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> total = new2Nums.reduce(<span class=\"function\">(<span class=\"params\">prevalue, n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> prevalue + n;</span><br><span class=\"line\">      &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(total);</span><br><span class=\"line\">      <span class=\"comment\">//高阶写法</span></span><br><span class=\"line\">       <span class=\"keyword\">const</span> nums = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">50</span>, <span class=\"number\">89</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> total = nums</span><br><span class=\"line\">        .filter(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> n &lt; <span class=\"number\">100</span>)</span><br><span class=\"line\">        .map(<span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> n * <span class=\"number\">2</span>)</span><br><span class=\"line\">        .reduce(<span class=\"function\">(<span class=\"params\">prevvalue, n</span>) =&gt;</span> prevvalue + n);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(total);</span><br></pre></td></tr></table></figure>\n<h2 id=\"0-9-v-model使用\"><a href=\"#0-9-v-model使用\" class=\"headerlink\" title=\"0.9. v-model使用\"></a>0.9. v-model使用</h2></li>\n</ol>\n<ul>\n<li>原理：v-model其实是一个语法糖，本质是动态绑定input的:value属性和@input=”things = $event.target.value”事件实现双向绑定</li>\n</ul>\n<ol>\n<li>radio:互斥绑定name，如果绑定想相同的v-model，name可以省略。对应Boolean值</li>\n<li>checkbox：单选对应Boolean；多选对应数组。</li>\n<li>select：单选对应srring类型，多选对应数组类型。</li>\n</ol>\n<ul>\n<li>修饰符</li>\n</ul>\n<ol>\n<li>.lazy：在失去焦点或者enter时候才会更新。</li>\n<li>.number：转换成number。</li>\n<li>.trim：去空格.<h2 id=\"0-10-组件化\"><a href=\"#0-10-组件化\" class=\"headerlink\" title=\"0.10. 组件化\"></a>0.10. 组件化</h2></li>\n</ol>\n<ul>\n<li>常规组件化</li>\n</ul>\n<ol>\n<li>将一个完成的页面分成很多组件。</li>\n<li>每个组件都用于实现页面的一个功能模块。</li>\n<li>而每一个组件都可以进行细分。</li>\n</ol>\n<ul>\n<li>Vue组件化</li>\n</ul>\n<ol>\n<li>他提供了一种抽象，让我们开发一个个独立可复用的小组件来构造我们的应用。</li>\n<li>任何的应用都会被抽象成一颗组件树。</li>\n</ol>\n<ul>\n<li>组件使用步骤</li>\n</ul>\n<ol>\n<li>创建组件构造器。调用 Vue.extend(),传入template作为组件模板</li>\n<li>注册组件。调用 Vue.component()，传入使用时的名称和构造器</li>\n<li>使用组件。</li>\n</ol>\n<ul>\n<li>全局组件和局部组件</li>\n</ul>\n<ol>\n<li>全局组件可以在多个vue实例中引用，通过Vue.component()注册。</li>\n<li>局部组件在某个vue实例下添加component：{<br>组件名：构造器<br>}属性</li>\n</ol>\n<ul>\n<li>父组件和子组件</li>\n</ul>\n<ol>\n<li>组件和组件之间存在层级关系，在父组件构造器中可以注册子组件</li>\n<li>父子组件错误用法：以子标签的形式在vue实例中使用</li>\n</ol>\n<ul>\n<li>组件语法糖 内部调用 Vue.extend()<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局组件</span></span><br><span class=\"line\">vue.component(cpn,&#123;</span><br><span class=\"line\">template:<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">组件内容</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//局部组件</span></span><br><span class=\"line\">components：&#123;</span><br><span class=\"line\">  cpn：&#123;</span><br><span class=\"line\">template:<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">组件内容</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>组件模板分离</li>\n</ul>\n<ol>\n<li>通过script标签，类型为text/x-template，通过注册时cpn:’#id’绑定。</li>\n<li>通过template标签，直接把内容写进去。</li>\n</ol>\n<ul>\n<li>为什么组件的data是一个方法，需要返回一个新的对象指向不同的内存地址。</li>\n<li>父子组件通信</li>\n</ul>\n<ol>\n<li>通过props向子组件传递数据。properties（属性）<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cpn</span> <span class=\"attr\">:cmsg</span>=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">const</span> cpn=&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  template:<span class=\"string\">``</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//传数组</span></span></span><br><span class=\"line\"><span class=\"javascript\">  props:[<span class=\"string\">&#x27;cmsg&#x27;</span>],</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//传对象</span></span></span><br><span class=\"line\">  props:&#123;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//类型限制</span></span></span><br><span class=\"line\"><span class=\"javascript\">  cmsg:<span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//提供默认值及必传值 </span></span></span><br><span class=\"line\">  cmsg:&#123;</span><br><span class=\"line\"><span class=\"javascript\">     cmsg:<span class=\"built_in\">String</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"keyword\">default</span>:<span class=\"string\">&#x27;默认值&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">     required:<span class=\"literal\">true</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//默认值如果是个对象或者数组 必须为一个函数</span></span></span><br><span class=\"line\">   cmsg:&#123;</span><br><span class=\"line\"><span class=\"javascript\">     cmsg:<span class=\"built_in\">Array</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"function\"><span class=\"title\">default</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"keyword\">return</span> []</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"><span class=\"javascript\">     required:<span class=\"literal\">true</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>/&gt;</span></span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>props中的驼峰标识 用- 入 cInfo等同于 c-info</li>\n</ul>\n<ol start=\"2\">\n<li>通过事件像父组件发送消息。自定义事件 $emit(发射) Events（事件）<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components: &#123;</span><br><span class=\"line\">    cpn: &#123;</span><br><span class=\"line\">      props: [<span class=\"string\">&quot;cmsg&quot;</span>],</span><br><span class=\"line\">      template: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">       &lt;p&gt;&#123;&#123;cmsg&#125;&#125;这是子组件&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;button v-for=&quot;item in books&quot; @click=&quot;hanleclick(item)&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">      `</span>,</span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          books: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;代码大全&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">90</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-02&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;UNIX编程&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">80</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-03&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;算法导论&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">75</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-05&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">id</span>: <span class=\"number\">4</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;编程珠玑&quot;</span>, <span class=\"attr\">price</span>: <span class=\"number\">100</span>, <span class=\"attr\">date</span>: <span class=\"string\">&quot;2019-06&quot;</span>, <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      methods: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">hanleclick</span>(<span class=\"params\">item</span>)</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&quot;itemClick&quot;</span>,item)</span><br><span class=\"line\">         <span class=\"comment\">// console.log(item);</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></li>\n<li>父子组件的访问方式</li>\n</ol>\n<ul>\n<li>父组件访问子组件：$children或$refs reference(引用)。</li>\n<li>子组件访问父组件：$parent。<h2 id=\"0-11-插槽slot\"><a href=\"#0-11-插槽slot\" class=\"headerlink\" title=\"0.11. 插槽slot\"></a>0.11. 插槽slot</h2></li>\n</ul>\n<ol>\n<li>插槽的基本使用<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span> <span class=\"attr\">:cmsg</span>=<span class=\"string\">&quot;msg&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ccpn&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;slotcolor&quot;</span>&gt;</span>插槽<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span> <span class=\"attr\">:cmsg</span>=<span class=\"string\">&quot;msg&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ccpn&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showmessage&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      msg: <span class=\"string\">&quot;这是父组件传来的值&quot;</span>,</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">showmessage</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"comment\">// console.log(this.$children[0].name);</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.$refs.ccpn.hanleclick();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.msg = <span class=\"built_in\">this</span>.$children[<span class=\"number\">0</span>].name;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.ccpn.name);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    cpn: &#123;</span><br><span class=\"line\"><span class=\"javascript\">      props: [<span class=\"string\">&quot;cmsg&quot;</span>],</span></span><br><span class=\"line\">      template: `</span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">cmsg</span>&#125;&#125;</span><span class=\"xml\">这是子组件<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>子组件按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>插槽默认值<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\">      `,</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          name: <span class=\"string\">&quot;我是子组件的name&quot;</span>,</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">hanleclick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// this.$emit(&quot;itemClick&quot;,item)</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// console.log(item);</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;父组件访问子组件&quot;</span>);</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">//访问父组件</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$parent);</span></span><br><span class=\"line\"><span class=\"javascript\">           <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$root);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//过滤器</span></span></span><br><span class=\"line\">  filters: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.slotcolor</span> &#123;</span></span><br><span class=\"line\">color: rgb(231, 21, 21);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>具名插槽<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      msg: <span class=\"string\">&quot;这是父组件传来的值&quot;</span>,</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"title\">showmessage</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">     <span class=\"comment\">// console.log(this.$children[0].name);</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.$refs.ccpn.hanleclick();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">this</span>.msg = <span class=\"built_in\">this</span>.$children[<span class=\"number\">0</span>].name;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.ccpn.name);</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    cpn: &#123;</span><br><span class=\"line\"><span class=\"javascript\">      props: [<span class=\"string\">&quot;cmsg&quot;</span>],</span></span><br><span class=\"line\">      template: `</span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>左边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>中间<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">       <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>右边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\">      `,</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          name: <span class=\"string\">&quot;我是子组件的name&quot;</span>,</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      methods: &#123;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">hanleclick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// this.$emit(&quot;itemClick&quot;,item)</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// console.log(item);</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;父组件访问子组件&quot;</span>);</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">//访问父组件</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$parent);</span></span><br><span class=\"line\"><span class=\"javascript\">           <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$root);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">//过滤器</span></span></span><br><span class=\"line\">  filters: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">table &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">td &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">th &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  border-collapse: collapse;</span><br><span class=\"line\">  background-color: lightgray;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.slotcolor</span> &#123;</span></span><br><span class=\"line\">color: rgb(231, 21, 21);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>作用域插槽</li>\n</ol>\n<ul>\n<li>编译作用域：组件有自己的作用域，当使用组件时，不会找子组件的属性，会在当前组件中查找，父模板父模板编译，子模板子模板编译。</li>\n<li>父组件替换插槽的标签，但是内容由子组件提供<h2 id=\"0-12-模块化开发\"><a href=\"#0-12-模块化开发\" class=\"headerlink\" title=\"0.12.模块化开发\"></a>0.12.模块化开发</h2></li>\n<li>模块化： 是具有特定功能的一个对象（ 广义理解 ）</li>\n<li>模块定义的流程：</li>\n</ul>\n<ol>\n<li>定义模块（对象）</li>\n<li>导出模块</li>\n<li>引用模块<br>好处：可以存储多个独立的功能块，复用性高</li>\n<li>导出：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式一</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> height=<span class=\"number\">1.88</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age  = <span class=\"string\">&quot;20&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num1+num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;跑&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  height,age,sum,person</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//方式二</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> height=<span class=\"number\">1.88</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> age  = <span class=\"string\">&quot;20&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> num1+num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//三 不命名的导出，其他人导入是可以命名的 但只能有一个</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> height</span><br><span class=\"line\"><span class=\"comment\">//* commonjs </span></span><br><span class=\"line\">    <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    add,</span><br><span class=\"line\">    mul</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>导入：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;height,age,sun,person&#125; form <span class=\"string\">&#x27;./aaa.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> aaa form <span class=\"string\">&#x27;./aaa.js&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//export default 导出是可以自己命名的</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xmheighe form <span class=\"string\">&#x27;./aaa.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> c=<span class=\"keyword\">new</span> person();</span><br><span class=\"line\">c.run()</span><br><span class=\"line\"><span class=\"comment\">//* commonjs </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;add,mul&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./mathutils&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"0-13-webpack\"><a href=\"#0-13-webpack\" class=\"headerlink\" title=\"0.13.webpack\"></a>0.13.webpack</h2></li>\n</ol>\n<ul>\n<li>webpack是模块打包工具，更加强调模块化开发管理而文件压缩、预处理等是它附带的功能。工厂</li>\n<li>gulp更强调前端模块自动化，模块化不是他的核心。工厂流水线</li>\n</ul>\n<ol>\n<li>webpack安装 15 p93 了解知识回顾<h2 id=\"0-14-vue-cli\"><a href=\"#0-14-vue-cli\" class=\"headerlink\" title=\"0.14 vue cli\"></a>0.14 vue cli</h2></li>\n</ol>\n<ul>\n<li>runtime-compiler template-&gt;ast-&gt;render-&gt;vdom-&gt;UI</li>\n<li>runtime-only &gt;render-&gt;vdom-&gt;UI 省掉了把template解析成 ast的过程<h2 id=\"0-15-vue-路由\"><a href=\"#0-15-vue-路由\" class=\"headerlink\" title=\"0.15. vue 路由\"></a>0.15. vue 路由</h2></li>\n<li>后端路由：有服务器处理url和页面之间的映射关系</li>\n<li>前后端分离：后端只提供数据，不负责任何阶段的内容</li>\n<li>前端渲染：浏览器网页中的大部分内容，都是由前端写的js代码在浏览器中执行，最终渲染出来的网页。</li>\n<li>SPA （single page web application） 单页面富应用</li>\n<li>前端路由管理url和页面的映射关系</li>\n<li>改变URL不发生刷新</li>\n</ul>\n<ol>\n<li>url hash</li>\n<li>history.pushState 入栈和出栈的阶段 replaceState是不能返回的</li>\n<li>history.back()、history.forward和history.go(-1)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//请求接口封装</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> instance = axios.create(&#123;</span><br><span class=\"line\">        baseURL: <span class=\"string\">&#x27;你的接口地址&#x27;</span>,</span><br><span class=\"line\">        timeout: <span class=\"number\">5000</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//请求拦截</span></span><br><span class=\"line\">    instance.interceptors.request.use(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> config</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//响应拦截</span></span><br><span class=\"line\">    instance.interceptors.response.use(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(res);</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.data</span><br><span class=\"line\">    &#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(err);</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance(config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// .then(res =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     resolve(res)</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;).catch(err =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     reject(err)</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue响应式原理\"><a href=\"#vue响应式原理\" class=\"headerlink\" title=\"vue响应式原理\"></a>vue响应式原理</h2></li>\n<li>Vue内部是如何监听数据改变的  </li>\n</ol>\n<ul>\n<li>Object.defineProperty 监听对象属性的改变</li>\n</ul>\n<ol start=\"2\">\n<li>vue如何知道要通知哪些人，界面发生刷新</li>\n</ol>\n<ul>\n<li>发布订阅者模式</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj=&#123;</span><br><span class=\"line\">  name:<span class=\"string\">&#x27;哈哈哈&#x27;</span>,</span><br><span class=\"line\">  message:<span class=\"string\">&#x27;dxy&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span>=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> value = obj[key]</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperty(obj,key,&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">      value= newValue</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>"},{"title":"git强制推送和拉取","date":"2021-01-26T11:44:02.000Z","_content":"当本地或远程仓库被破坏时可强制覆盖文件  \n                                              \n强制拉取\n```\n git fetch --all && git reset --hard origin/master && git pull\n```\n强制推送\n```\ngit push -f origin master\n```","source":"_posts/git强制推送和拉取.md","raw":"---\ntitle: git强制推送和拉取\ndate: 2021-01-26 19:44:02\ntags:\ncategories:\n- 开发工具\n---\n当本地或远程仓库被破坏时可强制覆盖文件  \n                                              \n强制拉取\n```\n git fetch --all && git reset --hard origin/master && git pull\n```\n强制推送\n```\ngit push -f origin master\n```","slug":"git强制推送和拉取","published":1,"updated":"2021-03-04T12:20:23.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckluu99kv0000kwu4ge8uaq6y","content":"<p>当本地或远程仓库被破坏时可强制覆盖文件  </p>\n<p>强制拉取</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all &amp;&amp; git reset --hard origin&#x2F;master &amp;&amp; git pull</span><br></pre></td></tr></table></figure>\n<p>强制推送</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin master</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>当本地或远程仓库被破坏时可强制覆盖文件  </p>\n<p>强制拉取</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all &amp;&amp; git reset --hard origin&#x2F;master &amp;&amp; git pull</span><br></pre></td></tr></table></figure>\n<p>强制推送</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin master</span><br></pre></td></tr></table></figure>"},{"title":"python scrapy框架学习","date":"2021-02-23T09:20:27.000Z","_content":"## 安装\n首先我是在Windows平台，进行学习，所以安装和之后发生的问题和解决都是基于Windows，之后可能会在linux，但不是现在，主要记录学习的过程，总结经验。好，接下来，干！\n### 1. 安装python\n就直接莽官网<http://python.org/download>下载2.7版本，这里我按照scrapy文档上添加环境变量，发生了一点问题，安装后查看版本号没有反应，后手动解决，执行如下命令行。\n```\nset PATH=C:\\Python27;%PATH%\n```\n* Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具无需手动安装\n### 2. 安装pywin32\n安装地址<https://github.com/mhammond/pywin32/releases>找到自己的系统版本和对应的python版本。\n### 3. 安装Scrapy\n```\npip install Scrapy\n```\n## 爬虫\n### 1.新建爬虫项目\n首先新建个文件夹执行\n```\nscrapy startproject mySpider\n```\n这样一个scrapy的框架就建好了\n\n### 2.创建一个爬虫\n* 首先需要在items.py文件里创建写一个存放抓取数据的容器，就是item\n```py\nimport scrapy\n\nclass ItcastItem(scrapy.Item):\n   name = scrapy.Field()\n   title = scrapy.Field()\n   info = scrapy.Field()\n```\n* 新建一个python文件，如果是2.x的版本，需要注意编码在头部加上\n``` py\n# -*- coding: utf-8 -*-\n```\n我按照菜鸟教程抓取的传智播客老师的信息，代码是直接搬运的[原地址](https://www.runoob.com/w3cnote/scrapy-detail.html)，代码如下\n```py\n# -*- coding: utf-8 -*-\nimport scrapy\nfrom testspider.items import ItcastItem\n\n# 以下三行是在 Python2.x版本中解决乱码问题，Python3.x 版本的可以去掉\nimport sys\nreload(sys)\nsys.setdefaultencoding(\"utf-8\")\n\nclass Opp2Spider(scrapy.Spider):\n    name = 'itcast'\n    allowed_domains = ['itcast.com']\n    start_urls = (\"http://www.itcast.cn/channel/teacher.shtml\",)\n\n    def parse(self, response):\n        #open(\"teacher.html\",\"wb\").write(response.body).close()\n\n        # 存放老师信息的集合\n        items = []\n\n        for each in response.xpath(\"//div[@class='li_txt']\"):\n            # 将我们得到的数据封装到一个 `ItcastItem` 对象\n            item = ItcastItem()\n            #extract()方法返回的都是unicode字符串\n            name = each.xpath(\"h3/text()\").extract()\n            title = each.xpath(\"h4/text()\").extract()\n            info = each.xpath(\"p/text()\").extract()\n\n            #xpath返回的是包含一个元素的列表\n            item['name'] = name[0]\n            item['title'] = title[0]\n            item['info'] = info[0]\n\n            items.append(item)\n\n        # 直接返回最后数据\n        return items\n```\n* 保存数据  \n在命令行中运行\n```\nscrapy crawl itcast -o teachers.json\n```\n这样一个简单的爬虫就写好了\n#### 持续更新中。。。。","source":"_posts/pythonScrapy.md","raw":"---\ntitle: python scrapy框架学习\ndate: 2021-02-23 17:20:27\ntags: python\ncategories:\n- python\n---\n## 安装\n首先我是在Windows平台，进行学习，所以安装和之后发生的问题和解决都是基于Windows，之后可能会在linux，但不是现在，主要记录学习的过程，总结经验。好，接下来，干！\n### 1. 安装python\n就直接莽官网<http://python.org/download>下载2.7版本，这里我按照scrapy文档上添加环境变量，发生了一点问题，安装后查看版本号没有反应，后手动解决，执行如下命令行。\n```\nset PATH=C:\\Python27;%PATH%\n```\n* Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具无需手动安装\n### 2. 安装pywin32\n安装地址<https://github.com/mhammond/pywin32/releases>找到自己的系统版本和对应的python版本。\n### 3. 安装Scrapy\n```\npip install Scrapy\n```\n## 爬虫\n### 1.新建爬虫项目\n首先新建个文件夹执行\n```\nscrapy startproject mySpider\n```\n这样一个scrapy的框架就建好了\n\n### 2.创建一个爬虫\n* 首先需要在items.py文件里创建写一个存放抓取数据的容器，就是item\n```py\nimport scrapy\n\nclass ItcastItem(scrapy.Item):\n   name = scrapy.Field()\n   title = scrapy.Field()\n   info = scrapy.Field()\n```\n* 新建一个python文件，如果是2.x的版本，需要注意编码在头部加上\n``` py\n# -*- coding: utf-8 -*-\n```\n我按照菜鸟教程抓取的传智播客老师的信息，代码是直接搬运的[原地址](https://www.runoob.com/w3cnote/scrapy-detail.html)，代码如下\n```py\n# -*- coding: utf-8 -*-\nimport scrapy\nfrom testspider.items import ItcastItem\n\n# 以下三行是在 Python2.x版本中解决乱码问题，Python3.x 版本的可以去掉\nimport sys\nreload(sys)\nsys.setdefaultencoding(\"utf-8\")\n\nclass Opp2Spider(scrapy.Spider):\n    name = 'itcast'\n    allowed_domains = ['itcast.com']\n    start_urls = (\"http://www.itcast.cn/channel/teacher.shtml\",)\n\n    def parse(self, response):\n        #open(\"teacher.html\",\"wb\").write(response.body).close()\n\n        # 存放老师信息的集合\n        items = []\n\n        for each in response.xpath(\"//div[@class='li_txt']\"):\n            # 将我们得到的数据封装到一个 `ItcastItem` 对象\n            item = ItcastItem()\n            #extract()方法返回的都是unicode字符串\n            name = each.xpath(\"h3/text()\").extract()\n            title = each.xpath(\"h4/text()\").extract()\n            info = each.xpath(\"p/text()\").extract()\n\n            #xpath返回的是包含一个元素的列表\n            item['name'] = name[0]\n            item['title'] = title[0]\n            item['info'] = info[0]\n\n            items.append(item)\n\n        # 直接返回最后数据\n        return items\n```\n* 保存数据  \n在命令行中运行\n```\nscrapy crawl itcast -o teachers.json\n```\n这样一个简单的爬虫就写好了\n#### 持续更新中。。。。","slug":"pythonScrapy","published":1,"updated":"2021-03-04T12:20:23.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckluu99ky0001kwu45ndv9fjl","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先我是在Windows平台，进行学习，所以安装和之后发生的问题和解决都是基于Windows，之后可能会在linux，但不是现在，主要记录学习的过程，总结经验。好，接下来，干！</p>\n<h3 id=\"1-安装python\"><a href=\"#1-安装python\" class=\"headerlink\" title=\"1. 安装python\"></a>1. 安装python</h3><p>就直接莽官网<a class=\"link\"   href=\"http://python.org/download\" >http://python.org/download<i class=\"fas fa-external-link-alt\"></i></a>下载2.7版本，这里我按照scrapy文档上添加环境变量，发生了一点问题，安装后查看版本号没有反应，后手动解决，执行如下命令行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set PATH&#x3D;C:\\Python27;%PATH%</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具无需手动安装<h3 id=\"2-安装pywin32\"><a href=\"#2-安装pywin32\" class=\"headerlink\" title=\"2. 安装pywin32\"></a>2. 安装pywin32</h3>安装地址<a class=\"link\"   href=\"https://github.com/mhammond/pywin32/releases\" >https://github.com/mhammond/pywin32/releases<i class=\"fas fa-external-link-alt\"></i></a>找到自己的系统版本和对应的python版本。<h3 id=\"3-安装Scrapy\"><a href=\"#3-安装Scrapy\" class=\"headerlink\" title=\"3. 安装Scrapy\"></a>3. 安装Scrapy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Scrapy</span><br></pre></td></tr></table></figure>\n<h2 id=\"爬虫\"><a href=\"#爬虫\" class=\"headerlink\" title=\"爬虫\"></a>爬虫</h2><h3 id=\"1-新建爬虫项目\"><a href=\"#1-新建爬虫项目\" class=\"headerlink\" title=\"1.新建爬虫项目\"></a>1.新建爬虫项目</h3>首先新建个文件夹执行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy startproject mySpider</span><br></pre></td></tr></table></figure>\n这样一个scrapy的框架就建好了</li>\n</ul>\n<h3 id=\"2-创建一个爬虫\"><a href=\"#2-创建一个爬虫\" class=\"headerlink\" title=\"2.创建一个爬虫\"></a>2.创建一个爬虫</h3><ul>\n<li>首先需要在items.py文件里创建写一个存放抓取数据的容器，就是item<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ItcastItem</span>(<span class=\"params\">scrapy.Item</span>):</span></span><br><span class=\"line\">   name = scrapy.Field()</span><br><span class=\"line\">   title = scrapy.Field()</span><br><span class=\"line\">   info = scrapy.Field()</span><br></pre></td></tr></table></figure></li>\n<li>新建一个python文件，如果是2.x的版本，需要注意编码在头部加上<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure>\n我按照菜鸟教程抓取的传智播客老师的信息，代码是直接搬运的<a class=\"link\"   href=\"https://www.runoob.com/w3cnote/scrapy-detail.html\" >原地址<i class=\"fas fa-external-link-alt\"></i></a>，代码如下<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"keyword\">from</span> testspider.items <span class=\"keyword\">import</span> ItcastItem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下三行是在 Python2.x版本中解决乱码问题，Python3.x 版本的可以去掉</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Opp2Spider</span>(<span class=\"params\">scrapy.Spider</span>):</span></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;itcast&#x27;</span></span><br><span class=\"line\">    allowed_domains = [<span class=\"string\">&#x27;itcast.com&#x27;</span>]</span><br><span class=\"line\">    start_urls = (<span class=\"string\">&quot;http://www.itcast.cn/channel/teacher.shtml&quot;</span>,)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse</span>(<span class=\"params\">self, response</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#open(&quot;teacher.html&quot;,&quot;wb&quot;).write(response.body).close()</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 存放老师信息的集合</span></span><br><span class=\"line\">        items = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> response.xpath(<span class=\"string\">&quot;//div[@class=&#x27;li_txt&#x27;]&quot;</span>):</span><br><span class=\"line\">            <span class=\"comment\"># 将我们得到的数据封装到一个 `ItcastItem` 对象</span></span><br><span class=\"line\">            item = ItcastItem()</span><br><span class=\"line\">            <span class=\"comment\">#extract()方法返回的都是unicode字符串</span></span><br><span class=\"line\">            name = each.xpath(<span class=\"string\">&quot;h3/text()&quot;</span>).extract()</span><br><span class=\"line\">            title = each.xpath(<span class=\"string\">&quot;h4/text()&quot;</span>).extract()</span><br><span class=\"line\">            info = each.xpath(<span class=\"string\">&quot;p/text()&quot;</span>).extract()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#xpath返回的是包含一个元素的列表</span></span><br><span class=\"line\">            item[<span class=\"string\">&#x27;name&#x27;</span>] = name[<span class=\"number\">0</span>]</span><br><span class=\"line\">            item[<span class=\"string\">&#x27;title&#x27;</span>] = title[<span class=\"number\">0</span>]</span><br><span class=\"line\">            item[<span class=\"string\">&#x27;info&#x27;</span>] = info[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            items.append(item)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 直接返回最后数据</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> items</span><br></pre></td></tr></table></figure></li>\n<li>保存数据<br>在命令行中运行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy crawl itcast -o teachers.json</span><br></pre></td></tr></table></figure>\n这样一个简单的爬虫就写好了<h4 id=\"持续更新中。。。。\"><a href=\"#持续更新中。。。。\" class=\"headerlink\" title=\"持续更新中。。。。\"></a>持续更新中。。。。</h4></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先我是在Windows平台，进行学习，所以安装和之后发生的问题和解决都是基于Windows，之后可能会在linux，但不是现在，主要记录学习的过程，总结经验。好，接下来，干！</p>\n<h3 id=\"1-安装python\"><a href=\"#1-安装python\" class=\"headerlink\" title=\"1. 安装python\"></a>1. 安装python</h3><p>就直接莽官网<a class=\"link\"   href=\"http://python.org/download\" >http://python.org/download<i class=\"fas fa-external-link-alt\"></i></a>下载2.7版本，这里我按照scrapy文档上添加环境变量，发生了一点问题，安装后查看版本号没有反应，后手动解决，执行如下命令行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set PATH&#x3D;C:\\Python27;%PATH%</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具无需手动安装<h3 id=\"2-安装pywin32\"><a href=\"#2-安装pywin32\" class=\"headerlink\" title=\"2. 安装pywin32\"></a>2. 安装pywin32</h3>安装地址<a class=\"link\"   href=\"https://github.com/mhammond/pywin32/releases\" >https://github.com/mhammond/pywin32/releases<i class=\"fas fa-external-link-alt\"></i></a>找到自己的系统版本和对应的python版本。<h3 id=\"3-安装Scrapy\"><a href=\"#3-安装Scrapy\" class=\"headerlink\" title=\"3. 安装Scrapy\"></a>3. 安装Scrapy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Scrapy</span><br></pre></td></tr></table></figure>\n<h2 id=\"爬虫\"><a href=\"#爬虫\" class=\"headerlink\" title=\"爬虫\"></a>爬虫</h2><h3 id=\"1-新建爬虫项目\"><a href=\"#1-新建爬虫项目\" class=\"headerlink\" title=\"1.新建爬虫项目\"></a>1.新建爬虫项目</h3>首先新建个文件夹执行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy startproject mySpider</span><br></pre></td></tr></table></figure>\n这样一个scrapy的框架就建好了</li>\n</ul>\n<h3 id=\"2-创建一个爬虫\"><a href=\"#2-创建一个爬虫\" class=\"headerlink\" title=\"2.创建一个爬虫\"></a>2.创建一个爬虫</h3><ul>\n<li>首先需要在items.py文件里创建写一个存放抓取数据的容器，就是item<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ItcastItem</span>(<span class=\"params\">scrapy.Item</span>):</span></span><br><span class=\"line\">   name = scrapy.Field()</span><br><span class=\"line\">   title = scrapy.Field()</span><br><span class=\"line\">   info = scrapy.Field()</span><br></pre></td></tr></table></figure></li>\n<li>新建一个python文件，如果是2.x的版本，需要注意编码在头部加上<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure>\n我按照菜鸟教程抓取的传智播客老师的信息，代码是直接搬运的<a class=\"link\"   href=\"https://www.runoob.com/w3cnote/scrapy-detail.html\" >原地址<i class=\"fas fa-external-link-alt\"></i></a>，代码如下<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"keyword\">from</span> testspider.items <span class=\"keyword\">import</span> ItcastItem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下三行是在 Python2.x版本中解决乱码问题，Python3.x 版本的可以去掉</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Opp2Spider</span>(<span class=\"params\">scrapy.Spider</span>):</span></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;itcast&#x27;</span></span><br><span class=\"line\">    allowed_domains = [<span class=\"string\">&#x27;itcast.com&#x27;</span>]</span><br><span class=\"line\">    start_urls = (<span class=\"string\">&quot;http://www.itcast.cn/channel/teacher.shtml&quot;</span>,)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse</span>(<span class=\"params\">self, response</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#open(&quot;teacher.html&quot;,&quot;wb&quot;).write(response.body).close()</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 存放老师信息的集合</span></span><br><span class=\"line\">        items = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> response.xpath(<span class=\"string\">&quot;//div[@class=&#x27;li_txt&#x27;]&quot;</span>):</span><br><span class=\"line\">            <span class=\"comment\"># 将我们得到的数据封装到一个 `ItcastItem` 对象</span></span><br><span class=\"line\">            item = ItcastItem()</span><br><span class=\"line\">            <span class=\"comment\">#extract()方法返回的都是unicode字符串</span></span><br><span class=\"line\">            name = each.xpath(<span class=\"string\">&quot;h3/text()&quot;</span>).extract()</span><br><span class=\"line\">            title = each.xpath(<span class=\"string\">&quot;h4/text()&quot;</span>).extract()</span><br><span class=\"line\">            info = each.xpath(<span class=\"string\">&quot;p/text()&quot;</span>).extract()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#xpath返回的是包含一个元素的列表</span></span><br><span class=\"line\">            item[<span class=\"string\">&#x27;name&#x27;</span>] = name[<span class=\"number\">0</span>]</span><br><span class=\"line\">            item[<span class=\"string\">&#x27;title&#x27;</span>] = title[<span class=\"number\">0</span>]</span><br><span class=\"line\">            item[<span class=\"string\">&#x27;info&#x27;</span>] = info[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            items.append(item)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 直接返回最后数据</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> items</span><br></pre></td></tr></table></figure></li>\n<li>保存数据<br>在命令行中运行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy crawl itcast -o teachers.json</span><br></pre></td></tr></table></figure>\n这样一个简单的爬虫就写好了<h4 id=\"持续更新中。。。。\"><a href=\"#持续更新中。。。。\" class=\"headerlink\" title=\"持续更新中。。。。\"></a>持续更新中。。。。</h4></li>\n</ul>\n"},{"title":"公用代码片段","date":"2021-01-27T09:59:26.000Z","_content":"整理工作中一些公用的代码片段  \n&nbsp;  \n&nbsp;  \n&nbsp;  \n## 时间处理\n### 格式化时间\n```js\n //格式化表格中的时间\n        formatDate(dateStr, fmt = 'yyyy-MM-dd hh:mm:ss') {\n            if (!dateStr) return;\n            const date = new Date(dateStr);\n            const o = {\n                'M+': date.getMonth() + 1, // 月份\n                'd+': date.getDate(), // 日\n                'h+': date.getHours(), // 小时\n                'm+': date.getMinutes(), // 分\n                's+': date.getSeconds(), // 秒\n                'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\n                S: date.getMilliseconds(), // 毫秒\n            };\n\n            if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (`${date.getFullYear()}`).substr(4 - RegExp.$1.length)); }\n            for (const k in o) {\n                if (new RegExp(`(${k})`).test(fmt)) { fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((`00${o[k]}`).substr((`${o[k]}`).length))); }\n            }\n            return fmt;\n        }\n//格式化时间\n formatDate(obj) {\n            var time = new Date(obj);\n            var y = time.getFullYear(); //年\n            var m = time.getMonth() + 1; //月\n            if (m < 10) { m = '0' + m }\n            var d = time.getDate(); //日\n            if (d < 10) { d = '0' + d }\n            var h = time.getHours(); //时\n            if (h < 10) { h = '0' + h }\n            var mm = time.getMinutes(); //分\n            if (mm < 10) { mm = '0' + mm }\n            var s = time.getSeconds(); //秒\n            if (s < 10) { s = '0' + s }\n            var timeStr = y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + mm + \":\" + s;\n            return timeStr;\n        },\n```\n### 获取当前时间\n```js\n  //处理默认选中当前日期\n        getNowTime(isDate) {\n            var now = new Date();\n            var year = now.getFullYear(); //得到年份\n            var month = now.getMonth(); //得到月份\n            var date = now.getDate(); //得到日期\n            var hh = now.getHours();\n            var mm = now.getMinutes();\n            var ss = now.getSeconds();\n            var hour = \" \" + hh + \":\" + mm + \":\" + ss + \"\"; //默认时分秒 如果传给后台的格式为年月日时分秒，就需要加这个，如若不需要，此行可忽略\n            month = month + 1;\n            month = month.toString().padStart(2, \"0\");\n            date = date.toString().padStart(2, \"0\");\n            var defaultDate = `${year}-${month}-${date}${hour}`;\n            if (isDate) {\n                var defaultDate = `${year}-${month}-${date}`;\n            }\n            return defaultDate;\n        },\n```\n### 获取当月开始时间结束时间\n```js\n //获取当月开始时间和结束时间\n        getDatearea(date) {\n            let date1 = new Date(date)\n            let syear, smonth, sday, stime;\n            syear = date1.getFullYear();\n            smonth = date1.getMonth() + 1;\n            sday = '01';\n            stime = syear + \"-\" + (smonth > 9 ? smonth : '0' + smonth) + \"-\" + sday;\n            let eyear, emonth, eday, etime;\n            let etimeM = syear + \"-\" + (smonth + 1) + \"-\" + sday;\n            let etimeF = new Date(etimeM);\n            let etimeT = new Date(etimeF.getTime() - 3600 * 1000 * 24);\n            eyear = etimeT.getFullYear();\n            emonth = etimeT.getMonth() + 1;\n            eday = etimeT.getDate();\n            etime = eyear + \"-\" + (emonth > 9 ? emonth : '0' + emonth) + \"-\" + eday;\n            return [stime, etime]\n        },\n\n```\n### 获取月天数\n```js\n //获取一个月多少天\n        getMonthDay(date) {\n            let date1 = new Date(date)\n            let year, month;\n            year = date1.getFullYear();\n            month = date1.getMonth() + 1;\n            let days = new Date(year, month, 0).getDate()\n            return days\n        },\n```\n## 实用代码块\n### 锚点缓慢平滑过渡\nElement 接口的scrollIntoView()方法会滚动元素的父容器，使被调用scrollIntoView()的元素对用户可见。    \nbehavior 可选\n定义动画过渡效果， \"auto\"或 \"smooth\" 之一。默认为 \"auto\"。  \nblock 可选\n定义垂直方向的对齐， \"start\", \"center\", \"end\", 或 \"nearest\"之一。默认为 \"start\"。  \ninline 可选\n定义水平方向的对齐， \"start\", \"center\", \"end\", 或 \"nearest\"之一。默认为 \"nearest\"。\n```js\n//id为目标id\njump(id){\n        document.getElementById(id).scrollIntoView(\n            { block: 'start', behavior: 'smooth' }\n            )\n        }\n```\n### elementui验证失败定位\n```js\n  this.$refs[formName].validate((valid,object) => {\n                if (valid) {\n                   //todo\n                } else {\n                    setTimeout(()=>{\n                        var isError= document.getElementsByClassName(\"is-error\");\n                        isError[0].querySelector('input').focus();\n                      },100);\n                      return false;\n                }\n            });\n```\n### 递归过滤树结构\n```js\n //处理树数据 没children 没 tablename不展示\n          handletreeData(nodes,arr=[]){\n            for (let item of nodes) {\n                //这里写跳出的条件\n                if (!item.table_name&&!item.children) {\n                    continue;\n                }\n                let obj = {...item, children: []}\n                arr.push(obj);\n              if (item.children && item.children.length){\n                this.handletreeData(item.children,obj.children)\n              } \n            };\n            let treearr = arr.filter(val=>{\n                return val.table_name || val.children.length\n            })\n            return treearr;\n        },\n```\n### element树形控件中使用el-popconfirm点击树中空白处不消失\n在使用el-tree控件时，点击树中其他空白处，可能会有不消失的情况，找了很长时间原因，没有找到，有点像事件冒泡，最后写了个方法解决掉了,但是原因还是没找到。\n\n首先就是给el-popconfirm一个动态ref\n```html\n<el-popconfirm :ref=\"'popcon'+ data.row_id\"\ntitle=\"此操作将永久删除该数据, 是否继续?\"\n@onConfirm=\"() => remove(node, data)\">\n<el-link slot=\"reference\" icon=\"el-icon-delete\"\n    :underline=\"false\" type=\"primary\">\n</el-link>\n</el-popconfirm>\n```\n接着就在点击树的函数中调用这个方法，非常的暴力，非常的银杏\n```js\n //树形控件中 点击其他 隐藏 pop\n        hidePop(data) {\n            for (const key in this.$refs) {\n                if (this.$refs[key]) {\n                    if (Object.hasOwnProperty.call(this.$refs, key)) {\n                        if (key.substr(0, 6) == 'popcon') {\n                            if ('popcon' + data.row_id != key) {\n                                this.$refs[key].visible = false\n                            }\n                        }\n                    }\n                }\n\n            }\n        },\n```\n### vue视图不更新问题\n对于深层数据vue是无法监听到的，这时候就需要vue.$set去更新数据，有时vue.$set还是没有效果，就需要vue.$forceUpdate()重新渲染一下。  \n$set用法:\n```js\nthis.$set(对象,需要更新的键,需要更新的值)\n```\n### 解决elementui 表头重新计算的问题\n在动态加载表头时，由于表头导致表格计算不正确，造成的问题，需要调用doLayout()重新渲染表格\n```js\n beforeUpdate(){\n    this.$nextTick(() => { //在数据加载完，重新渲染表格\n    this.$refs['multipleTable'].doLayout();\n    })\n},\n```","source":"_posts/公用代码片段.md","raw":"---\ntitle: 公用代码片段\ndate: 2021-01-27 17:59:26\ntags:\ncategories:\n- js\n---\n整理工作中一些公用的代码片段  \n&nbsp;  \n&nbsp;  \n&nbsp;  \n## 时间处理\n### 格式化时间\n```js\n //格式化表格中的时间\n        formatDate(dateStr, fmt = 'yyyy-MM-dd hh:mm:ss') {\n            if (!dateStr) return;\n            const date = new Date(dateStr);\n            const o = {\n                'M+': date.getMonth() + 1, // 月份\n                'd+': date.getDate(), // 日\n                'h+': date.getHours(), // 小时\n                'm+': date.getMinutes(), // 分\n                's+': date.getSeconds(), // 秒\n                'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\n                S: date.getMilliseconds(), // 毫秒\n            };\n\n            if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (`${date.getFullYear()}`).substr(4 - RegExp.$1.length)); }\n            for (const k in o) {\n                if (new RegExp(`(${k})`).test(fmt)) { fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((`00${o[k]}`).substr((`${o[k]}`).length))); }\n            }\n            return fmt;\n        }\n//格式化时间\n formatDate(obj) {\n            var time = new Date(obj);\n            var y = time.getFullYear(); //年\n            var m = time.getMonth() + 1; //月\n            if (m < 10) { m = '0' + m }\n            var d = time.getDate(); //日\n            if (d < 10) { d = '0' + d }\n            var h = time.getHours(); //时\n            if (h < 10) { h = '0' + h }\n            var mm = time.getMinutes(); //分\n            if (mm < 10) { mm = '0' + mm }\n            var s = time.getSeconds(); //秒\n            if (s < 10) { s = '0' + s }\n            var timeStr = y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + mm + \":\" + s;\n            return timeStr;\n        },\n```\n### 获取当前时间\n```js\n  //处理默认选中当前日期\n        getNowTime(isDate) {\n            var now = new Date();\n            var year = now.getFullYear(); //得到年份\n            var month = now.getMonth(); //得到月份\n            var date = now.getDate(); //得到日期\n            var hh = now.getHours();\n            var mm = now.getMinutes();\n            var ss = now.getSeconds();\n            var hour = \" \" + hh + \":\" + mm + \":\" + ss + \"\"; //默认时分秒 如果传给后台的格式为年月日时分秒，就需要加这个，如若不需要，此行可忽略\n            month = month + 1;\n            month = month.toString().padStart(2, \"0\");\n            date = date.toString().padStart(2, \"0\");\n            var defaultDate = `${year}-${month}-${date}${hour}`;\n            if (isDate) {\n                var defaultDate = `${year}-${month}-${date}`;\n            }\n            return defaultDate;\n        },\n```\n### 获取当月开始时间结束时间\n```js\n //获取当月开始时间和结束时间\n        getDatearea(date) {\n            let date1 = new Date(date)\n            let syear, smonth, sday, stime;\n            syear = date1.getFullYear();\n            smonth = date1.getMonth() + 1;\n            sday = '01';\n            stime = syear + \"-\" + (smonth > 9 ? smonth : '0' + smonth) + \"-\" + sday;\n            let eyear, emonth, eday, etime;\n            let etimeM = syear + \"-\" + (smonth + 1) + \"-\" + sday;\n            let etimeF = new Date(etimeM);\n            let etimeT = new Date(etimeF.getTime() - 3600 * 1000 * 24);\n            eyear = etimeT.getFullYear();\n            emonth = etimeT.getMonth() + 1;\n            eday = etimeT.getDate();\n            etime = eyear + \"-\" + (emonth > 9 ? emonth : '0' + emonth) + \"-\" + eday;\n            return [stime, etime]\n        },\n\n```\n### 获取月天数\n```js\n //获取一个月多少天\n        getMonthDay(date) {\n            let date1 = new Date(date)\n            let year, month;\n            year = date1.getFullYear();\n            month = date1.getMonth() + 1;\n            let days = new Date(year, month, 0).getDate()\n            return days\n        },\n```\n## 实用代码块\n### 锚点缓慢平滑过渡\nElement 接口的scrollIntoView()方法会滚动元素的父容器，使被调用scrollIntoView()的元素对用户可见。    \nbehavior 可选\n定义动画过渡效果， \"auto\"或 \"smooth\" 之一。默认为 \"auto\"。  \nblock 可选\n定义垂直方向的对齐， \"start\", \"center\", \"end\", 或 \"nearest\"之一。默认为 \"start\"。  \ninline 可选\n定义水平方向的对齐， \"start\", \"center\", \"end\", 或 \"nearest\"之一。默认为 \"nearest\"。\n```js\n//id为目标id\njump(id){\n        document.getElementById(id).scrollIntoView(\n            { block: 'start', behavior: 'smooth' }\n            )\n        }\n```\n### elementui验证失败定位\n```js\n  this.$refs[formName].validate((valid,object) => {\n                if (valid) {\n                   //todo\n                } else {\n                    setTimeout(()=>{\n                        var isError= document.getElementsByClassName(\"is-error\");\n                        isError[0].querySelector('input').focus();\n                      },100);\n                      return false;\n                }\n            });\n```\n### 递归过滤树结构\n```js\n //处理树数据 没children 没 tablename不展示\n          handletreeData(nodes,arr=[]){\n            for (let item of nodes) {\n                //这里写跳出的条件\n                if (!item.table_name&&!item.children) {\n                    continue;\n                }\n                let obj = {...item, children: []}\n                arr.push(obj);\n              if (item.children && item.children.length){\n                this.handletreeData(item.children,obj.children)\n              } \n            };\n            let treearr = arr.filter(val=>{\n                return val.table_name || val.children.length\n            })\n            return treearr;\n        },\n```\n### element树形控件中使用el-popconfirm点击树中空白处不消失\n在使用el-tree控件时，点击树中其他空白处，可能会有不消失的情况，找了很长时间原因，没有找到，有点像事件冒泡，最后写了个方法解决掉了,但是原因还是没找到。\n\n首先就是给el-popconfirm一个动态ref\n```html\n<el-popconfirm :ref=\"'popcon'+ data.row_id\"\ntitle=\"此操作将永久删除该数据, 是否继续?\"\n@onConfirm=\"() => remove(node, data)\">\n<el-link slot=\"reference\" icon=\"el-icon-delete\"\n    :underline=\"false\" type=\"primary\">\n</el-link>\n</el-popconfirm>\n```\n接着就在点击树的函数中调用这个方法，非常的暴力，非常的银杏\n```js\n //树形控件中 点击其他 隐藏 pop\n        hidePop(data) {\n            for (const key in this.$refs) {\n                if (this.$refs[key]) {\n                    if (Object.hasOwnProperty.call(this.$refs, key)) {\n                        if (key.substr(0, 6) == 'popcon') {\n                            if ('popcon' + data.row_id != key) {\n                                this.$refs[key].visible = false\n                            }\n                        }\n                    }\n                }\n\n            }\n        },\n```\n### vue视图不更新问题\n对于深层数据vue是无法监听到的，这时候就需要vue.$set去更新数据，有时vue.$set还是没有效果，就需要vue.$forceUpdate()重新渲染一下。  \n$set用法:\n```js\nthis.$set(对象,需要更新的键,需要更新的值)\n```\n### 解决elementui 表头重新计算的问题\n在动态加载表头时，由于表头导致表格计算不正确，造成的问题，需要调用doLayout()重新渲染表格\n```js\n beforeUpdate(){\n    this.$nextTick(() => { //在数据加载完，重新渲染表格\n    this.$refs['multipleTable'].doLayout();\n    })\n},\n```","slug":"公用代码片段","published":1,"updated":"2021-03-04T12:20:23.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckluu99l00003kwu4225726fz","content":"<p>整理工作中一些公用的代码片段<br>&nbsp;<br>&nbsp;<br>&nbsp;  </p>\n<h2 id=\"时间处理\"><a href=\"#时间处理\" class=\"headerlink\" title=\"时间处理\"></a>时间处理</h2><h3 id=\"格式化时间\"><a href=\"#格式化时间\" class=\"headerlink\" title=\"格式化时间\"></a>格式化时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//格式化表格中的时间</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">formatDate</span>(<span class=\"params\">dateStr, fmt = <span class=\"string\">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span></span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!dateStr) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(dateStr);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> o = &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;M+&#x27;</span>: date.getMonth() + <span class=\"number\">1</span>, <span class=\"comment\">// 月份</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;d+&#x27;</span>: date.getDate(), <span class=\"comment\">// 日</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;h+&#x27;</span>: date.getHours(), <span class=\"comment\">// 小时</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;m+&#x27;</span>: date.getMinutes(), <span class=\"comment\">// 分</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;s+&#x27;</span>: date.getSeconds(), <span class=\"comment\">// 秒</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;q+&#x27;</span>: <span class=\"built_in\">Math</span>.floor((date.getMonth() + <span class=\"number\">3</span>) / <span class=\"number\">3</span>), <span class=\"comment\">// 季度</span></span><br><span class=\"line\">                S: date.getMilliseconds(), <span class=\"comment\">// 毫秒</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"regexp\">/(y+)/</span>.test(fmt)) &#123; fmt = fmt.replace(<span class=\"built_in\">RegExp</span>.$1, (<span class=\"string\">`<span class=\"subst\">$&#123;date.getFullYear()&#125;</span>`</span>).substr(<span class=\"number\">4</span> - <span class=\"built_in\">RegExp</span>.$1.length)); &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> k <span class=\"keyword\">in</span> o) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">`(<span class=\"subst\">$&#123;k&#125;</span>)`</span>).test(fmt)) &#123; fmt = fmt.replace(<span class=\"built_in\">RegExp</span>.$1, (<span class=\"built_in\">RegExp</span>.$1.length == <span class=\"number\">1</span>) ? (o[k]) : ((<span class=\"string\">`00<span class=\"subst\">$&#123;o[k]&#125;</span>`</span>).substr((<span class=\"string\">`<span class=\"subst\">$&#123;o[k]&#125;</span>`</span>).length))); &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> fmt;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//格式化时间</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"title\">formatDate</span>(<span class=\"params\">obj</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> time = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(obj);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> y = time.getFullYear(); <span class=\"comment\">//年</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> m = time.getMonth() + <span class=\"number\">1</span>; <span class=\"comment\">//月</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">10</span>) &#123; m = <span class=\"string\">&#x27;0&#x27;</span> + m &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> d = time.getDate(); <span class=\"comment\">//日</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d &lt; <span class=\"number\">10</span>) &#123; d = <span class=\"string\">&#x27;0&#x27;</span> + d &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> h = time.getHours(); <span class=\"comment\">//时</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (h &lt; <span class=\"number\">10</span>) &#123; h = <span class=\"string\">&#x27;0&#x27;</span> + h &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mm = time.getMinutes(); <span class=\"comment\">//分</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mm &lt; <span class=\"number\">10</span>) &#123; mm = <span class=\"string\">&#x27;0&#x27;</span> + mm &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> s = time.getSeconds(); <span class=\"comment\">//秒</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s &lt; <span class=\"number\">10</span>) &#123; s = <span class=\"string\">&#x27;0&#x27;</span> + s &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> timeStr = y + <span class=\"string\">&quot;-&quot;</span> + m + <span class=\"string\">&quot;-&quot;</span> + d + <span class=\"string\">&quot; &quot;</span> + h + <span class=\"string\">&quot;:&quot;</span> + mm + <span class=\"string\">&quot;:&quot;</span> + s;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> timeStr;</span><br><span class=\"line\">        &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取当前时间\"><a href=\"#获取当前时间\" class=\"headerlink\" title=\"获取当前时间\"></a>获取当前时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//处理默认选中当前日期</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">getNowTime</span>(<span class=\"params\">isDate</span>)</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> year = now.getFullYear(); <span class=\"comment\">//得到年份</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> month = now.getMonth(); <span class=\"comment\">//得到月份</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> date = now.getDate(); <span class=\"comment\">//得到日期</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> hh = now.getHours();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> mm = now.getMinutes();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> ss = now.getSeconds();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> hour = <span class=\"string\">&quot; &quot;</span> + hh + <span class=\"string\">&quot;:&quot;</span> + mm + <span class=\"string\">&quot;:&quot;</span> + ss + <span class=\"string\">&quot;&quot;</span>; <span class=\"comment\">//默认时分秒 如果传给后台的格式为年月日时分秒，就需要加这个，如若不需要，此行可忽略</span></span><br><span class=\"line\">          month = month + <span class=\"number\">1</span>;</span><br><span class=\"line\">          month = month.toString().padStart(<span class=\"number\">2</span>, <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">          date = date.toString().padStart(<span class=\"number\">2</span>, <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">var</span> defaultDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;date&#125;</span><span class=\"subst\">$&#123;hour&#125;</span>`</span>;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (isDate) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">var</span> defaultDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;date&#125;</span>`</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> defaultDate;</span><br><span class=\"line\">      &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取当月开始时间结束时间\"><a href=\"#获取当月开始时间结束时间\" class=\"headerlink\" title=\"获取当月开始时间结束时间\"></a>获取当月开始时间结束时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取当月开始时间和结束时间</span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">getDatearea</span>(<span class=\"params\">date</span>)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> date1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(date)</span><br><span class=\"line\">           <span class=\"keyword\">let</span> syear, smonth, sday, stime;</span><br><span class=\"line\">           syear = date1.getFullYear();</span><br><span class=\"line\">           smonth = date1.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">           sday = <span class=\"string\">&#x27;01&#x27;</span>;</span><br><span class=\"line\">           stime = syear + <span class=\"string\">&quot;-&quot;</span> + (smonth &gt; <span class=\"number\">9</span> ? smonth : <span class=\"string\">&#x27;0&#x27;</span> + smonth) + <span class=\"string\">&quot;-&quot;</span> + sday;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> eyear, emonth, eday, etime;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> etimeM = syear + <span class=\"string\">&quot;-&quot;</span> + (smonth + <span class=\"number\">1</span>) + <span class=\"string\">&quot;-&quot;</span> + sday;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> etimeF = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(etimeM);</span><br><span class=\"line\">           <span class=\"keyword\">let</span> etimeT = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(etimeF.getTime() - <span class=\"number\">3600</span> * <span class=\"number\">1000</span> * <span class=\"number\">24</span>);</span><br><span class=\"line\">           eyear = etimeT.getFullYear();</span><br><span class=\"line\">           emonth = etimeT.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">           eday = etimeT.getDate();</span><br><span class=\"line\">           etime = eyear + <span class=\"string\">&quot;-&quot;</span> + (emonth &gt; <span class=\"number\">9</span> ? emonth : <span class=\"string\">&#x27;0&#x27;</span> + emonth) + <span class=\"string\">&quot;-&quot;</span> + eday;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> [stime, etime]</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"获取月天数\"><a href=\"#获取月天数\" class=\"headerlink\" title=\"获取月天数\"></a>获取月天数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取一个月多少天</span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">getMonthDay</span>(<span class=\"params\">date</span>)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> date1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(date)</span><br><span class=\"line\">           <span class=\"keyword\">let</span> year, month;</span><br><span class=\"line\">           year = date1.getFullYear();</span><br><span class=\"line\">           month = date1.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> days = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(year, month, <span class=\"number\">0</span>).getDate()</span><br><span class=\"line\">           <span class=\"keyword\">return</span> days</span><br><span class=\"line\">       &#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"实用代码块\"><a href=\"#实用代码块\" class=\"headerlink\" title=\"实用代码块\"></a>实用代码块</h2><h3 id=\"锚点缓慢平滑过渡\"><a href=\"#锚点缓慢平滑过渡\" class=\"headerlink\" title=\"锚点缓慢平滑过渡\"></a>锚点缓慢平滑过渡</h3><p>Element 接口的scrollIntoView()方法会滚动元素的父容器，使被调用scrollIntoView()的元素对用户可见。<br>behavior 可选<br>定义动画过渡效果， “auto”或 “smooth” 之一。默认为 “auto”。<br>block 可选<br>定义垂直方向的对齐， “start”, “center”, “end”, 或 “nearest”之一。默认为 “start”。<br>inline 可选<br>定义水平方向的对齐， “start”, “center”, “end”, 或 “nearest”之一。默认为 “nearest”。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//id为目标id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">jump</span>(<span class=\"params\">id</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(id).scrollIntoView(</span><br><span class=\"line\">            &#123; <span class=\"attr\">block</span>: <span class=\"string\">&#x27;start&#x27;</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">&#x27;smooth&#x27;</span> &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"elementui验证失败定位\"><a href=\"#elementui验证失败定位\" class=\"headerlink\" title=\"elementui验证失败定位\"></a>elementui验证失败定位</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.$refs[formName].validate(<span class=\"function\">(<span class=\"params\">valid,object</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">                 <span class=\"comment\">//todo</span></span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                      <span class=\"keyword\">var</span> isError= <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&quot;is-error&quot;</span>);</span><br><span class=\"line\">                      isError[<span class=\"number\">0</span>].querySelector(<span class=\"string\">&#x27;input&#x27;</span>).focus();</span><br><span class=\"line\">                    &#125;,<span class=\"number\">100</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"递归过滤树结构\"><a href=\"#递归过滤树结构\" class=\"headerlink\" title=\"递归过滤树结构\"></a>递归过滤树结构</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//处理树数据 没children 没 tablename不展示</span></span><br><span class=\"line\">         <span class=\"function\"><span class=\"title\">handletreeData</span>(<span class=\"params\">nodes,arr=[]</span>)</span>&#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> nodes) &#123;</span><br><span class=\"line\">               <span class=\"comment\">//这里写跳出的条件</span></span><br><span class=\"line\">               <span class=\"keyword\">if</span> (!item.table_name&amp;&amp;!item.children) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">let</span> obj = &#123;...item, <span class=\"attr\">children</span>: []&#125;</span><br><span class=\"line\">               arr.push(obj);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (item.children &amp;&amp; item.children.length)&#123;</span><br><span class=\"line\">               <span class=\"built_in\">this</span>.handletreeData(item.children,obj.children)</span><br><span class=\"line\">             &#125; </span><br><span class=\"line\">           &#125;;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> treearr = arr.filter(<span class=\"function\"><span class=\"params\">val</span>=&gt;</span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> val.table_name || val.children.length</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\">           <span class=\"keyword\">return</span> treearr;</span><br><span class=\"line\">       &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"element树形控件中使用el-popconfirm点击树中空白处不消失\"><a href=\"#element树形控件中使用el-popconfirm点击树中空白处不消失\" class=\"headerlink\" title=\"element树形控件中使用el-popconfirm点击树中空白处不消失\"></a>element树形控件中使用el-popconfirm点击树中空白处不消失</h3><p>在使用el-tree控件时，点击树中其他空白处，可能会有不消失的情况，找了很长时间原因，没有找到，有点像事件冒泡，最后写了个方法解决掉了,但是原因还是没找到。</p>\n<p>首先就是给el-popconfirm一个动态ref</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-popconfirm</span> <span class=\"attr\">:ref</span>=<span class=\"string\">&quot;&#x27;popcon&#x27;+ data.row_id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">title</span>=<span class=\"string\">&quot;此操作将永久删除该数据, 是否继续?&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">@<span class=\"attr\">onConfirm</span>=<span class=\"string\">&quot;() =&gt; remove(node, data)&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;reference&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-popconfirm</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接着就在点击树的函数中调用这个方法，非常的暴力，非常的银杏</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//树形控件中 点击其他 隐藏 pop</span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">hidePop</span>(<span class=\"params\">data</span>)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.$refs) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$refs[key]) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.hasOwnProperty.call(<span class=\"built_in\">this</span>.$refs, key)) &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">if</span> (key.substr(<span class=\"number\">0</span>, <span class=\"number\">6</span>) == <span class=\"string\">&#x27;popcon&#x27;</span>) &#123;</span><br><span class=\"line\">                           <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;popcon&#x27;</span> + data.row_id != key) &#123;</span><br><span class=\"line\">                               <span class=\"built_in\">this</span>.$refs[key].visible = <span class=\"literal\">false</span></span><br><span class=\"line\">                           &#125;</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue视图不更新问题\"><a href=\"#vue视图不更新问题\" class=\"headerlink\" title=\"vue视图不更新问题\"></a>vue视图不更新问题</h3><p>对于深层数据vue是无法监听到的，这时候就需要vue.$set去更新数据，有时vue.$set还是没有效果，就需要vue.$forceUpdate()重新渲染一下。<br>$set用法:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.$set(对象,需要更新的键,需要更新的值)</span><br></pre></td></tr></table></figure>\n<h3 id=\"解决elementui-表头重新计算的问题\"><a href=\"#解决elementui-表头重新计算的问题\" class=\"headerlink\" title=\"解决elementui 表头重新计算的问题\"></a>解决elementui 表头重新计算的问题</h3><p>在动态加载表头时，由于表头导致表格计算不正确，造成的问题，需要调用doLayout()重新渲染表格</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"title\">beforeUpdate</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123; <span class=\"comment\">//在数据加载完，重新渲染表格</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$refs[<span class=\"string\">&#x27;multipleTable&#x27;</span>].doLayout();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>整理工作中一些公用的代码片段<br>&nbsp;<br>&nbsp;<br>&nbsp;  </p>\n<h2 id=\"时间处理\"><a href=\"#时间处理\" class=\"headerlink\" title=\"时间处理\"></a>时间处理</h2><h3 id=\"格式化时间\"><a href=\"#格式化时间\" class=\"headerlink\" title=\"格式化时间\"></a>格式化时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//格式化表格中的时间</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">formatDate</span>(<span class=\"params\">dateStr, fmt = <span class=\"string\">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span></span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!dateStr) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(dateStr);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> o = &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;M+&#x27;</span>: date.getMonth() + <span class=\"number\">1</span>, <span class=\"comment\">// 月份</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;d+&#x27;</span>: date.getDate(), <span class=\"comment\">// 日</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;h+&#x27;</span>: date.getHours(), <span class=\"comment\">// 小时</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;m+&#x27;</span>: date.getMinutes(), <span class=\"comment\">// 分</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;s+&#x27;</span>: date.getSeconds(), <span class=\"comment\">// 秒</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;q+&#x27;</span>: <span class=\"built_in\">Math</span>.floor((date.getMonth() + <span class=\"number\">3</span>) / <span class=\"number\">3</span>), <span class=\"comment\">// 季度</span></span><br><span class=\"line\">                S: date.getMilliseconds(), <span class=\"comment\">// 毫秒</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"regexp\">/(y+)/</span>.test(fmt)) &#123; fmt = fmt.replace(<span class=\"built_in\">RegExp</span>.$1, (<span class=\"string\">`<span class=\"subst\">$&#123;date.getFullYear()&#125;</span>`</span>).substr(<span class=\"number\">4</span> - <span class=\"built_in\">RegExp</span>.$1.length)); &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> k <span class=\"keyword\">in</span> o) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">`(<span class=\"subst\">$&#123;k&#125;</span>)`</span>).test(fmt)) &#123; fmt = fmt.replace(<span class=\"built_in\">RegExp</span>.$1, (<span class=\"built_in\">RegExp</span>.$1.length == <span class=\"number\">1</span>) ? (o[k]) : ((<span class=\"string\">`00<span class=\"subst\">$&#123;o[k]&#125;</span>`</span>).substr((<span class=\"string\">`<span class=\"subst\">$&#123;o[k]&#125;</span>`</span>).length))); &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> fmt;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//格式化时间</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"title\">formatDate</span>(<span class=\"params\">obj</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> time = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(obj);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> y = time.getFullYear(); <span class=\"comment\">//年</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> m = time.getMonth() + <span class=\"number\">1</span>; <span class=\"comment\">//月</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (m &lt; <span class=\"number\">10</span>) &#123; m = <span class=\"string\">&#x27;0&#x27;</span> + m &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> d = time.getDate(); <span class=\"comment\">//日</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d &lt; <span class=\"number\">10</span>) &#123; d = <span class=\"string\">&#x27;0&#x27;</span> + d &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> h = time.getHours(); <span class=\"comment\">//时</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (h &lt; <span class=\"number\">10</span>) &#123; h = <span class=\"string\">&#x27;0&#x27;</span> + h &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mm = time.getMinutes(); <span class=\"comment\">//分</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mm &lt; <span class=\"number\">10</span>) &#123; mm = <span class=\"string\">&#x27;0&#x27;</span> + mm &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> s = time.getSeconds(); <span class=\"comment\">//秒</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s &lt; <span class=\"number\">10</span>) &#123; s = <span class=\"string\">&#x27;0&#x27;</span> + s &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> timeStr = y + <span class=\"string\">&quot;-&quot;</span> + m + <span class=\"string\">&quot;-&quot;</span> + d + <span class=\"string\">&quot; &quot;</span> + h + <span class=\"string\">&quot;:&quot;</span> + mm + <span class=\"string\">&quot;:&quot;</span> + s;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> timeStr;</span><br><span class=\"line\">        &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取当前时间\"><a href=\"#获取当前时间\" class=\"headerlink\" title=\"获取当前时间\"></a>获取当前时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//处理默认选中当前日期</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">getNowTime</span>(<span class=\"params\">isDate</span>)</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> year = now.getFullYear(); <span class=\"comment\">//得到年份</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> month = now.getMonth(); <span class=\"comment\">//得到月份</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> date = now.getDate(); <span class=\"comment\">//得到日期</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> hh = now.getHours();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> mm = now.getMinutes();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> ss = now.getSeconds();</span><br><span class=\"line\">          <span class=\"keyword\">var</span> hour = <span class=\"string\">&quot; &quot;</span> + hh + <span class=\"string\">&quot;:&quot;</span> + mm + <span class=\"string\">&quot;:&quot;</span> + ss + <span class=\"string\">&quot;&quot;</span>; <span class=\"comment\">//默认时分秒 如果传给后台的格式为年月日时分秒，就需要加这个，如若不需要，此行可忽略</span></span><br><span class=\"line\">          month = month + <span class=\"number\">1</span>;</span><br><span class=\"line\">          month = month.toString().padStart(<span class=\"number\">2</span>, <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">          date = date.toString().padStart(<span class=\"number\">2</span>, <span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">var</span> defaultDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;date&#125;</span><span class=\"subst\">$&#123;hour&#125;</span>`</span>;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (isDate) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">var</span> defaultDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;date&#125;</span>`</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> defaultDate;</span><br><span class=\"line\">      &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取当月开始时间结束时间\"><a href=\"#获取当月开始时间结束时间\" class=\"headerlink\" title=\"获取当月开始时间结束时间\"></a>获取当月开始时间结束时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取当月开始时间和结束时间</span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">getDatearea</span>(<span class=\"params\">date</span>)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> date1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(date)</span><br><span class=\"line\">           <span class=\"keyword\">let</span> syear, smonth, sday, stime;</span><br><span class=\"line\">           syear = date1.getFullYear();</span><br><span class=\"line\">           smonth = date1.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">           sday = <span class=\"string\">&#x27;01&#x27;</span>;</span><br><span class=\"line\">           stime = syear + <span class=\"string\">&quot;-&quot;</span> + (smonth &gt; <span class=\"number\">9</span> ? smonth : <span class=\"string\">&#x27;0&#x27;</span> + smonth) + <span class=\"string\">&quot;-&quot;</span> + sday;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> eyear, emonth, eday, etime;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> etimeM = syear + <span class=\"string\">&quot;-&quot;</span> + (smonth + <span class=\"number\">1</span>) + <span class=\"string\">&quot;-&quot;</span> + sday;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> etimeF = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(etimeM);</span><br><span class=\"line\">           <span class=\"keyword\">let</span> etimeT = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(etimeF.getTime() - <span class=\"number\">3600</span> * <span class=\"number\">1000</span> * <span class=\"number\">24</span>);</span><br><span class=\"line\">           eyear = etimeT.getFullYear();</span><br><span class=\"line\">           emonth = etimeT.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">           eday = etimeT.getDate();</span><br><span class=\"line\">           etime = eyear + <span class=\"string\">&quot;-&quot;</span> + (emonth &gt; <span class=\"number\">9</span> ? emonth : <span class=\"string\">&#x27;0&#x27;</span> + emonth) + <span class=\"string\">&quot;-&quot;</span> + eday;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> [stime, etime]</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"获取月天数\"><a href=\"#获取月天数\" class=\"headerlink\" title=\"获取月天数\"></a>获取月天数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取一个月多少天</span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">getMonthDay</span>(<span class=\"params\">date</span>)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> date1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(date)</span><br><span class=\"line\">           <span class=\"keyword\">let</span> year, month;</span><br><span class=\"line\">           year = date1.getFullYear();</span><br><span class=\"line\">           month = date1.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> days = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(year, month, <span class=\"number\">0</span>).getDate()</span><br><span class=\"line\">           <span class=\"keyword\">return</span> days</span><br><span class=\"line\">       &#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"实用代码块\"><a href=\"#实用代码块\" class=\"headerlink\" title=\"实用代码块\"></a>实用代码块</h2><h3 id=\"锚点缓慢平滑过渡\"><a href=\"#锚点缓慢平滑过渡\" class=\"headerlink\" title=\"锚点缓慢平滑过渡\"></a>锚点缓慢平滑过渡</h3><p>Element 接口的scrollIntoView()方法会滚动元素的父容器，使被调用scrollIntoView()的元素对用户可见。<br>behavior 可选<br>定义动画过渡效果， “auto”或 “smooth” 之一。默认为 “auto”。<br>block 可选<br>定义垂直方向的对齐， “start”, “center”, “end”, 或 “nearest”之一。默认为 “start”。<br>inline 可选<br>定义水平方向的对齐， “start”, “center”, “end”, 或 “nearest”之一。默认为 “nearest”。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//id为目标id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">jump</span>(<span class=\"params\">id</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(id).scrollIntoView(</span><br><span class=\"line\">            &#123; <span class=\"attr\">block</span>: <span class=\"string\">&#x27;start&#x27;</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">&#x27;smooth&#x27;</span> &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"elementui验证失败定位\"><a href=\"#elementui验证失败定位\" class=\"headerlink\" title=\"elementui验证失败定位\"></a>elementui验证失败定位</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.$refs[formName].validate(<span class=\"function\">(<span class=\"params\">valid,object</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">                 <span class=\"comment\">//todo</span></span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">                      <span class=\"keyword\">var</span> isError= <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&quot;is-error&quot;</span>);</span><br><span class=\"line\">                      isError[<span class=\"number\">0</span>].querySelector(<span class=\"string\">&#x27;input&#x27;</span>).focus();</span><br><span class=\"line\">                    &#125;,<span class=\"number\">100</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"递归过滤树结构\"><a href=\"#递归过滤树结构\" class=\"headerlink\" title=\"递归过滤树结构\"></a>递归过滤树结构</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//处理树数据 没children 没 tablename不展示</span></span><br><span class=\"line\">         <span class=\"function\"><span class=\"title\">handletreeData</span>(<span class=\"params\">nodes,arr=[]</span>)</span>&#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> nodes) &#123;</span><br><span class=\"line\">               <span class=\"comment\">//这里写跳出的条件</span></span><br><span class=\"line\">               <span class=\"keyword\">if</span> (!item.table_name&amp;&amp;!item.children) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">let</span> obj = &#123;...item, <span class=\"attr\">children</span>: []&#125;</span><br><span class=\"line\">               arr.push(obj);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (item.children &amp;&amp; item.children.length)&#123;</span><br><span class=\"line\">               <span class=\"built_in\">this</span>.handletreeData(item.children,obj.children)</span><br><span class=\"line\">             &#125; </span><br><span class=\"line\">           &#125;;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> treearr = arr.filter(<span class=\"function\"><span class=\"params\">val</span>=&gt;</span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> val.table_name || val.children.length</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\">           <span class=\"keyword\">return</span> treearr;</span><br><span class=\"line\">       &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"element树形控件中使用el-popconfirm点击树中空白处不消失\"><a href=\"#element树形控件中使用el-popconfirm点击树中空白处不消失\" class=\"headerlink\" title=\"element树形控件中使用el-popconfirm点击树中空白处不消失\"></a>element树形控件中使用el-popconfirm点击树中空白处不消失</h3><p>在使用el-tree控件时，点击树中其他空白处，可能会有不消失的情况，找了很长时间原因，没有找到，有点像事件冒泡，最后写了个方法解决掉了,但是原因还是没找到。</p>\n<p>首先就是给el-popconfirm一个动态ref</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-popconfirm</span> <span class=\"attr\">:ref</span>=<span class=\"string\">&quot;&#x27;popcon&#x27;+ data.row_id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">title</span>=<span class=\"string\">&quot;此操作将永久删除该数据, 是否继续?&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">@<span class=\"attr\">onConfirm</span>=<span class=\"string\">&quot;() =&gt; remove(node, data)&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;reference&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-popconfirm</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接着就在点击树的函数中调用这个方法，非常的暴力，非常的银杏</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//树形控件中 点击其他 隐藏 pop</span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">hidePop</span>(<span class=\"params\">data</span>)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.$refs) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$refs[key]) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.hasOwnProperty.call(<span class=\"built_in\">this</span>.$refs, key)) &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">if</span> (key.substr(<span class=\"number\">0</span>, <span class=\"number\">6</span>) == <span class=\"string\">&#x27;popcon&#x27;</span>) &#123;</span><br><span class=\"line\">                           <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;popcon&#x27;</span> + data.row_id != key) &#123;</span><br><span class=\"line\">                               <span class=\"built_in\">this</span>.$refs[key].visible = <span class=\"literal\">false</span></span><br><span class=\"line\">                           &#125;</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue视图不更新问题\"><a href=\"#vue视图不更新问题\" class=\"headerlink\" title=\"vue视图不更新问题\"></a>vue视图不更新问题</h3><p>对于深层数据vue是无法监听到的，这时候就需要vue.$set去更新数据，有时vue.$set还是没有效果，就需要vue.$forceUpdate()重新渲染一下。<br>$set用法:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.$set(对象,需要更新的键,需要更新的值)</span><br></pre></td></tr></table></figure>\n<h3 id=\"解决elementui-表头重新计算的问题\"><a href=\"#解决elementui-表头重新计算的问题\" class=\"headerlink\" title=\"解决elementui 表头重新计算的问题\"></a>解决elementui 表头重新计算的问题</h3><p>在动态加载表头时，由于表头导致表格计算不正确，造成的问题，需要调用doLayout()重新渲染表格</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"title\">beforeUpdate</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123; <span class=\"comment\">//在数据加载完，重新渲染表格</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$refs[<span class=\"string\">&#x27;multipleTable&#x27;</span>].doLayout();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>"},{"title":"抓包工具charles的使用","date":"2021-03-04T05:46:53.000Z","_content":"在生产测试中，有时候我们可能使用到抓包工具，下面介绍一下抓包工具charles的使用方法，本文主要记录charles的安装，配置代理和https的SSL证书\n## 1.安装\n我们需要到官网下载[charles](https://www.charlesproxy.com/download/)，选择自己系统的包，进行安装，我自己的就是windows 64 bit 版本为4.6.1。安装就正常的下一步就可以了。\n## 2.配置移动端代理\n * 首先把手机和电脑连在同一Wifi，确保手机与电脑在同一网络环境下。\n * 然后打开charles的proxy下的proxy settings可以看到默认端口为8888  \n ![](/images/1614838164(1).jpg)\n * 手机端配置代理，以我手机的ios系统为例  设置->无线局域网->选择连接wifi的后最后一个蓝色小图标->配置代理->选择手动。服务器就是你电脑的IP地址，端口就是上图所示端口。这样手机发出的网络请求也可以抓到了。\n## 3. 配置ssl代理\n主要是为了抓到https的包，解决unknown和乱码问题。证书的安装分为手机端和电脑端\n### 3.1安装电脑端证书\n* 点击Charles工具栏上的help->ssl proxying->Install Charles Root Certificate\n![](/images/1614839526(1).jpg)\n* 弹出界面点击安装证书，一定要选择当前用户，不知道为啥，网上说的，点击下一步，选择将所有证书都放入下列储存，选择受信任的证书颁发机构，确定。\n### 3.2安装手机端证书\n* 点击如下选项![](/images/1614839967(1).jpg)\n* 手机浏览器进入 如下网址安装描述文件，下载好之后，ios进入设置->通用，拉到最后，点击描述文件信任安装。\n![](/images/1614840012(1).jpg)\n* ios设置根证书信任 设置->通用->最后的证书信任设置。把刚刚安装的描述文件打开\n### 3.3配置ssl代理\n* 点击charles工具栏下的SSL ProxyingSettings\n* 勾选Enable SSL Proxying\n* 点击include下的add，这里设置的是你需要抓包的网址，如果想要监听所有就都设置为 * 即可。\n![](/images/1614841485(1).jpg)\n## 4.完成\n这样我们基本就可以实现一般请求抓取了  \n![](/images/1614841701(1).jpg)","source":"_posts/抓包工具charles的使用.md","raw":"---\ntitle: 抓包工具charles的使用\ndate: 2021-03-04 13:46:53\ntags:\ncategories:\n- 开发工具\n---\n在生产测试中，有时候我们可能使用到抓包工具，下面介绍一下抓包工具charles的使用方法，本文主要记录charles的安装，配置代理和https的SSL证书\n## 1.安装\n我们需要到官网下载[charles](https://www.charlesproxy.com/download/)，选择自己系统的包，进行安装，我自己的就是windows 64 bit 版本为4.6.1。安装就正常的下一步就可以了。\n## 2.配置移动端代理\n * 首先把手机和电脑连在同一Wifi，确保手机与电脑在同一网络环境下。\n * 然后打开charles的proxy下的proxy settings可以看到默认端口为8888  \n ![](/images/1614838164(1).jpg)\n * 手机端配置代理，以我手机的ios系统为例  设置->无线局域网->选择连接wifi的后最后一个蓝色小图标->配置代理->选择手动。服务器就是你电脑的IP地址，端口就是上图所示端口。这样手机发出的网络请求也可以抓到了。\n## 3. 配置ssl代理\n主要是为了抓到https的包，解决unknown和乱码问题。证书的安装分为手机端和电脑端\n### 3.1安装电脑端证书\n* 点击Charles工具栏上的help->ssl proxying->Install Charles Root Certificate\n![](/images/1614839526(1).jpg)\n* 弹出界面点击安装证书，一定要选择当前用户，不知道为啥，网上说的，点击下一步，选择将所有证书都放入下列储存，选择受信任的证书颁发机构，确定。\n### 3.2安装手机端证书\n* 点击如下选项![](/images/1614839967(1).jpg)\n* 手机浏览器进入 如下网址安装描述文件，下载好之后，ios进入设置->通用，拉到最后，点击描述文件信任安装。\n![](/images/1614840012(1).jpg)\n* ios设置根证书信任 设置->通用->最后的证书信任设置。把刚刚安装的描述文件打开\n### 3.3配置ssl代理\n* 点击charles工具栏下的SSL ProxyingSettings\n* 勾选Enable SSL Proxying\n* 点击include下的add，这里设置的是你需要抓包的网址，如果想要监听所有就都设置为 * 即可。\n![](/images/1614841485(1).jpg)\n## 4.完成\n这样我们基本就可以实现一般请求抓取了  \n![](/images/1614841701(1).jpg)","slug":"抓包工具charles的使用","published":1,"updated":"2021-03-04T12:20:23.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckluu99l20005kwu44i5r0kf5","content":"<p>在生产测试中，有时候我们可能使用到抓包工具，下面介绍一下抓包工具charles的使用方法，本文主要记录charles的安装，配置代理和https的SSL证书</p>\n<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p>我们需要到官网下载<a class=\"link\"   href=\"https://www.charlesproxy.com/download/\" >charles<i class=\"fas fa-external-link-alt\"></i></a>，选择自己系统的包，进行安装，我自己的就是windows 64 bit 版本为4.6.1。安装就正常的下一步就可以了。</p>\n<h2 id=\"2-配置移动端代理\"><a href=\"#2-配置移动端代理\" class=\"headerlink\" title=\"2.配置移动端代理\"></a>2.配置移动端代理</h2><ul>\n<li>首先把手机和电脑连在同一Wifi，确保手机与电脑在同一网络环境下。</li>\n<li>然后打开charles的proxy下的proxy settings可以看到默认端口为8888<br><img src=\"/images/1614838164(1).jpg\"></li>\n<li>手机端配置代理，以我手机的ios系统为例  设置-&gt;无线局域网-&gt;选择连接wifi的后最后一个蓝色小图标-&gt;配置代理-&gt;选择手动。服务器就是你电脑的IP地址，端口就是上图所示端口。这样手机发出的网络请求也可以抓到了。<h2 id=\"3-配置ssl代理\"><a href=\"#3-配置ssl代理\" class=\"headerlink\" title=\"3. 配置ssl代理\"></a>3. 配置ssl代理</h2>主要是为了抓到https的包，解决unknown和乱码问题。证书的安装分为手机端和电脑端<h3 id=\"3-1安装电脑端证书\"><a href=\"#3-1安装电脑端证书\" class=\"headerlink\" title=\"3.1安装电脑端证书\"></a>3.1安装电脑端证书</h3></li>\n<li>点击Charles工具栏上的help-&gt;ssl proxying-&gt;Install Charles Root Certificate<br><img src=\"/images/1614839526(1).jpg\"></li>\n<li>弹出界面点击安装证书，一定要选择当前用户，不知道为啥，网上说的，点击下一步，选择将所有证书都放入下列储存，选择受信任的证书颁发机构，确定。<h3 id=\"3-2安装手机端证书\"><a href=\"#3-2安装手机端证书\" class=\"headerlink\" title=\"3.2安装手机端证书\"></a>3.2安装手机端证书</h3></li>\n<li>点击如下选项<img src=\"/images/1614839967(1).jpg\"></li>\n<li>手机浏览器进入 如下网址安装描述文件，下载好之后，ios进入设置-&gt;通用，拉到最后，点击描述文件信任安装。<br><img src=\"/images/1614840012(1).jpg\"></li>\n<li>ios设置根证书信任 设置-&gt;通用-&gt;最后的证书信任设置。把刚刚安装的描述文件打开<h3 id=\"3-3配置ssl代理\"><a href=\"#3-3配置ssl代理\" class=\"headerlink\" title=\"3.3配置ssl代理\"></a>3.3配置ssl代理</h3></li>\n<li>点击charles工具栏下的SSL ProxyingSettings</li>\n<li>勾选Enable SSL Proxying</li>\n<li>点击include下的add，这里设置的是你需要抓包的网址，如果想要监听所有就都设置为 * 即可。<br><img src=\"/images/1614841485(1).jpg\"><h2 id=\"4-完成\"><a href=\"#4-完成\" class=\"headerlink\" title=\"4.完成\"></a>4.完成</h2>这样我们基本就可以实现一般请求抓取了<br><img src=\"/images/1614841701(1).jpg\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在生产测试中，有时候我们可能使用到抓包工具，下面介绍一下抓包工具charles的使用方法，本文主要记录charles的安装，配置代理和https的SSL证书</p>\n<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p>我们需要到官网下载<a class=\"link\"   href=\"https://www.charlesproxy.com/download/\" >charles<i class=\"fas fa-external-link-alt\"></i></a>，选择自己系统的包，进行安装，我自己的就是windows 64 bit 版本为4.6.1。安装就正常的下一步就可以了。</p>\n<h2 id=\"2-配置移动端代理\"><a href=\"#2-配置移动端代理\" class=\"headerlink\" title=\"2.配置移动端代理\"></a>2.配置移动端代理</h2><ul>\n<li>首先把手机和电脑连在同一Wifi，确保手机与电脑在同一网络环境下。</li>\n<li>然后打开charles的proxy下的proxy settings可以看到默认端口为8888<br><img src=\"/images/1614838164(1).jpg\"></li>\n<li>手机端配置代理，以我手机的ios系统为例  设置-&gt;无线局域网-&gt;选择连接wifi的后最后一个蓝色小图标-&gt;配置代理-&gt;选择手动。服务器就是你电脑的IP地址，端口就是上图所示端口。这样手机发出的网络请求也可以抓到了。<h2 id=\"3-配置ssl代理\"><a href=\"#3-配置ssl代理\" class=\"headerlink\" title=\"3. 配置ssl代理\"></a>3. 配置ssl代理</h2>主要是为了抓到https的包，解决unknown和乱码问题。证书的安装分为手机端和电脑端<h3 id=\"3-1安装电脑端证书\"><a href=\"#3-1安装电脑端证书\" class=\"headerlink\" title=\"3.1安装电脑端证书\"></a>3.1安装电脑端证书</h3></li>\n<li>点击Charles工具栏上的help-&gt;ssl proxying-&gt;Install Charles Root Certificate<br><img src=\"/images/1614839526(1).jpg\"></li>\n<li>弹出界面点击安装证书，一定要选择当前用户，不知道为啥，网上说的，点击下一步，选择将所有证书都放入下列储存，选择受信任的证书颁发机构，确定。<h3 id=\"3-2安装手机端证书\"><a href=\"#3-2安装手机端证书\" class=\"headerlink\" title=\"3.2安装手机端证书\"></a>3.2安装手机端证书</h3></li>\n<li>点击如下选项<img src=\"/images/1614839967(1).jpg\"></li>\n<li>手机浏览器进入 如下网址安装描述文件，下载好之后，ios进入设置-&gt;通用，拉到最后，点击描述文件信任安装。<br><img src=\"/images/1614840012(1).jpg\"></li>\n<li>ios设置根证书信任 设置-&gt;通用-&gt;最后的证书信任设置。把刚刚安装的描述文件打开<h3 id=\"3-3配置ssl代理\"><a href=\"#3-3配置ssl代理\" class=\"headerlink\" title=\"3.3配置ssl代理\"></a>3.3配置ssl代理</h3></li>\n<li>点击charles工具栏下的SSL ProxyingSettings</li>\n<li>勾选Enable SSL Proxying</li>\n<li>点击include下的add，这里设置的是你需要抓包的网址，如果想要监听所有就都设置为 * 即可。<br><img src=\"/images/1614841485(1).jpg\"><h2 id=\"4-完成\"><a href=\"#4-完成\" class=\"headerlink\" title=\"4.完成\"></a>4.完成</h2>这样我们基本就可以实现一般请求抓取了<br><img src=\"/images/1614841701(1).jpg\"></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckkam8u7k0001s2wh7d4cbaam","category_id":"ckkam8u7p0002s2wh2ero6i5p","_id":"ckkam8u7v0003s2wh2d0w6um3"},{"post_id":"ckkam8u820004s2whhp483pkg","category_id":"ckkam8u830005s2whhmdwh557","_id":"ckkam8u840006s2wh2i2yefl3"},{"post_id":"ckluu99ky0001kwu45ndv9fjl","category_id":"ckkam8u7p0002s2wh2ero6i5p","_id":"ckluu99l40006kwu4gfns1rpd"},{"post_id":"ckluu99l20005kwu44i5r0kf5","category_id":"ckluu99kz0002kwu42iwlc243","_id":"ckluu99l50009kwu4f13nc0kd"},{"post_id":"ckluu99kv0000kwu4ge8uaq6y","category_id":"ckluu99kz0002kwu42iwlc243","_id":"ckluu99l5000akwu4c9hhfj5q"},{"post_id":"ckluu99l00003kwu4225726fz","category_id":"ckluu99l40007kwu49ghu22w5","_id":"ckluu99l5000bkwu4e2lu4t1q"}],"PostTag":[{"post_id":"ckluu99ky0001kwu45ndv9fjl","tag_id":"ckluu99l10004kwu48ib5andv","_id":"ckluu99l40008kwu48fvl1kyl"}],"Tag":[{"name":"python","_id":"ckluu99l10004kwu48ib5andv"}]}}